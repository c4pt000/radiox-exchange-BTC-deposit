proto/src/main/proto/pb.proto:    bool is_currency_for_taker_fee_btc = 7;
proto/src/main/proto/pb.proto:    string buyers_btc_payout_address = 12;
proto/src/main/proto/pb.proto:    string buyers_btc_payout_address = 6;
proto/src/main/proto/pb.proto:    repeated RawTransactionInput btc_inputs = 5;
proto/src/main/proto/pb.proto:    int64 btc_change = 6;
proto/src/main/proto/pb.proto:    string btc_change_address = 8;
proto/src/main/proto/pb.proto:    bytes btc_pub_key = 7;
proto/src/main/proto/pb.proto:    string btc_address = 8;
proto/src/main/proto/pb.proto:    bool prevent_public_btc_network = 12;
proto/src/main/proto/pb.proto:    repeated string btc_nodes = 13;
proto/src/main/proto/pb.proto:    repeated string btc_fee_receiver_addresses = 20;
proto/src/main/proto/pb.proto:    int64 maker_fee_btc = 31;
proto/src/main/proto/pb.proto:    int64 taker_fee_btc = 32;
proto/src/main/proto/pb.proto:    bool is_currency_for_maker_fee_btc = 26;
proto/src/main/proto/pb.proto:    bool is_currency_for_taker_fee_btc = 10;
proto/src/main/proto/pb.proto:    bytes arbitrator_btc_pub_key = 23;
proto/src/main/proto/pb.proto:    string btc_address = 3;
proto/src/main/proto/pb.proto:    string btc_address = 2;
proto/src/main/proto/pb.proto:    bool pay_fee_in_Btc = 33;
proto/src/main/proto/pb.proto:    RADC_OUTPUT = 4;
proto/src/main/proto/grpc.proto:    // Get all available BSQ swap offers with a BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // Get all available v1 protocol offers with a BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // Get all user's BSQ swap offers with a BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // Get all user's open v1 protocol offers with a BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:        FIAT = 1;           // Indicates offer is to BUY or SELL RADC with a fiat currency.
proto/src/main/proto/grpc.proto:        ALTCOIN = 2;        // Indicates offer is to BUY or SELL RADC with an altcoin.
proto/src/main/proto/grpc.proto:        BSQ_SWAP = 3;       // Indicates offer is to swap RADC for BSQ.
proto/src/main/proto/grpc.proto:    string direction = 1;       // The offer's BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    string direction = 1;   // The BSQ swap offer's BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    string direction = 1;       // The offers' BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // The new BSQ swap offer's BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // The amount of RADC to be traded as a long representing satoshi units.
proto/src/main/proto/grpc.proto:    // The minimum amount of RADC to be traded as a long representing satoshi units.
proto/src/main/proto/grpc.proto:    // The fixed price of the offer as a string representing RADC units, e.g., "0.00005" or "0.00005000".
proto/src/main/proto/grpc.proto:    // The new v1 protocol offer's BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // For altcoin offers:  a string representing the fixed RADC price of the offer, e.g., "0.00005".
proto/src/main/proto/grpc.proto:    // The offer's market price margin as a percentage above or below the current market RADC price, e.g., 2.50 represents 2.5%.
proto/src/main/proto/grpc.proto:    // The amount of RADC to be traded, in satoshis.
proto/src/main/proto/grpc.proto:     // The minimum amount of RADC to be traded, in satoshis.
proto/src/main/proto/grpc.proto:    // A BUY RADC offer maker's security deposit as a percentage of the RADC amount to be traded, e.g., 15.00 represents 15%.
proto/src/main/proto/grpc.proto:    // A market price margin based offer's trigger price is the market RADC price at which the offer is automatically disabled.
proto/src/main/proto/grpc.proto:    // The offer maker's trade fee currency:  RADC or BSQ.
proto/src/main/proto/grpc.proto:    // For altcoin offers:  a string representing the new fixed RADC price of the offer, e.g., "0.00005".
proto/src/main/proto/grpc.proto:    // An offer's new market price margin as a percentage above or below the current market RADC price.
proto/src/main/proto/grpc.proto:    // A market price margin based offer's trigger price is the market RADC price at which the offer is automatically disabled.
proto/src/main/proto/grpc.proto:    // The offer's BUY (RADC) or SELL (RADC) direction.
proto/src/main/proto/grpc.proto:    // For fiat offers:  the fiat price for 1 RADC to 4 decimal places, e.g., 45000 EUR is "45000.0000".
proto/src/main/proto/grpc.proto:    // For altcoin offers:  the altcoin price for 1 RADC to 8 decimal places, e.g., 0.00005 RADC is "0.00005000".
proto/src/main/proto/grpc.proto:    // The offer's market price margin above or below the current market RADC price, e.g., 5.00 represents 5%.
proto/src/main/proto/grpc.proto:    // The offer's RADC amount in satoshis.  Ten million satoshis is represented as 10000000.
proto/src/main/proto/grpc.proto:    // The offer's minimum RADC amount in satoshis.  One million satoshis is represented as 1000000.
proto/src/main/proto/grpc.proto:    // The rounded volume of currency to be traded for RADC.
proto/src/main/proto/grpc.proto:    // The rounded, minimum volume of currency to be traded for RADC.
proto/src/main/proto/grpc.proto:    // A long representing the RADC buyer's security deposit in satoshis.
proto/src/main/proto/grpc.proto:    // A market price margin based offer's trigger price is the market RADC price at which the offer is automatically disabled.
proto/src/main/proto/grpc.proto:    // Whether the offer maker paid the trading fee in RADC or not (BSQ).
proto/src/main/proto/grpc.proto:    bool is_currency_for_maker_fee_btc = 12;
proto/src/main/proto/grpc.proto:    // For fiat offers, the baseCurrencyCode is RADC, and the counter_currency_code is the fiat currency code.
proto/src/main/proto/grpc.proto:    // For altcoin offers it is the opposite, the baseCurrencyCode is the altcoin code and the counter_currency_code is RADC.
proto/src/main/proto/grpc.proto:    // For fiat offers, the base_currency_code is RADC, and the counter_currency_code is the fiat currency code.
proto/src/main/proto/grpc.proto:    // For altcoin offers it is the opposite, the base_currency_code is the altcoin code and the counter_currency_code is RADC.
proto/src/main/proto/grpc.proto:    // A long representing the RADC seller's security deposit in satoshis.
proto/src/main/proto/grpc.proto:    // Send a 'payment started' message to a trading peer (the RADC seller).
proto/src/main/proto/grpc.proto:    // Send a 'payment received' message to a trading peer (the RADC buyer).
proto/src/main/proto/grpc.proto:    string taker_fee_currency_code = 3;     // The code of the currency (BSQ or RADC) used to pay the taker's Bisq trade fee.
proto/src/main/proto/grpc.proto:    string memo = 3;        // An optional memo saved with the sent btc transaction.
proto/src/main/proto/grpc.proto:    // A brief description of the user's role in the trade, i.e., an offer maker or taker, a RADC buyer or seller.
proto/src/main/proto/grpc.proto:    // Whether the offer taker's Bisq trade fee was paid in RADC or not (BSQ).
proto/src/main/proto/grpc.proto:    bool is_currency_for_taker_fee_btc = 6;
proto/src/main/proto/grpc.proto:    // For fiat trades:  the fiat price for 1 RADC to 4 decimal places, e.g., 41000.50 EUR is "41000.5000".
proto/src/main/proto/grpc.proto:    // For altcoin trades:  the altcoin price for 1 RADC to 8 decimal places, e.g., 0.5 RADC is "0.50000000".
proto/src/main/proto/grpc.proto:    // Whether the trade's 'start payment' message has been sent by the RADC buyer, or not.
proto/src/main/proto/grpc.proto:    // Whether the trade's 'payment received' message has been sent by the RADC seller, or not.
proto/src/main/proto/grpc.proto:    // The volume of currency traded for RADC.
proto/src/main/proto/grpc.proto:    string buyer_node_address = 1;              // The RADC buyer peer's node address.
proto/src/main/proto/grpc.proto:    string seller_node_address = 2;             // The RADC seller peer's node address.
proto/src/main/proto/grpc.proto:    bool is_buyer_maker_and_seller_taker = 5;   // Whether the RADC buyer created the original offer, or not.
proto/src/main/proto/grpc.proto:    string maker_payout_address_string = 10;    // The offer maker's RADC payout address.
proto/src/main/proto/grpc.proto:    string taker_payout_address_string = 11;    // The offer taker's RADC payout address.
proto/src/main/proto/grpc.proto:    uint64 btc_trade_amount = 3;        // The amount of RADC swapped in satoshis.
proto/src/main/proto/grpc.proto:    string maker_btc_address = 8;       // The swap offer maker's RADC wallet address.
proto/src/main/proto/grpc.proto:    string taker_btc_address = 10;      // The swap offer taker's RADC wallet address.
proto/src/main/proto/grpc.proto:    bool use_custom_tx_fee_rate = 1;    // Whether the daemon's custom btc transaction fee rate preference is set, or not.
proto/src/main/proto/grpc.proto:    uint64 custom_tx_fee_rate = 2;      // The daemon's custom btc transaction fee rate preference, in sats/byte.
proto/src/main/proto/grpc.proto:    uint64 fee_service_rate = 3;        // The Bisq network's most recently available btc transaction fee rate, in sats/byte.
proto/src/main/proto/grpc.proto:    uint64 min_fee_service_rate = 5;    // The Bisq network's minimum btc transaction fee rate, in sats/byte.
proto/src/main/proto/grpc.proto:* sending RADC or BSQ to external wallets, checking transaction fee rates, setting or unsetting
proto/src/main/proto/grpc.proto:    // Get the Bisq wallet's current BSQ and RADC balances.
proto/src/main/proto/grpc.proto:    // Get RADC balance for a wallet address.
proto/src/main/proto/grpc.proto:    // Send an amount of RADC to an external address.
proto/src/main/proto/grpc.proto:    rpc SendBtc (SendBtcRequest) returns (SendBtcReply) {
proto/src/main/proto/grpc.proto:    // This is a problematic way of verifying BSQ payment has been received for a v1 trade protocol BSQ-RADC trade,
proto/src/main/proto/grpc.proto:    // Get all bitcoin receiving addresses in the Bisq RADC wallet.
proto/src/main/proto/grpc.proto:    string currency_code = 1;   // The Bisq wallet currency (BSQ or RADC) for the balances request.
proto/src/main/proto/grpc.proto:    BalancesInfo balances = 1;  // The summary of Bisq wallet's BSQ and RADC balances.
proto/src/main/proto/grpc.proto:    string address = 1;         // The RADC wallet address being queried.
proto/src/main/proto/grpc.proto:    AddressBalanceInfo address_balance_info = 1;    // The RADC wallet address with its balance summary.
proto/src/main/proto/grpc.proto:message SendBtcRequest {
proto/src/main/proto/grpc.proto:    // The amount of RADC to send to the external address, as a string in "##.########" (RADC unit) format.
proto/src/main/proto/grpc.proto:message SendBtcReply {
proto/src/main/proto/grpc.proto:    // BSQ-RADC trade.  This BSQ payment verification problem is solved with BSQ swaps, which use a different BSQ
proto/src/main/proto/grpc.proto:    repeated AddressBalanceInfo address_balance_info = 1; // The list of RADC wallet addresses with their balances.
proto/src/main/proto/grpc.proto:    BtcBalanceInfo btc = 2;     // RADC wallet balance information.
proto/src/main/proto/grpc.proto:message BtcBalanceInfo {
proto/src/main/proto/grpc.proto:    // The RADC amount currently available to send to other addresses at the user's discretion, in satoshis.
proto/src/main/proto/grpc.proto:    // The RADC amount currently reserved to cover open offers' security deposits, and RADC sellers' payout amounts,
proto/src/main/proto/grpc.proto:    // The RADC amount being locked to cover the security deposits and RADC seller's pending trade payouts.  Locked
proto/src/main/proto/grpc.proto:    int64 balance = 2;              // The address' RADC balance in satoshis.
nodes-radiox-exchange.sh:java -jar radiox-exchange.jar --useAllProvidedNodes=true --btcNodes=172.104.64.180,radiopool.me,radioblockchain.info
build.gradle:        if (file('src/main/resources/ProposalStore_RADC_MAINNET').text.contains("oid sha256:"))
build.gradle:        implementation("org.knowm.xchange:xchange-btcmarkets:$knowmXchangeVersion")
build.gradle:        implementation("org.knowm.xchange:xchange-hitbtc:$knowmXchangeVersion")
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:import bisq.core.btc.exceptions.TxBroadcastException;
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:import bisq.core.btc.wallet.TxBroadcaster;
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:import bisq.proto.grpc.SendBtcReply;
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:import bisq.proto.grpc.SendBtcRequest;
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:    public void sendBtc(SendBtcRequest req,
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:                        StreamObserver<SendBtcReply> responseObserver) {
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:            coreApi.sendBtc(req.getAddress(),
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:                                log.info("Successfully published RADC tx: id {}, output sum {} sats, fee {} sats, size {} bytes",
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:                                var reply = SendBtcReply.newBuilder()
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:                                throw new IllegalStateException("btc transaction is null");
daemon/src/main/java/bisq/daemon/grpc/GrpcWalletsService.java:                            put(getSendBtcMethod().getFullMethodName(), new GrpcCallRateMeter(1, MINUTES));
daemon/src/test/java/bisq/daemon/grpc/interceptor/GrpcServiceRateMeteringConfigTest.java:                "sendBtc",
.gitattributes:p2p/src/main/resources/*RADC_MAINNET filter=lfs diff=lfs merge=lfs -text
.gitattributes:p2p/src/main/resources/BsqBlocks_RADC_MAINNET/* filter=lfs diff=lfs merge=lfs -text
p2p/src/main/java/bisq/network/p2p/P2PModule.java:        bindConstant().annotatedWith(named(SOCKS_5_PROXY_RADC_ADDRESS)).to(config.socks5ProxyBtcAddress);
p2p/src/main/java/bisq/network/DnsLookupTor.java: * Adapted from https://github.com/btcsuite/btcd/blob/master/connmgr/tor.go
p2p/src/main/java/bisq/network/http/HttpClientImpl.java:        // which delivers the btc proxy if set, otherwise the internal proxy.
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java: * By default there is only used the bisq internal Tor proxy, which is used for the P2P network, Btc network
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java: * (if Tor for btc is enabled) and http requests (if Tor for http requests is enabled).
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java: * If the user provides a socks5ProxyBtcAddress, this will be used for the btc network.
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java: * If socks5ProxyBtcAddress is present but no socks5ProxyHttpAddress the socks5ProxyBtcAddress will be used for http
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java: * If no socks5ProxyBtcAddress and no socks5ProxyHttpAddress is defined (default) we use socks5ProxyInternal.
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:    // proxy used for btc network
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:    private final Socks5Proxy socks5ProxyBtc;
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:    public Socks5ProxyProvider(@Named(Config.SOCKS_5_PROXY_RADC_ADDRESS) String socks5ProxyBtcAddress,
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:        socks5ProxyBtc = getProxyFromAddress(socks5ProxyBtcAddress);
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:        if (socks5ProxyBtc != null)
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:            return socks5ProxyBtc;
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:    public Socks5Proxy getSocks5ProxyBtc() {
p2p/src/main/java/bisq/network/Socks5ProxyProvider.java:        return socks5ProxyBtc;
pricenode/docker/README.md:* fill in your public and private api keys (needs a btcaverage developer subscription)
pricenode/docker/docker-compose.yml:# Fill in your own RADCAVERAGE public and private keys
pricenode/docker/docker-compose.yml:            - RADCAVERAGE_PRIVKEY=!!!!!!!!!!!!!!!!!!!!!!!!! YOUR PRIVATE KEY !!!!!!!!!!!!!!!!!!!!!!!!!!!
pricenode/docker/docker-compose.yml:            - RADCAVERAGE_PUBKEY=!!!!!!!!!!!!!!!!!!!!!!!!!! YOUR PUBKEY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:            .forEach(e -> log.info("RADC/{}: {}", e.getCurrency(), e.getPrice()));
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:        // Find the desired fiat pairs (pair format is RADC-FIAT)
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                .filter(cp -> cp.base.equals(Currency.RADC))
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:        // Find the desired altcoin pairs (pair format is ALT-RADC)
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                .filter(cp -> cp.counter.equals(Currency.RADC))
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                    // We have two kinds of currency pairs, RADC-FIAT and ALT-RADC
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                    // In the first one, RADC is the first currency of the pair
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                    // In the second type, RADC is listed as the second currency
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                    // In every Bisq ExchangeRate, RADC is one currency in the pair
pricenode/src/main/java/bisq/price/spot/ExchangeRateProvider.java:                    if (t.getCurrencyPair().base.equals(Currency.RADC)) {
pricenode/src/main/java/bisq/price/spot/providers/BitcoinAverage.java:        // because the returned data structure must contain the "btcAverageTs" key
pricenode/src/main/java/bisq/price/spot/providers/BitcoinAverage.java:        super(env, "BA", "btcAverage", Duration.ofMinutes(100));
pricenode/src/main/java/bisq/price/spot/providers/RADCMarkets.java:import org.knowm.xchange.btcmarkets.RADCMarketsExchange;
pricenode/src/main/java/bisq/price/spot/providers/RADCMarkets.java:class RADCMarkets extends ExchangeRateProvider {
pricenode/src/main/java/bisq/price/spot/providers/RADCMarkets.java:    public RADCMarkets(Environment env) {
pricenode/src/main/java/bisq/price/spot/providers/RADCMarkets.java:        super(env, "RADCMARKETS", "btcmarkets", Duration.ofMinutes(1));
pricenode/src/main/java/bisq/price/spot/providers/RADCMarkets.java:        return doGet(RADCMarketsExchange.class);
pricenode/src/main/java/bisq/price/spot/providers/CoinGecko.java:                        // API returns the RADC/Alt rate, we need the Alt/RADC rate
pricenode/src/main/java/bisq/price/spot/providers/Coinpaprika.java:     * Used to determine the currencies in which the RADC price can be quoted. There seems
pricenode/src/main/java/bisq/price/spot/providers/Coinpaprika.java:     * is the list of allowed values as per the API documentation, but without RADC and ETH
pricenode/src/main/java/bisq/price/spot/providers/Coinpaprika.java:     * as it makes no sense to quote the RADC price in them.
pricenode/src/main/java/bisq/price/spot/providers/Coinpaprika.java:                                        "https://api.coinpaprika.com/v1/tickers/btc-bitcoin?quotes=" +
pricenode/src/main/java/bisq/price/spot/ExchangeRateController.java:            name = Config.RADC_FEE_INFO;                 // name changed for clarity
pricenode/src/main/java/bisq/price/mining/FeeRateService.java:            if ("RADC".equals(currency)) {
pricenode/src/main/java/bisq/price/mining/FeeRateService.java:        metadata.put(Config.RADC_FEES_TS, Instant.now().getEpochSecond());
pricenode/src/main/java/bisq/price/mining/FeeRateService.java:        allFeeRates.put(Config.RADC_TX_FEE, averageFeeRate);
pricenode/src/main/java/bisq/price/mining/FeeRateService.java:        allFeeRates.put(Config.RADC_MIN_TX_FEE, averageMinFeeRate);
pricenode/src/main/java/bisq/price/mining/providers/MempoolFeeRateProvider.java:        return new FeeRate("RADC", MIN_FEE_RATE_FOR_TRADING, MIN_FEE_RATE_FOR_WITHDRAWAL, Instant.now().getEpochSecond());
pricenode/src/main/java/bisq/price/mining/providers/MempoolFeeRateProvider.java:        return new FeeRate("RADC", estimatedFeeRate, minimumFee, Instant.now().getEpochSecond());
pricenode/src/test/java/bisq/price/AbstractExchangeRateProviderTest.java:     * Check that every retrieved currency pair is between RADC and either
pricenode/src/test/java/bisq/price/spot/providers/RADCMarketsTest.java:public class RADCMarketsTest extends AbstractExchangeRateProviderTest {
pricenode/src/test/java/bisq/price/spot/providers/RADCMarketsTest.java:        doGet_successfulCall(new RADCMarkets(new StandardEnvironment()));
pricenode/src/test/java/bisq/price/mining/providers/MempoolFeeRateProviderTest.java:                return new FeeRate("RADC", feeRate, MIN_FEE_RATE_FOR_WITHDRAWAL, Instant.now().getEpochSecond());
pricenode/src/test/java/bisq/price/mining/FeeRateServiceTest.java:        assertNotEquals(0L, retrievedData.get(Config.RADC_FEES_TS));
pricenode/src/test/java/bisq/price/mining/FeeRateServiceTest.java:        assertEquals(expectedFeeRate, retrievedDataMap.get(Config.RADC_TX_FEE));
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                 * typical location of backed-up user payload: ~/.local/share/Bisq/btc_mainnet/db/backup/backups_UserPayload
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:            new Popup().information(Res.get("popup.warning.notSufficientConnectionsToBtcNetwork", walletsSetup.getMinBroadcastConnections())).show();
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:    public static void showWantToBurnRADCPopup(Coin miningFee, Coin amount, CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:        new Popup().warning(Res.get("popup.warning.burnRADC", btcFormatter.formatCoinWithCode(miningFee),
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                btcFormatter.formatCoinWithCode(amount))).show();
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                                           Coin btcForIssuance,
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                                           CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:        if (btcForIssuance != null) {
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                    bsqFormatter.formatRADCWithCode(btcForIssuance),
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                    btcFormatter.formatCoinWithCode(miningFee),
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                    btcFormatter.formatCoinWithCode(miningFee),
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:                                           CoinFormatter btcFormatter, String type,
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:        showBsqFeeInfoPopup(fee, miningFee, null, txVsize, bsqFormatter, btcFormatter, type, actionHandler);
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:        Coin requiredBtc = bsqPrice.getAmountByVolume(bsqAmountAsVolume);
desktop/src/main/java/bisq/desktop/util/GUIUtil.java:        Volume volumeByAmount = usdPrice.getVolumeByAmount(requiredBtc);
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:                    this::validateIfNotFractionalBtcValue,
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:                    this::validateIfNotExceedsMaxBtcValue,
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:    private ValidationResult validateIfNotFractionalBtcValue(String input) {
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:            return new ValidationResult(false, Res.get("validation.btc.fraction"));
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:    private ValidationResult validateIfNotExceedsMaxBtcValue(String input) {
desktop/src/main/java/bisq/desktop/util/validation/BsqValidator.java:                return new ValidationResult(false, Res.get("validation.btc.toLarge", bsqFormatter.formatCoinWithCode(maxValue)));
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:public class BtcValidator extends NumberValidator {
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:    public BtcValidator(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                    this::validateIfNotFractionalBtcValue,
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                    this::validateIfNotExceedsMaxBtcValue,
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:    protected ValidationResult validateIfNotFractionalBtcValue(String input) {
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                return new ValidationResult(false, Res.get("validation.btc.fraction"));
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:    protected ValidationResult validateIfNotExceedsMaxBtcValue(String input) {
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                return new ValidationResult(false, Res.get("validation.btc.toLarge", formatter.formatCoinWithCode(maxValue)));
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                return new ValidationResult(false, Res.get("validation.btc.exceedsMaxTradeLimit", formatter.formatCoinWithCode(maxTradeLimit)));
desktop/src/main/java/bisq/desktop/util/validation/BtcValidator.java:                return new ValidationResult(false, Res.get("validation.btc.toSmall", formatter.formatCoinWithCode(minValue)));
desktop/src/main/java/bisq/desktop/util/validation/SecurityDepositValidator.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/util/DisplayUtils.java:        String feeInBtc = makerFeeAsCoin != null ? formatter.formatCoinWithCode(makerFeeAsCoin) : Res.get("shared.na");
desktop/src/main/java/bisq/desktop/util/DisplayUtils.java:            return Res.get("feeOptionWindow.fee", feeInBtc, feeInFiat);
desktop/src/main/java/bisq/desktop/util/DisplayUtils.java:            return feeInBtc;
desktop/src/main/java/bisq/desktop/util/DisplayUtils.java:    public static boolean hasBtcValidDecimals(String input, CoinFormatter coinFormatter) {
desktop/src/main/java/bisq/desktop/app/BisqApp.java:import bisq.desktop.main.overlays.windows.BtcEmptyWalletWindow;
desktop/src/main/java/bisq/desktop/app/BisqApp.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/app/BisqApp.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/app/BisqApp.java:                    injector.getInstance(BtcEmptyWalletWindow.class).show();
desktop/src/main/java/bisq/desktop/app/BisqApp.java:                                injector.getInstance(BtcWalletService.class),
desktop/src/main/java/bisq/desktop/app/BisqApp.java:                    if (injector.getInstance(BtcWalletService.class).isWalletReady())
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:                          BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:        Transaction transaction = btcWalletService.getTransaction(txId);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:            Transaction tx = btcWalletService.getTransaction(txId);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:                    if (btcWalletService.isTransactionOutputMine(txo)) {
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionAwareTrade.java:                            Address receiverAddress = txo.getScriptPubKey().getToAddress(btcWalletService.getParams());
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:import bisq.core.btc.listeners.TxConfidenceListener;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:import bisq.core.btc.wallet.WalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        btcWalletService = null;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                         BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        Coin valueSentToMe = btcWalletService.getValueSentToMeForTransaction(transaction);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        Coin valueSentFromMe = btcWalletService.getValueSentFromMeForTransaction(transaction);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                if (!btcWalletService.isTransactionOutputMine(output)) {
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                if (btcWalletService.isTransactionOutputMine(output) &&
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                if (!btcWalletService.isTransactionOutputMine(output)) {
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                                // already when funding the deposit tx we show 0 RADC as amount.
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                // Find my RADC output address
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                var tx = btcWalletService.getTransaction(((BsqSwapTrade) tradable).getTxId());
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                                .filter(output -> output.isMine(btcWalletService.getWallet()))
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:                                .map(output -> output.getScriptPubKey().getToAddress(btcWalletService.getParams()))
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        btcWalletService.addTxConfidenceListener(txConfidenceListener);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsListItem.java:        btcWalletService.removeTxConfidenceListener(txConfidenceListener);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:    private TransactionsView(BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                             @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:        btcWalletService.addChangeEventListener(walletChangeEventListener);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:        btcWalletService.removeChangeEventListener(walletChangeEventListener);
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:        List<TransactionsListItem> transactionsListItems = btcWalletService.getTransactions(false)
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                                            btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                            btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                                    TransactionConfidence confidence = btcWalletService.getConfidenceForTxId(item.getTxId());
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                btcWalletService.doubleSpendTransaction(txId, () -> {
desktop/src/main/java/bisq/desktop/main/funds/transactions/TransactionsView.java:                        btcWalletService.swapAnyTradeEntryContextToAvailableEntry(tradable.getId());
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:import bisq.core.btc.wallet.WalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:                          BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:        this.btcWalletService = null;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedListItem.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:    private LockedView(BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:                       @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:                    Optional<AddressEntry> addressEntryOptional = btcWalletService.getAddressEntry(trade.getId(),
desktop/src/main/java/bisq/desktop/main/funds/locked/LockedView.java:                            btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:    private final BtcWalletService walletService;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:    private DepositView(BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositView.java:                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:import bisq.core.btc.listeners.TxConfidenceListener;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:    private final BtcWalletService walletService;
desktop/src/main/java/bisq/desktop/main/funds/deposit/DepositListItem.java:    DepositListItem(AddressEntry addressEntry, BtcWalletService walletService, CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:                            BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:        this.btcWalletService = null;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:        Optional<AddressEntry> addressEntryOptional = btcWalletService.getAddressEntry(openOffer.getId(),
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedListItem.java:            balance = btcWalletService.getBalanceForAddress(addressEntry.getAddress());
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:    private ReservedView(BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:                         @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:                    Optional<AddressEntry> addressEntryOptional = btcWalletService.getAddressEntry(openOffer.getId(), AddressEntry.Context.RESERVED_FOR_TRADE);
desktop/src/main/java/bisq/desktop/main/funds/reserved/ReservedView.java:                            btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalListItem.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalListItem.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalListItem.java:    private final BtcWalletService walletService;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalListItem.java:    public WithdrawalListItem(AddressEntry addressEntry, BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.exceptions.AddressEntryException;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.exceptions.InsufficientFundsException;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:import bisq.core.util.validation.BtcAddressValidator;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:    private final BtcAddressValidator btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:    private WithdrawalView(BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                           @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                           BtcAddressValidator btcAddressValidator,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        this.btcAddressValidator = btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                Transaction feeEstimationTransaction = btcWalletService.getFeeEstimationTransactionForMultipleAddresses(fromAddresses, amountAsCoin, feeRate);
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                    feeEstimationTransaction = btcWalletService.getFeeEstimationTransactionForMultipleAddresses(fromAddresses, amountAsCoin.add(feeEstimationTransaction.getFee()), feeRate);
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                Coin dust = btcWalletService.getDust(feeEstimationTransaction);
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                                                .forEach(trade -> btcWalletService.getAddressEntry(trade.getId(), AddressEntry.Context.TRADE_PAYOUT)
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                                                            if (btcWalletService.getBalanceForAddress(addressEntry.getAddress()).isZero())
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        observableList.setAll(btcWalletService.getAddressEntriesForAvailableBalanceStream()
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:                .map(addressEntry -> new WithdrawalListItem(addressEntry, btcWalletService, formatter))
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        if (btcWalletService.isEncrypted()) {
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:            Transaction transaction = btcWalletService.sendFundsForMultipleAddresses(fromAddresses,
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:            new Popup().warning(Res.get("validation.btc.invalidAddress")).show();
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:        if (!btcAddressValidator.validate(withdrawToTextField.getText()).isValid) {
desktop/src/main/java/bisq/desktop/main/funds/withdrawal/WithdrawalView.java:            new Popup().warning(Res.get("validation.btc.invalidAddress")).show();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:import bisq.core.btc.nodes.LocalBitcoinNode;
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    private Timer checkNumberOfBtcPeersTimer;
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                         BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        TxIdTextField.setWalletService(btcWalletService);
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        setupBtcNumPeersWatcher();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        bisqSetup.setShowPopupIfInvalidBtcConfigHandler(this::showPopupIfInvalidBtcConfig);
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        bisqSetup.getBtcSyncProgress().addListener((observable, oldValue, newValue) -> updateBtcSyncProgress());
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        daoPresentation.getBsqSyncProgress().addListener((observable, oldValue, newValue) -> updateBtcSyncProgress());
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    private void setupBtcNumPeersWatcher() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                if (checkNumberOfBtcPeersTimer != null)
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                    checkNumberOfBtcPeersTimer.stop();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                checkNumberOfBtcPeersTimer = UserThread.runAfter(() -> {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                if (checkNumberOfBtcPeersTimer != null)
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:                    checkNumberOfBtcPeersTimer.stop();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        if (bisqSetup.getBtcSyncProgress().get() == 1) {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:            bisqSetup.getBtcSyncProgress().addListener((observable, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    private void showPopupIfInvalidBtcConfig() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        new Popup().warning(Res.get("settings.net.warn.invalidBtcConfig"))
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    private void updateBtcSyncProgress() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        final DoubleProperty btcSyncProgress = bisqSetup.getBtcSyncProgress();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        if (btcSyncProgress.doubleValue() < 1) {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:            combinedSyncProgress.set(btcSyncProgress.doubleValue());
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    StringProperty getBtcInfo() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        combinedInfo.bind(bisqSetup.getBtcInfo());
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    StringProperty getBtcSplashSyncIconId() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        return bisqSetup.getBtcSplashSyncIconId();
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:    BooleanProperty getUseTorForRADC() {
desktop/src/main/java/bisq/desktop/main/MainViewModel.java:        return bisqSetup.getUseTorForRADC();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.fxml:    <TitledGroupBg fx:id="btcHeader" GridPane.rowSpan="5"/>
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.fxml:        <AutoTooltipLabel fx:id="localhostBtcNodeInfoLabel" styleClass="small-text"/>
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.fxml:    <AutoTooltipCheckBox fx:id="useTorForBtcJCheckBox" GridPane.rowIndex="1"/>
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.fxml:        <AutoTooltipLabel fx:id="btcNodesLabel" styleClass="small-text"/>
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.fxml:        <InputTextField fx:id="btcNodesInputTextField"/>
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:import bisq.core.btc.nodes.BtcNodes;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:import bisq.core.btc.nodes.LocalBitcoinNode;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    TitledGroupBg p2pHeader, btcHeader;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    Label btcNodesLabel, bitcoinNodesLabel, localhostBtcNodeInfoLabel;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    InputTextField btcNodesInputTextField;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    CheckBox useTorForBtcJCheckBox;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    private final BtcNodes btcNodes;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    private ChangeListener<Boolean> btcNodesInputTextFieldFocusListener;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    private BtcNodes.BitcoinNodesOption selectedBitcoinNodesOption;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                               BtcNodes btcNodes,
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        this.btcNodes = btcNodes;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcHeader.setText(Res.get("settings.net.btcHeader"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesLabel.setText(Res.get("settings.net.btcNodesLabel"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useTorForBtcJCheckBox.setText(Res.get("settings.net.useTorForBtcJLabel"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        localhostBtcNodeInfoLabel.setText(Res.get("settings.net.localhostBtcNodeInfo"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useProvidedNodesRadio.setUserData(BtcNodes.BitcoinNodesOption.PROVIDED);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useCustomNodesRadio.setUserData(BtcNodes.BitcoinNodesOption.CUSTOM);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        usePublicNodesRadio.setUserData(BtcNodes.BitcoinNodesOption.PUBLIC);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        selectedBitcoinNodesOption = BtcNodes.BitcoinNodesOption.values()[preferences.getBitcoinNodesOptionOrdinal()];
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        if ((selectedBitcoinNodesOption == BtcNodes.BitcoinNodesOption.CUSTOM &&
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                (selectedBitcoinNodesOption == BtcNodes.BitcoinNodesOption.PUBLIC && isPreventPublicBtcNetwork())) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:            selectedBitcoinNodesOption = BtcNodes.BitcoinNodesOption.PROVIDED;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                selectedBitcoinNodesOption = (BtcNodes.BitcoinNodesOption) newValue.getUserData();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.setPromptText(Res.get("settings.net.ips"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.setValidator(regexValidator);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.setErrorMessage(Res.get("validation.invalidAddressList"));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextFieldFocusListener = (observable, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    && !btcNodesInputTextField.getText().equals(preferences.getBitcoinNodes())
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    && btcNodesInputTextField.validate()) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                preferences.setBitcoinNodes(btcNodesInputTextField.getText());
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        filterPropertyListener = (observable, oldValue, newValue) -> applyPreventPublicBtcNetwork();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:            applyPreventPublicBtcNetwork();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useTorForBtcJCheckBox.setSelected(preferences.getUseTorForBitcoinJ());
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useTorForBtcJCheckBox.setOnAction(event -> {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:            boolean selected = useTorForBtcJCheckBox.isSelected();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                        .onClose(() -> useTorForBtcJCheckBox.setSelected(!selected))
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.setText(preferences.getBitcoinNodes());
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.focusedProperty().addListener(btcNodesInputTextFieldFocusListener);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useTorForBtcJCheckBox.setOnAction(null);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.focusedProperty().removeListener(btcNodesInputTextFieldFocusListener);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    private boolean isPreventPublicBtcNetwork() {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java://                filterManager.getFilter().isPreventPublicBtcNetwork();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useTorForBtcJCheckBox.setDisable(localBitcoinNodeShouldBeUsed);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesLabel.setDisable(localBitcoinNodeShouldBeUsed);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        btcNodesInputTextField.setDisable(localBitcoinNodeShouldBeUsed);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        useProvidedNodesRadio.setDisable(localBitcoinNodeShouldBeUsed || !btcNodes.useProvidedBtcNodes());
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        usePublicNodesRadio.setDisable(localBitcoinNodeShouldBeUsed || isPreventPublicBtcNetwork());
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        BtcNodes.BitcoinNodesOption currentBitcoinNodesOption = BtcNodes.BitcoinNodesOption.values()[preferences.getBitcoinNodesOptionOrdinal()];
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                btcNodesInputTextField.setDisable(false);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                btcNodesLabel.setDisable(false);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                if (!btcNodesInputTextField.getText().isEmpty()
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                        && btcNodesInputTextField.validate()
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                        && currentBitcoinNodesOption != BtcNodes.BitcoinNodesOption.CUSTOM) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    configFileEditor.clearOption(Config.NUM_CONNECTIONS_FOR_RADC);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                        if (isPreventPublicBtcNetwork()) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                btcNodesInputTextField.setDisable(true);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                btcNodesLabel.setDisable(true);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                if (currentBitcoinNodesOption != BtcNodes.BitcoinNodesOption.PUBLIC) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    configFileEditor.setOption(Config.NUM_CONNECTIONS_FOR_RADC,
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                            String.valueOf(Config.DEFAULT_NUM_CONNECTIONS_FOR_RADC_PUBLIC));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                                    selectedBitcoinNodesOption = BtcNodes.BitcoinNodesOption.PROVIDED;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                                    configFileEditor.clearOption(Config.NUM_CONNECTIONS_FOR_RADC);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                if (btcNodes.useProvidedBtcNodes()) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    btcNodesInputTextField.setDisable(true);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    btcNodesLabel.setDisable(true);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    if (currentBitcoinNodesOption != BtcNodes.BitcoinNodesOption.PROVIDED) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                        configFileEditor.clearOption(Config.NUM_CONNECTIONS_FOR_RADC);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    selectedBitcoinNodesOption = BtcNodes.BitcoinNodesOption.PUBLIC;
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                    configFileEditor.setOption(Config.NUM_CONNECTIONS_FOR_RADC,
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:                            String.valueOf(Config.DEFAULT_NUM_CONNECTIONS_FOR_RADC_PUBLIC));
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:    private void applyPreventPublicBtcNetwork() {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        final boolean preventPublicBtcNetwork = isPreventPublicBtcNetwork();
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        usePublicNodesRadio.setDisable(localBitcoinNode.shouldBeUsed() || preventPublicBtcNetwork);
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:        if (preventPublicBtcNetwork && selectedBitcoinNodesOption == BtcNodes.BitcoinNodesOption.PUBLIC) {
desktop/src/main/java/bisq/desktop/main/settings/network/NetworkSettingsView.java:            selectedBitcoinNodesOption = BtcNodes.BitcoinNodesOption.PROVIDED;
desktop/src/main/java/bisq/desktop/main/settings/about/AboutView.java:        boolean isBtc = Res.getBaseCurrencyCode().equals("RADC");
desktop/src/main/java/bisq/desktop/main/settings/about/AboutView.java:        addTitledGroupBg(root, ++gridRow, isBtc ? 3 : 2, Res.get("setting.about.providers"), Layout.GROUP_DISTANCE);
desktop/src/main/java/bisq/desktop/main/settings/about/AboutView.java:        label = addLabel(root, gridRow, Res.get(isBtc ? "setting.about.apisWithFee" : "setting.about.apis"), Layout.TWICE_FIRST_ROW_AND_GROUP_DISTANCE);
desktop/src/main/java/bisq/desktop/main/settings/about/AboutView.java:        if (isBtc)
desktop/src/main/java/bisq/desktop/main/settings/about/AboutView.java:        addCompactTopLabelTextField(root, ++gridRow, Res.get("setting.about.shortcuts.openEmergencyBtcWalletTool"),
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:    private TextField btcExplorerTextField;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:            editCustomBtcExplorer;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:                           @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        Tuple2<TextField, Button> btcExp = addTextFieldWithEditButton(root, ++gridRow, Res.get("setting.preferences.explorer"));
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        btcExplorerTextField = btcExp.first;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        editCustomBtcExplorer = btcExp.second;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        autoConfTradeLimitTf.setValidator(new BtcValidator(formatter));
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        btcExplorerTextField.setText(preferences.getBlockChainExplorer().name);
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        editCustomBtcExplorer.setOnAction(e -> {
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:                        btcExplorerTextField.setText(preferences.getBlockChainExplorer().name);
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java:        editCustomBtcExplorer.setOnAction(null);
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:    private TextField btcExplorerTextField, bsqExplorerTextField;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:            editCustomBtcExplorer, editCustomBsqExplorer;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:                           @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        Tuple2<TextField, Button> btcExp = addTextFieldWithEditButton(root, ++gridRow, Res.get("setting.preferences.explorer"));
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        btcExplorerTextField = btcExp.first;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        editCustomBtcExplorer = btcExp.second;
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        autoConfTradeLimitTf.setValidator(new BtcValidator(formatter));
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        btcExplorerTextField.setText(preferences.getBlockChainExplorer().name);
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        editCustomBtcExplorer.setOnAction(e -> {
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:            EditCustomExplorerWindow urlWindow = new EditCustomExplorerWindow("RADC",
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:                        btcExplorerTextField.setText(preferences.getBlockChainExplorer().name);
desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java.null:        editCustomBtcExplorer.setOnAction(null);
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsView.java:            // We want to separate BSQ and RADC fees so we use a prefix
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsView.java:            if (item.getBsqSwapTrade().getOffer().isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsView.java:                return "RADC" + tradeFee;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:                                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsDataModel.java:                        btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:import bisq.core.btc.listeners.TxConfidenceListener;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:            CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:        return btcFormatter.formatCoin(bsqSwapTrade.getAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/bsqswaps/UnconfirmedBsqSwapsListItem.java:        return btcFormatter.formatCoinWithCode(Coin.valueOf(bsqSwapTrade.getBsqSwapProtocolModel().getTxFee()));
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesListItem.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesListItem.java:    FailedTradesListItem(Trade trade, CoinFormatter btcFormatter, FailedTradesManager failedTradesManager) {
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesListItem.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesListItem.java:        return btcFormatter.formatCoin(trade.getAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesDataModel.java:                                 @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesDataModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/failedtrades/FailedTradesDataModel.java:                        .map(trade -> new FailedTradesListItem(trade, btcFormatter, failedTradesManager))
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:import bisq.core.util.validation.BtcAddressValidator;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:    public final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:    public final BtcAddressValidator btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                                  @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                                  BtcAddressValidator btcAddressValidator,
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:        this.btcAddressValidator = btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                ? btcFormatter.formatCoinWithCode(dataModel.getTrade().getAmount())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:            return btcFormatter.formatCoinWithCode(txFee) + percentage;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:            if (dataModel.isMaker() && dataModel.getOffer().isCurrencyForMakerFeeBtc() ||
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                    !dataModel.isMaker() && dataModel.getTrade().isCurrencyForTakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                Coin tradeFeeInRADC = dataModel.getTradeFeeInRADC();
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                String percentage = GUIUtil.getPercentageOfTradeAmount(tradeFeeInRADC, trade.getAmount(),
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:                return btcFormatter.formatCoinWithCode(tradeFeeInRADC) + percentage;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java:            return btcFormatter.formatCoinWithCode(securityDeposit) + percentage;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:    public final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                                  BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                                  @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:        this.btcFormatter = formatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:    Coin getTradeFeeInRADC() {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                    if (offer.isCurrencyForMakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                if (trade.isCurrencyForTakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                    if (offer.isCurrencyForMakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                if (trade.isCurrencyForTakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                    if (offer.isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                        return Coin.ZERO; // getTradeFeeInRADC is used for RADC
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                if (trade.isCurrencyForTakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                    return Coin.ZERO; // getTradeFeeInRADC is used for RADC
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                .map(trade -> new PendingTradesListItem(trade, btcFormatter))
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:        long remainingLockTime = lockTime - btcWalletService.getBestChainHeight();
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:                    btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java:            TransactionConfidence confidenceForTxId = btcWalletService.getConfidenceForTxId(depositTxId);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:        model.dataModel.btcWalletService.addNewBestBlockListener(newBestBlockListener);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:            model.dataModel.btcWalletService.removeNewBestBlockListener(newBestBlockListener);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:        String buyerPayoutAmount = model.btcFormatter.formatCoinWithCode(disputeResult.getBuyerPayoutAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:        String sellerPayoutAmount = model.btcFormatter.formatCoinWithCode(disputeResult.getSellerPayoutAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:        int bestChainHeight = model.dataModel.btcWalletService.getBestChainHeight();
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/TradeStepView.java:                int bestChainHeight = model.dataModel.btcWalletService.getBestChainHeight();
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep1View.java:                    model.dataModel.btcWalletService);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep2View.java:                    model.dataModel.btcWalletService);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep4View.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep4View.java:            addCompactTopLabelTextField(gridPane, gridRow, getBtcTradeAmountLabel(), model.getTradeVolume(), Layout.TWICE_FIRST_ROW_DISTANCE);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep4View.java:        model.dataModel.btcWalletService.swapTradeEntryToAvailableEntry(trade.getId(), AddressEntry.Context.TRADE_PAYOUT);
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/buyer/BuyerStep4View.java:    protected String getBtcTradeAmountLabel() {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep4View.java:    protected String getBtcTradeAmountLabel() {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep1View.java:        return Res.get("portfolio.pending.step1.info", Res.get("shared.TheRADCBuyer"));
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesListItem.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesListItem.java:    public PendingTradesListItem(Trade trade, CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesListItem.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesListItem.java:        return btcFormatter.formatCoin(trade.getAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferView.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferView.java:        super(model, navigation, preferences, offerDetailsWindow, btcFormatter, bsqFormatter);
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:                            BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:                btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferDataModel.java:        double offerBuyerSecurityDepositAsPercent = CoinUtil.getAsPercentPerBtc(offerBuyerSecurityDeposit,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferViewModel.java:                              BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferViewModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferViewModel.java:                btcValidator,
desktop/src/main/java/bisq/desktop/main/portfolio/duplicateoffer/DuplicateOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:                              BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:                btcValidator,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:        // do not update RADC Amount or minAmount here
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferViewModel.java:        // issue 2798: "after a few edits of offer the RADC amount has increased"
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferView.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferView.java:        super(model, navigation, preferences, offerDetailsWindow, btcFormatter, bsqFormatter);
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferView.java:        amountBtcLabel.setDisable(true);
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferView.java:        minAmountBtcLabel.setDisable(true);
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:                       BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:                       @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:                btcWalletService,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/editoffer/EditOfferDataModel.java:        double buyerSecurityDepositPercent = CoinUtil.getAsPercentPerBtc(offer.getBuyerSecurityDeposit(), offer.getAmount());
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersView.java:        AMOUNT(Res.get("shared.RADCMinMax")),
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:    OpenOfferListItem(OpenOffer openOffer, PriceUtil priceUtil, CoinFormatter btcFormatter, BsqFormatter bsqFormatter, OpenOfferManager openOfferManager) {
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:        return DisplayUtils.formatAmount(getOffer(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:        return offer.isCurrencyForMakerFeeBtc() ?
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOfferListItem.java:                btcFormatter.formatCoinWithCode(offer.getMakerFee()) :
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersDataModel.java:                               @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersDataModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersDataModel.java:                        .map(item -> new OpenOfferListItem(item, priceUtil, btcFormatter, bsqFormatter, openOfferManager))
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:    Coin getTotalTradeFee(boolean expectBtcFee) {
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:        return closedTradableManager.getTotalTradeFee(getListAsTradables(), expectBtcFee);
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:    boolean isCurrencyForTradeFeeBtc(Tradable item) {
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesDataModel.java:        return item != null && closedTradableManager.isCurrencyForTradeFeeBtc(item);
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:        TRADE_FEE_RADC(Res.get("shared.tradeFee") + " RADC"),
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:        tradeFeeColumn.setGraphic(new AutoTooltipLabel(ColumnNames.TRADE_FEE_RADC.toString().replace(" RADC", "")));
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:            // We want to separate BSQ and RADC fees so we use a prefix
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:            if (item.getTradable().getOffer().isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:                return "RADC" + tradeFee;
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:                if (model.dataModel.isCurrencyForTradeFeeBtc(item.getTradable())) {
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:                    columns[ColumnNames.TRADE_FEE_RADC.ordinal()] = item.getTradeFeeAsString(false);
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesView.java:                    columns[ColumnNames.TRADE_FEE_RADC.ordinal()] = "";
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesViewModel.java:    public String getTotalTradeFeeInBtc(Coin totalTradeAmount) {
desktop/src/main/java/bisq/desktop/main/portfolio/closedtrades/ClosedTradesViewModel.java:        return closedTradableFormatter.getTotalTradeFeeInBtcAsString(totalTradeAmount, totalTradeFee);
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqEmptyWalletWindow.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqEmptyWalletWindow.java:    protected static final Logger log = LoggerFactory.getLogger(BtcEmptyWalletWindow.class);
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqEmptyWalletWindow.java:        addTopLabelTextField(gridPane, ++rowIndex, Res.get("emptyWalletWindow.bsq.btcBalance"),
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqEmptyWalletWindow.java:                bsqFormatter.formatRADCWithCode(bsqWalletService.getAvailableNonBsqBalance().value), 10);
desktop/src/main/java/bisq/desktop/main/overlays/windows/TacWindow.java:                "    - Leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'.\n" +
desktop/src/main/java/bisq/desktop/main/overlays/windows/WalletPasswordWindow.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ContractWindow.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/overlays/windows/ContractWindow.java:                Res.get("contractWindow.btcAddresses"),
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.exceptions.TransactionVerificationException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.exceptions.TxBroadcastException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.exceptions.WalletException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.wallet.TradeWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.wallet.TxBroadcaster;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ManualPayoutTxWindow.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ClosedTradesSummaryWindow.java:                Res.get("closedTradesSummaryWindow.totalTradeFeeInBtc.title"),
desktop/src/main/java/bisq/desktop/main/overlays/windows/ClosedTradesSummaryWindow.java:                model.getTotalTradeFeeInBtc(totalTradeAmount));
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:                                BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/ShowWalletDataWindow.java:        if (btcWalletService.isEncrypted()) {
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:    public BsqSwapOfferDetailsWindow(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:        String btcDirectionInfo;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:        String btcAmount;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:        btcAmount = formatter.formatCoinWithCode(amount);
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:            btcDirectionInfo = isSellOffer ? toReceive : toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:            btcDirectionInfo = isBuyOffer ? toReceive : toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:            btcAmount += minus + minerFeePostFix;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:            btcAmount += plus + minerFeePostFix;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:        String btcAmountTitle = Res.get("shared.btcAmount");
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:        addConfirmationLabelLabel(gridPane, ++rowIndex, btcAmountTitle + btcDirectionInfo, btcAmount);
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqSwapOfferDetailsWindow.java:            addConfirmationLabelLabel(gridPane, ++rowIndex, Res.get("offerDetailsWindow.minBtcAmount"),
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:public final class BtcEmptyWalletWindow extends Overlay<BtcEmptyWalletWindow> {
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:    protected static final Logger log = LoggerFactory.getLogger(BtcEmptyWalletWindow.class);
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:    public BtcEmptyWalletWindow(WalletPasswordWindow walletPasswordWindow,
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                                BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                                @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:        headLine(Res.get("emptyWalletWindow.headline", "RADC"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:        Coin totalBalance = btcWalletService.getAvailableBalance();
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                btcFormatter.formatCoinWithCode(totalBalance), 10).second;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                if (btcWalletService.isEncrypted()) {
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                btcWalletService.emptyBtcWallet(addressInputTextField.getText(),
desktop/src/main/java/bisq/desktop/main/overlays/windows/BtcEmptyWalletWindow.java:                            balanceTextField.setText(btcFormatter.formatCoinWithCode(btcWalletService.getAvailableBalance()));
desktop/src/main/java/bisq/desktop/main/overlays/windows/TxDetails.java:        this.note = Res.get("txDetailsWindow.btc.note");
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        InputTextField btcFeeReceiverAddressesTF = addInputTextField(gridPane, ++rowIndex,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                Res.get("filterWindow.btcFeeReceiverAddresses"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        InputTextField btcNodesTF = addInputTextField(gridPane, ++rowIndex,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                Res.get("filterWindow.btcNode"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        CheckBox preventPublicBtcNetworkCheckBox = addLabelCheckBox(gridPane, ++rowIndex,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                Res.get("filterWindow.preventPublicBtcNetwork"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        InputTextField makerFeeBtcTF = addInputTextField(gridPane, ++rowIndex,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                Res.get("filterWindow.makerFeeBtc"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:        InputTextField takerFeeBtcTF = addInputTextField(gridPane, ++rowIndex,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                Res.get("filterWindow.takerFeeBtc"));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:            setupFieldFromList(btcFeeReceiverAddressesTF, filter.getBtcFeeReceiverAddresses());
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:            setupFieldFromList(btcNodesTF, filter.getBtcNodes());
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:            preventPublicBtcNetworkCheckBox.setSelected(filter.isPreventPublicBtcNetwork());
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:            makerFeeBtcTF.setText(btcFormatter.formatCoin(Coin.valueOf(filter.getMakerFeeBtc())));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:            takerFeeBtcTF.setText(btcFormatter.formatCoin(Coin.valueOf(filter.getTakerFeeBtc())));
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        preventPublicBtcNetworkCheckBox.isSelected(),
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        readAsList(btcNodesTF),
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        readAsList(btcFeeReceiverAddressesTF),
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        ParsingUtils.parseToCoin(makerFeeBtcTF.getText(), btcFormatter).value,
desktop/src/main/java/bisq/desktop/main/overlays/windows/FilterWindow.java:                        ParsingUtils.parseToCoin(takerFeeBtcTF.getText(), btcFormatter).value,
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:    public BsqTradeDetailsWindow(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:        String btcDirectionInfo;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:        String btcAmount = formatter.formatCoinWithCode(bsqSwapTrade.getAmountAsLong());
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:            btcDirectionInfo = toReceive;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:            btcAmount += minus + minerFeePostFix;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:            btcDirectionInfo = toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:            btcAmount += plus + minerFeePostFix;
desktop/src/main/java/bisq/desktop/main/overlays/windows/BsqTradeDetailsWindow.java:        addConfirmationLabelLabel(gridPane, ++rowIndex, Res.get("shared.btcAmount") + btcDirectionInfo, btcAmount);
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.TxFeeEstimationService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.exceptions.TransactionVerificationException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.exceptions.TxBroadcastException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.exceptions.WalletException;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.wallet.TradeWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:import bisq.core.btc.wallet.TxBroadcaster;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:    public DisputeSummaryWindow(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:                                BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:        Tuple2<Coin, Integer> feeTuple = txFeeEstimationService.getEstimatedFeeAndTxVsize(outputAmount, btcWalletService);
desktop/src/main/java/bisq/desktop/main/overlays/windows/DisputeSummaryWindow.java:            Transaction tx = btcWalletService.createRefundPayoutTx(buyerPayoutAmount,
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:    public OfferDetailsWindow(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:                              BtcWalletService btcWalletService) {
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:        String btcDirectionInfo = "";
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            btcDirectionInfo = direction == OfferDirection.SELL ? toReceive : toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            btcDirectionInfo = direction == OfferDirection.BUY ? toReceive : toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:        String btcAmount = Res.get("shared.btcAmount");
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            addConfirmationLabelLabel(gridPane, ++rowIndex, btcAmount + btcDirectionInfo,
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            addConfirmationLabelLabel(gridPane, ++rowIndex, btcAmount + btcDirectionInfo,
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            addConfirmationLabelLabel(gridPane, ++rowIndex, Res.get("offerDetailsWindow.minBtcAmount"),
desktop/src/main/java/bisq/desktop/main/overlays/windows/OfferDetailsWindow.java:            OfferUtil.getInvalidMakerFeeTxErrorMessage(offer, btcWalletService)
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:    public TradeDetailsWindow(@Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:                              BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:        String btcDirectionInfo;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:            btcDirectionInfo = toReceive;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:            btcDirectionInfo = toSpend;
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:        addConfirmationLabelTextField(gridPane, ++rowIndex, Res.get("shared.btcAmount") + btcDirectionInfo,
desktop/src/main/java/bisq/desktop/main/overlays/windows/TradeDetailsWindow.java:        Transaction delayedPayoutTx = trade.getDelayedPayoutTx(btcWalletService);
desktop/src/main/java/bisq/desktop/main/dao/governance/result/VoteResultView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:import bisq.core.btc.exceptions.TransactionVerificationException;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:import bisq.core.btc.exceptions.WalletException;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/governance/proposals/ProposalsView.java:                GUIUtil.showBsqFeeInfoPopup(blindVoteFee, miningFee, txVsize, bsqFormatter, btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/governance/ProposalDisplay.java:            CurrencyUtil.findAsset(removeAssetProposal.getTickerSymbol(), BaseCurrencyNetwork.RADC_MAINNET)
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:import bisq.core.btc.exceptions.InsufficientBsqException;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:                             @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:                            btcFormatter.formatCoinWithCode(e.missing))).show();
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:                            btcFormatter.formatCoinWithCode(e.missing))).show();
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:            Coin btcForIssuance = null;
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:            if (proposal instanceof IssuanceProposal) btcForIssuance = ((IssuanceProposal) proposal).getRequestedBsq();
desktop/src/main/java/bisq/desktop/main/dao/governance/make/MakeProposalView.java:            GUIUtil.showBsqFeeInfoPopup(fee, miningFee, btcForIssuance, txVsize, bsqFormatter, btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.exceptions.BsqChangeBelowDustException;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.exceptions.TxBroadcastException;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.wallet.TxBroadcaster;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:import bisq.core.util.validation.BtcAddressValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private final BtcValidator btcValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private final BtcAddressValidator btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private InputTextField amountInputTextField, btcAmountInputTextField;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private Button sendBsqButton, sendBtcButton, bsqInputControlButton, btcInputControlButton;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private InputTextField receiversAddressInputTextField, receiversBtcAddressInputTextField;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private TitledGroupBg btcTitledGroupBg;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private Set<TransactionOutput> btcUtxoCandidates;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        BtcAddressValidator btcAddressValidator,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        this.btcValidator = btcValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        this.btcAddressValidator = btcAddressValidator;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        addSendBtcGroup();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        setSendBtcGroupVisibleState(false);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        setSendBtcGroupVisibleState(false);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.resetValidation();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.resetValidation();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton.setOnAction((event) -> onSendBtc());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcInputControlButton.setOnAction((event) -> onBtcInputControl());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.focusedProperty().addListener(focusOutListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.focusedProperty().addListener(focusOutListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.textProperty().addListener(inputTextFieldListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.textProperty().addListener(inputTextFieldListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcUtxoCandidates = null;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.focusedProperty().removeListener(focusOutListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.focusedProperty().removeListener(focusOutListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.textProperty().removeListener(inputTextFieldListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.textProperty().removeListener(inputTextFieldListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcInputControlButton.setOnAction(null);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton.setOnAction(null);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        updateBtcValidator(availableNonBsqBalance);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        setSendBtcGroupVisibleState(availableNonBsqBalance.isPositive());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void updateBtcValidator(Coin availableBalance) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcValidator.setMaxValue(availableBalance);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        boolean isValid = btcAddressValidator.validate(receiversBtcAddressInputTextField.getText()).isValid &&
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                btcValidator.validate(btcAmountInputTextField.getText()).isValid;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton.setDisable(!isValid);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            Transaction txWithBtcFee = btcWalletService.completePreparedSendBsqTx(preparedSendTx);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            Transaction signedTx = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                    txWithBtcFee,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                    btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void setSendBtcGroupVisibleState(boolean visible) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcTitledGroupBg.setVisible(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.setVisible(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.setVisible(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton.setVisible(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcInputControlButton.setVisible(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcTitledGroupBg.setManaged(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.setManaged(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.setManaged(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton.setManaged(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcInputControlButton.setManaged(visible);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void addSendBtcGroup() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcTitledGroupBg = addTitledGroupBg(root, ++gridRow, 2, Res.get("dao.wallet.send.sendBtcFunds"), Layout.GROUP_DISTANCE);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        GridPane.setColumnSpan(btcTitledGroupBg, 3);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField = addInputTextField(root, gridRow,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                Res.get("dao.wallet.send.receiverBtcAddress"), Layout.FIRST_ROW_AND_GROUP_DISTANCE);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        receiversBtcAddressInputTextField.setValidator(btcAddressValidator);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        GridPane.setColumnSpan(receiversBtcAddressInputTextField, 3);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField = addInputTextField(root, ++gridRow, Res.get("dao.wallet.send.btcAmount"));
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.setValidator(btcValidator);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        GridPane.setColumnSpan(btcAmountInputTextField, 3);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                Res.get("dao.wallet.send.sendBtc"), Res.get("dao.wallet.send.inputControl"));
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        sendBtcButton = tuple.first;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcInputControlButton = tuple.second;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void onBtcInputControl() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        if (btcUtxoCandidates == null) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            btcUtxoCandidates = new HashSet<>(unspentTransactionOutputs);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            btcUtxoCandidates = btcUtxoCandidates.stream().
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                btcUtxoCandidates,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                btcFormatter);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        txInputSelectionWindow.onAction(() -> setBtcUtxoCandidates(txInputSelectionWindow.getCandidates())).
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void setBtcUtxoCandidates(Set<TransactionOutput> candidates) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        this.btcUtxoCandidates = candidates;
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        updateBtcValidator(getSpendableBtcBalance());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        btcAmountInputTextField.refreshValidation();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private Coin getSpendableBtcBalance() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        return btcUtxoCandidates != null ?
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                Coin.valueOf(btcUtxoCandidates.stream().mapToLong(e -> e.getValue().value).sum()) :
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void onSendBtc() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        String receiversAddressString = receiversBtcAddressInputTextField.getText();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        Coin receiverAmount = bsqFormatter.parseToRADC(btcAmountInputTextField.getText());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            Transaction preparedSendTx = bsqWalletService.getPreparedSendBtcTx(receiversAddressString, receiverAmount, btcUtxoCandidates);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            Transaction txWithBtcFee = btcWalletService.completePreparedSendBsqTx(preparedSendTx);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            Transaction signedTx = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                GUIUtil.showWantToBurnRADCPopup(miningFee, receiverAmount, btcFormatter);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        txWithBtcFee,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        txVsize, receiversBtcAddressInputTextField.getText(),
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                        btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            receiversBtcAddressInputTextField.setText("");
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            btcAmountInputTextField.setText("");
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            receiversBtcAddressInputTextField.resetValidation();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            btcAmountInputTextField.resetValidation();
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            String msg = Res.get("popup.warning.btcChangeBelowDustException", btcFormatter.formatCoinWithCode(e.getOutputValue()));
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            new Popup().warning(Res.get("popup.warning.insufficientBtcFundsForBsqTx", missing))
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                                    Transaction txWithBtcFee,
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                                    CoinFormatter amountFormatter, // can be BSQ or RADC formatter
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                    doWithdraw(txWithBtcFee, txType, new TxBroadcaster.Callback() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            log.debug("Successfully sent tx with id {}", txWithBtcFee.getTxId().toString());
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                                new TxDetailsBsq(txWithBtcFee.getTxId().toString(), address, amountFormatter.formatCoinWithCode(receiverAmount))
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void doWithdraw(Transaction txWithBtcFee, TxType txType, TxBroadcaster.Callback callback) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        if (btcWalletService.isEncrypted()) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:                            sendFunds(txWithBtcFee, txType, callback))
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:            sendFunds(txWithBtcFee, txType, callback);
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:    private void sendFunds(Transaction txWithBtcFee, TxType txType, TxBroadcaster.Callback callback) {
desktop/src/main/java/bisq/desktop/main/dao/wallet/send/BsqSendView.java:        walletsManager.publishAndCommitBsqTx(txWithBtcFee, txType, callback);
desktop/src/main/java/bisq/desktop/main/dao/wallet/BsqBalanceUtil.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/wallet/BsqBalanceUtil.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/BsqBalanceUtil.java:        availableNonBsqBalanceTextField.setText(bsqFormatter.formatRADCWithCode(availableNonBsqBalance.value));
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:                      BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:        btcWalletService.getChainHeightProperty().addListener(walletChainHeightListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:        btcWalletService.getChainHeightProperty().removeListener(walletChainHeightListener);
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:                    // as we do not know at that moment if we are missing blocks. Once Btc wallet has synced we will
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:                            btcWalletService,
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:                                        if (item.isWithdrawalToRADCWallet())
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxView.java:                                else if (item.isWithdrawalToRADCWallet())
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:import bisq.core.btc.wallet.WalletService;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:    private final boolean withdrawalToRADCWallet;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:                  BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        Coin valueSentToMyRADCWallet = btcWalletService.getValueSentToMeForTransaction(transaction);
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        Coin valueSentFromMyRADCWallet = btcWalletService.getValueSentFromMeForTransaction(transaction);
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        withdrawalToRADCWallet = valueSentToMyRADCWallet.getValue() > valueSentFromMyRADCWallet.getValue();
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:                    !btcWalletService.isTransactionOutputMine(output) &&
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        // In the case we sent to ourselves (either to BSQ or RADC wallet) we show the first as the other is
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        this.withdrawalToRADCWallet = false;
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:    boolean isWithdrawalToRADCWallet() {
desktop/src/main/java/bisq/desktop/main/dao/wallet/tx/BsqTxListItem.java:        return withdrawalToRADCWallet;
desktop/src/main/java/bisq/desktop/main/dao/wallet/receive/BsqReceiveView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetListItem.java:        tradedVolumeAsString = bsqFormatter.formatRADCWithCode(tradedVolume);
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/assetfee/AssetFeeView.java:                        GUIUtil.showBsqFeeInfoPopup(listingFee, miningFee, txVsize, bsqFormatter, btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/dao/burnbsq/proofofburn/ProofOfBurnView.java:                    GUIUtil.showBsqFeeInfoPopup(amount, miningFee, txVsize, bsqFormatter, btcFormatter,
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:    CompletableFuture<Double> averageBsqBtcPrice() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:        return CompletableFuture.supplyAsync(() -> dataModel.averageBsqBtcPrice());
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:    CompletableFuture<List<XYChart.Data<Number, Number>>> getBsqBtcPriceChartData() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:        return CompletableFuture.supplyAsync(() -> toChartDoubleData(dataModel.getBsqBtcPriceByInterval()));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:    CompletableFuture<List<XYChart.Data<Number, Number>>> getBtcUsdPriceChartData() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:        return CompletableFuture.supplyAsync(() -> toChartDoubleData(dataModel.getBtcUsdPriceByInterval()));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:    void setBsqBtcPriceFormatter() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:            return priceFormat.format(value) + " BSQ/RADC";
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartViewModel.java:    void setBtcUsdPriceFormatter() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    private Map<Long, Double> bsqUsdPriceByInterval, bsqBtcPriceByInterval, btcUsdPriceByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        bsqBtcPriceByInterval = null;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        btcUsdPriceByInterval = null;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    double averageBsqBtcPrice() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:                PriceChartDataModel::getAverageBsqBtcPrice);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    Map<Long, Double> getBsqBtcPriceByInterval() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        if (bsqBtcPriceByInterval != null) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:            return bsqBtcPriceByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        bsqBtcPriceByInterval = getPriceByInterval(tradeStatistics -> tradeStatistics.getCurrency().equals("BSQ"),
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:                PriceChartDataModel::getAverageBsqBtcPrice);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        return bsqBtcPriceByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    Map<Long, Double> getBtcUsdPriceByInterval() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        if (btcUsdPriceByInterval != null) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:            return btcUsdPriceByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        btcUsdPriceByInterval = getPriceByInterval(tradeStatistics -> tradeStatistics.getCurrency().equals("USD"),
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:                PriceChartDataModel::getAverageBtcUsdPrice);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        return btcUsdPriceByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        double sumBtcFromBsqTrades = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        double sumBtcFromUsdTrades = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:                sumBtcFromBsqTrades += getBtcAmount(tradeStatistics);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:                sumBtcFromUsdTrades += getBtcAmount(tradeStatistics);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        if (sumBsq == 0 || sumBtcFromBsqTrades == 0 || sumBtcFromUsdTrades == 0 || sumUsd == 0) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        double averageUsdPrice = sumUsd / sumBtcFromUsdTrades;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        return sumBtcFromBsqTrades * averageUsdPrice / sumBsq;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    private static double getAverageBsqBtcPrice(List<TradeStatistics3> list) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        double sumBtc = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:            sumBtc += getBtcAmount(tradeStatistics);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        if (sumBsq == 0 || sumBtc == 0) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        return MathUtils.scaleUpByPowerOf10(sumBtc / sumBsq, 8);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    private static double getAverageBtcUsdPrice(List<TradeStatistics3> list) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        double sumBtc = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:            sumBtc += getBtcAmount(tradeStatistics);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        if (sumUsd == 0 || sumBtc == 0) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:        return sumUsd / sumBtc;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartDataModel.java:    private static long getBtcAmount(TradeStatistics3 tradeStatistics) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:    private XYChart.Series<Number, Number> seriesBsqUsdPrice, seriesBsqBtcPrice, seriesBtcUsdPrice;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:    private final DoubleProperty averageBsqBtcPriceProperty = new SimpleDoubleProperty();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:    public ReadOnlyDoubleProperty averageBsqBtcPriceProperty() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        return averageBsqBtcPriceProperty;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        } else if (series == seriesBsqBtcPrice) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:            model.setBsqBtcPriceFormatter();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:            model.setBtcUsdPriceFormatter();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        return List.of(seriesBsqUsdPrice, seriesBsqBtcPrice, seriesBtcUsdPrice);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesBsqBtcPrice = new XYChart.Series<>();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesBsqBtcPrice.setName(Res.get("dao.factsAndFigures.supply.bsqBtcPrice"));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesIndexMap.put(getSeriesId(seriesBsqBtcPrice), 1);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesBtcUsdPrice = new XYChart.Series<>();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesBtcUsdPrice.setName(Res.get("dao.factsAndFigures.supply.btcUsdPrice"));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        seriesIndexMap.put(getSeriesId(seriesBtcUsdPrice), 2);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        if (activeSeries.contains(seriesBsqBtcPrice)) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:            applyBsqBtcPriceChartData(task2Done);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        if (activeSeries.contains(seriesBtcUsdPrice)) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:            applyBtcUsdPriceChartData(task3Done);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        model.averageBsqBtcPrice()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:                            averageBsqBtcPriceProperty.set(data);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:    private void applyBtcUsdPriceChartData(CompletableFuture<Boolean> completeFuture) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        model.getBtcUsdPriceChartData()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:                            seriesBtcUsdPrice.getData().setAll(data);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:    private void applyBsqBtcPriceChartData(CompletableFuture<Boolean> completeFuture) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:        model.getBsqBtcPriceChartData()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/price/PriceChartView.java:                            seriesBsqBtcPrice.getData().setAll(data);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:    private Map<Long, Long> usdVolumeByInterval, btcVolumeByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:    long getBtcVolume() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        return getBtcVolumeByInterval().values().stream()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        btcVolumeByInterval = null;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:    public Map<Long, Long> getBtcVolumeByInterval() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        if (btcVolumeByInterval != null) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:            return btcVolumeByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        btcVolumeByInterval = getVolumeByInterval(VolumeChartDataModel::getVolumeInBtc);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        return btcVolumeByInterval;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        double sumBtcFromAllTrades = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        double sumBtcFromUsdTrades = 0;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:                sumBtcFromUsdTrades += amount;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:            sumBtcFromAllTrades += amount;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        if (sumBtcFromAllTrades == 0 || sumBtcFromUsdTrades == 0 || sumUsd == 0) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        double averageUsdPrice = sumUsd / sumBtcFromUsdTrades;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:        return (long) (sumBtcFromAllTrades * averageUsdPrice);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartDataModel.java:    private static long getVolumeInBtc(List<TradeStatistics3> list) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:    CompletableFuture<Long> getBtcVolume() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:        return CompletableFuture.supplyAsync(dataModel::getBtcVolume);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:    CompletableFuture<List<XYChart.Data<Number, Number>>> getBtcVolumeChartData() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:        return CompletableFuture.supplyAsync(() -> toChartLongData(dataModel.getBtcVolumeByInterval()));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:    void setBtcVolumeFormatter() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartViewModel.java:        yAxisFormatter = value -> volumeFormat.format(MathUtils.scaleDownByPowerOf10(value.longValue(), 8)) + " RADC";
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:    private XYChart.Series<Number, Number> seriesUsdVolume, seriesBtcVolume;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:    private final LongProperty btcVolumeProperty = new SimpleLongProperty();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:    public ReadOnlyLongProperty btcVolumeProperty() {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        return btcVolumeProperty;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:            model.setBtcVolumeFormatter();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        return List.of(seriesUsdVolume, seriesBtcVolume);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        seriesBtcVolume = new XYChart.Series<>();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        seriesBtcVolume.setName(Res.get("dao.factsAndFigures.supply.tradeVolumeInBtc"));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        seriesIndexMap.put(getSeriesId(seriesBtcVolume), 1);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        if (activeSeries.contains(seriesBtcVolume)) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:            applyBtcVolumeChartData(task2Done);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        model.getBtcVolume()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:                            btcVolumeProperty.set(data);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:    private void applyBtcVolumeChartData(CompletableFuture<Boolean> completeFuture) {
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:        model.getBtcVolumeChartData()
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/volume/VolumeChartView.java:                            seriesBtcVolume.getData().setAll(data);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:            usdVolumeTextField, btcVolumeTextField, averageBsqUsdPriceTextField, averageBsqBtcPriceTextField;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        averageBsqBtcPriceTextField.textProperty().bind(Bindings.createStringBinding(
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                        return priceFormat.format(value) + " BSQ/RADC";
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                    double scaled = MathUtils.scaleDownByPowerOf10(priceChartView.averageBsqBtcPriceProperty().get(), 8);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                    return priceFormat.format(scaled) + " BSQ/RADC";
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                priceChartView.averageBsqBtcPriceProperty()));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        btcVolumeTextField.textProperty().bind(Bindings.createStringBinding(
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                    double scaled = MathUtils.scaleDownByPowerOf10(volumeChartView.btcVolumeProperty().get(), 8);
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                    return volumeFormat.format(scaled) + " RADC";
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                volumeChartView.btcVolumeProperty()));
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        averageBsqBtcPriceTextField.textProperty().unbind();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        btcVolumeTextField.textProperty().unbind();
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        averageBsqBtcPriceTextField = addTopLabelReadOnlyTextField(root, gridRow, 1,
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                Res.get("dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection")).second;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:        btcVolumeTextField = addTopLabelReadOnlyTextField(root, gridRow, 1,
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:                Res.get("dao.factsAndFigures.dashboard.volumeBtc")).second;
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:            marketPriceLabel.setText(FormattingUtils.formatPrice(bsqPrice) + " BSQ/RADC");
desktop/src/main/java/bisq/desktop/main/dao/economy/dashboard/BsqDashboardView.java:            textField.setText(bsqPrice + " BSQ/RADC");
desktop/src/main/java/bisq/desktop/main/dao/bonding/BondingViewUtils.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/dao/bonding/BondingViewUtils.java:                                    bsqFormatter.formatRADCWithCode(miningFee),
desktop/src/main/java/bisq/desktop/main/dao/bonding/BondingViewUtils.java:                                    bsqFormatter.formatRADCWithCode(miningFee),
desktop/src/main/java/bisq/desktop/main/dao/bonding/BondingViewUtils.java:            new Popup().warning(Res.get("popup.warning.insufficientBtcFundsForBsqTx", missing))
desktop/src/main/java/bisq/desktop/main/dao/bonding/reputation/MyReputationView.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/dao/bonding/reputation/MyReputationView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/MainView.java:    private ChangeListener<String> btcSyncIconIdListener;
desktop/src/main/java/bisq/desktop/main/MainView.java:    private ProgressBar btcSyncIndicator, p2pNetworkProgressBar;
desktop/src/main/java/bisq/desktop/main/MainView.java:    private Label btcSplashInfo;
desktop/src/main/java/bisq/desktop/main/MainView.java:    private Popup p2PNetworkWarnMsgPopup, btcNetworkWarnMsgPopup;
desktop/src/main/java/bisq/desktop/main/MainView.java:        ToggleButton buyButton = new NavButton(BuyOfferView.class, Res.get("mainView.menu.buyBtc").toUpperCase());
desktop/src/main/java/bisq/desktop/main/MainView.java:        ToggleButton sellButton = new NavButton(SellOfferView.class, Res.get("mainView.menu.sellBtc").toUpperCase());
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSplashInfo = new AutoTooltipLabel();
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSplashInfo.textProperty().bind(model.getBtcInfo());
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSplashInfo.setId("splash-error-state-msg");
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSplashInfo.getStyleClass().add("error-text");
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIndicator = new JFXProgressBar();
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIndicator.setPrefWidth(305);
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIndicator.progressProperty().bind(model.getCombinedSyncProgress());
desktop/src/main/java/bisq/desktop/main/MainView.java:        ImageView btcSyncIcon = new ImageView();
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIcon.setVisible(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIcon.setManaged(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIconIdListener = (ov, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSyncIcon.setId(newValue);
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSyncIcon.setVisible(true);
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSyncIcon.setManaged(true);
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSyncIndicator.setVisible(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:            btcSyncIndicator.setManaged(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:        model.getBtcSplashSyncIconId().addListener(btcSyncIconIdListener);
desktop/src/main/java/bisq/desktop/main/MainView.java:        blockchainSyncBox.getChildren().addAll(btcSplashInfo, btcSyncIcon);
desktop/src/main/java/bisq/desktop/main/MainView.java:                if (model.getUseTorForRADC().get()) {
desktop/src/main/java/bisq/desktop/main/MainView.java:                    // If using tor for RADC, hide the RADC status since tor is not working
desktop/src/main/java/bisq/desktop/main/MainView.java:                    btcSyncIndicator.setVisible(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:                    btcSplashInfo.setVisible(false);
desktop/src/main/java/bisq/desktop/main/MainView.java:        vBox.getChildren().addAll(logo, blockchainSyncBox, btcSyncIndicator, splashP2PNetworkBox);
desktop/src/main/java/bisq/desktop/main/MainView.java:        model.getBtcSplashSyncIconId().removeListener(btcSyncIconIdListener);
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSplashInfo.textProperty().unbind();
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcSyncIndicator.progressProperty().unbind();
desktop/src/main/java/bisq/desktop/main/MainView.java:        // RADC
desktop/src/main/java/bisq/desktop/main/MainView.java:        Label btcInfoLabel = new AutoTooltipLabel();
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcInfoLabel.setId("footer-pane");
desktop/src/main/java/bisq/desktop/main/MainView.java:        btcInfoLabel.textProperty().bind(model.getBtcInfo());
desktop/src/main/java/bisq/desktop/main/MainView.java:        setLeftAnchor(btcInfoLabel, 10d);
desktop/src/main/java/bisq/desktop/main/MainView.java:        setBottomAnchor(btcInfoLabel, 7d);
desktop/src/main/java/bisq/desktop/main/MainView.java:                btcInfoLabel.setId("splash-error-state-msg");
desktop/src/main/java/bisq/desktop/main/MainView.java:                btcInfoLabel.getStyleClass().add("error-text");
desktop/src/main/java/bisq/desktop/main/MainView.java:                if (btcNetworkWarnMsgPopup == null) {
desktop/src/main/java/bisq/desktop/main/MainView.java:                    btcNetworkWarnMsgPopup = new Popup().warning(newValue);
desktop/src/main/java/bisq/desktop/main/MainView.java:                    btcNetworkWarnMsgPopup.show();
desktop/src/main/java/bisq/desktop/main/MainView.java:                btcInfoLabel.setId("footer-pane");
desktop/src/main/java/bisq/desktop/main/MainView.java:                if (btcNetworkWarnMsgPopup != null)
desktop/src/main/java/bisq/desktop/main/MainView.java:                    btcNetworkWarnMsgPopup.hide();
desktop/src/main/java/bisq/desktop/main/MainView.java:        return new AnchorPane(separator, btcInfoLabel, versionBox, vBox, p2PNetworkIcon) {{
desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java:                        .append(tradeAmount.replace(" RADC", "")).append(";")
desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java:                        .append(buyerDeposit.replace(" RADC", "")).append(";")
desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java:                        .append(sellerDeposit.replace(" RADC", "")).append(";")
desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java:                        .append(buyerPayoutAmount.replace(" RADC", "")).append(";")
desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java:                        .append(sellerPayoutAmount.replace(" RADC", "")).append(";")
desktop/src/main/java/bisq/desktop/main/support/dispute/client/arbitration/ArbitrationClientView.java:                                 @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/support/dispute/client/refund/RefundClientView.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/support/dispute/client/mediation/MediationClientView.java:                               @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/support/dispute/agent/arbitration/ArbitratorView.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/support/dispute/agent/refund/RefundAgentView.java:                           @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/support/dispute/agent/mediation/MediatorView.java:                        @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/presentation/MarketPricePresentation.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/presentation/MarketPricePresentation.java:    public MarketPricePresentation(BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/presentation/MarketPricePresentation.java:        TxIdTextField.setWalletService(btcWalletService);
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:                           BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/presentation/DaoPresentation.java:        this.btcWalletService.getChainHeightProperty().addListener(walletChainHeightListener);
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:                          BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:        DeterministicSeed keyChainSeed = btcWalletService.getKeyChainSeed();
desktop/src/main/java/bisq/desktop/main/account/content/seedwords/SeedWordsView.java:            initSeedWords(walletsManager.getDecryptedSeed(aesKey, btcWalletService.getKeyChainSeed(), btcWalletService.getKeyCrypter()));
desktop/src/main/java/bisq/desktop/main/account/content/fiataccounts/FiatAccountsView.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/account/content/altcoinaccounts/AltCoinAccountsView.java:                               @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:import bisq.core.btc.wallet.WalletService;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:    private final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:    private TextField btcTextField, bsqTextField;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:    private BalanceListener btcWalletBalanceListener;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:                           BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:                           @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        btcTextField = addTopLabelTextField(root, ++gridRow, "RADC", -Layout.FLOATING_LABEL_DISTANCE).second;
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        addXpubKeys(btcWalletService, "RADC", gridRow, Layout.FIRST_ROW_AND_GROUP_DISTANCE);
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        btcWalletBalanceListener = new BalanceListener() {
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:                updateBalances(btcWalletService);
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        btcWalletService.addBalanceListener(btcWalletBalanceListener);
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        updateBalances(btcWalletService);
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:                new ShowWalletDataWindow(walletsManager, btcWalletService, walletPasswordWindow).width(root.getWidth()).show();
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        btcWalletService.removeBalanceListener(btcWalletBalanceListener);
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:        if (walletService instanceof BtcWalletService) {
desktop/src/main/java/bisq/desktop/main/account/content/walletinfo/WalletInfoView.java:            btcTextField.setText(btcFormatter.formatCoinWithCode(walletService.getBalance(ESTIMATED_SPENDABLE)));
desktop/src/main/java/bisq/desktop/main/account/content/password/PasswordView.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/main/account/register/arbitrator/ArbitratorRegistrationViewModel.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/account/register/arbitrator/ArbitratorRegistrationViewModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/register/arbitrator/ArbitratorRegistrationViewModel.java:                                           BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/account/register/AgentRegistrationViewModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/register/AgentRegistrationViewModel.java:    protected final BtcWalletService walletService;
desktop/src/main/java/bisq/desktop/main/account/register/AgentRegistrationViewModel.java:                                      BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/account/register/mediator/MediatorRegistrationViewModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/register/mediator/MediatorRegistrationViewModel.java:                                         BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/account/register/refundagent/RefundAgentRegistrationViewModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/account/register/refundagent/RefundAgentRegistrationViewModel.java:                                            BtcWalletService walletService,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferView.java:            addPayInfoEntry(infoGridPane, i++, Res.getWithCol("shared.tradeAmount"), model.btcTradeAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferView.java:            addPayInfoEntry(infoGridPane, i++, Res.getWithCol("shared.tradeAmount"), model.btcTradeAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:    protected final StringProperty btcTradeAmount = new SimpleStringProperty();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:    protected final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                                 CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                    CoinFormatter formatter = dataModel.isBuyer() ? bsqFormatter : btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                    CoinFormatter formatter = dataModel.isBuyer() ? btcFormatter : bsqFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:        btcTradeAmount.bind(createStringBinding(() -> btcFormatter.formatCoinWithCode(dataModel.getBtcAmount().get()),
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                dataModel.getBtcAmount()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:        btcTradeAmount.unbind();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                    btcTradeAmount.get(), getTxFee());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                    btcTradeAmount.get(), getTxFee());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:            return btcFormatter.formatCoinWithCode(txFee);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:            return Res.get("bsqSwapOffer.estimated", btcFormatter.formatCoinWithCode(txFee));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferViewModel.java:                btcFormatter.formatCoinWithCode(missing);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferDataModel.java:                                @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferDataModel.java:                btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferDataModel.java:                getBtcAmount().get(),
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:    private final BtcValidator btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                                BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                                @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        super(dataModel, btcFormatter, bsqFormatter, accountAgeWitnessService);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        this.btcValidator = btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        btcValidator.setMaxValue(PaymentMethod.BSQ_SWAP.getMaxTradeLimitAsCoin(BSQ));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(dataModel.getMaxTradeLimit()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        btcValidator.setMinValue(Restrictions.getMinTradeAmount());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                amount.set(btcFormatter.formatCoin(dataModel.getBtcAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                    minAmountValidationResult.set(isBtcInputValid(minAmount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            } else if (amount.get() != null && btcValidator.getMaxTradeLimit() != null && btcValidator.getMaxTradeLimit().value == OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT.value) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                amount.set(btcFormatter.formatCoin(btcValidator.getMaxTradeLimit()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                        btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(minAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                        minAmountAsCoin.equals(dataModel.getBtcAmount().get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                this.minAmount.set(btcFormatter.formatCoin(minAmountAsCoin));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                        amountValidationResult.set(isBtcInputValid(this.amount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                        amountValidationResult.set(isBtcInputValid(amount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                        minAmountValidationResult.set(isBtcInputValid(minAmount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:    private InputValidator.ValidationResult isBtcInputValid(String input) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        return btcValidator.validate(input);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            Coin amount = DisplayUtils.parseToCoinWith4Decimals(this.amount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            dataModel.setBtcAmount(amount);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            dataModel.setBtcAmount(null);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            Coin minAmount = DisplayUtils.parseToCoinWith4Decimals(this.minAmount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                if (isBtcInputValid(newValue).isValid) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            if (isBtcInputValid(newValue).isValid)
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                amount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                minAmount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        dataModel.getBtcAmount().addListener(amountAsCoinListener);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        dataModel.getBtcAmount().removeListener(amountAsCoinListener);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        boolean inputDataValid = isBtcInputValid(amount.get()).isValid &&
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:                isBtcInputValid(minAmount.get()).isValid &&
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        ObjectProperty<Coin> btcMinAmount = dataModel.getMinAmount();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        if (btcMinAmount.get() != null) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            minAmountAsCoinListener.changed(btcMinAmount, null, btcMinAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        ObjectProperty<Coin> btcAmount = dataModel.getBtcAmount();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        if (btcAmount.get() != null && btcMinAmount.get() != null) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            syncMinAmountWithAmount = btcMinAmount.get().equals(dataModel.getBtcAmount().get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:        if (btcAmount.get() != null) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferViewModel.java:            amountAsCoinListener.changed(btcAmount, null, btcAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:        Label amountBtcLabel = amountValueCurrencyBoxTuple.third;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:        editOfferElements.add(amountBtcLabel);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:        priceCurrencyLabel.setText("RADC");
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:        Label minAmountBtcLabel = amountValueCurrencyBoxTuple.third;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:        editOfferElements.add(minAmountBtcLabel);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/create_offer/BsqSwapCreateOfferView.java:            String wallet = model.dataModel.isBuyer() ? "BSQ" : "RADC";
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:    private final BtcValidator btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:    final BooleanProperty showWarningInvalidBtcDecimalPlaces = new SimpleBooleanProperty();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                              BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        super(dataModel, btcFormatter, bsqFormatter, accountAgeWitnessService);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        this.btcValidator = btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        amount.set(btcFormatter.formatCoin(dataModel.getBtcAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        amountRange = btcFormatter.formatCoin(offer.getMinAmount()) + " - " + btcFormatter.formatCoin(offer.getAmount());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        btcValidator.setMaxValue(offer.getAmount());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(Math.min(dataModel.getMaxTradeLimit(), offer.getAmount().value)));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        btcValidator.setMinValue(offer.getMinAmount());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                showWarningInvalidBtcDecimalPlaces.set(!DisplayUtils.hasBtcValidDecimals(userInput, btcFormatter));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                // only allow max 4 decimal places for btc values
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                amount.set(btcFormatter.formatCoin(dataModel.getBtcAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:            } else if (btcValidator.getMaxTradeLimit() != null && btcValidator.getMaxTradeLimit().value == OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT.value) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                            btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:                            btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:            if (isBtcInputValid(newValue).isValid) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:            amount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        dataModel.getBtcAmount().addListener(amountAsCoinListener);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        dataModel.getBtcAmount().removeListener(amountAsCoinListener);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        boolean inputDataValid = isBtcInputValid(amount.get()).isValid
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:            Coin amount = DisplayUtils.parseToCoinWith4Decimals(this.amount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:    private InputValidator.ValidationResult isBtcInputValid(String input) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferViewModel.java:        return btcValidator.validate(input);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:    private Subscription isTradeCompleteSubscription, showWarningInvalidBtcDecimalPlacesSubscription,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:        }).show(model.offer, model.dataModel.getBtcAmount().get(), model.dataModel.getPrice().get());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:        showWarningInvalidBtcDecimalPlacesSubscription = EasyBind.subscribe(model.showWarningInvalidBtcDecimalPlaces, newValue -> {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:                new Popup().warning(Res.get("takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces")).show();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:                model.showWarningInvalidBtcDecimalPlaces.set(false);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:        showWarningInvalidBtcDecimalPlacesSubscription.unsubscribe();
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:        priceCurrencyLabel.setText("RADC");
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferView.java:            String wallet = model.dataModel.isBuyer() ? "BSQ" : "RADC";
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferDataModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferDataModel.java:                btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferDataModel.java:        setBtcAmount(Coin.valueOf(Math.min(amount.value, getMaxTradeLimit())));
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferDataModel.java:        if (getBtcAmount().get() != null && getOffer() != null)
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/take_offer/BsqSwapTakeOfferDataModel.java:            return getBtcAmount().get().isGreaterThan(getOffer().getAmount());
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferDataModel.java:                                 @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter) {
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferDataModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bsq_swap/BsqSwapOfferDataModel.java:        bsqSwapOfferModel.calculateAmount(amount -> DisplayUtils.reduceTo4Decimals(amount, btcFormatter));
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:import bisq.core.btc.setup.WalletsSetup;
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:        return DisplayUtils.formatAmount(offer, GUIUtil.AMOUNT_DECIMALS, decimalAligned, maxPlacesForAmount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:        return offer.isCurrencyForMakerFeeBtc() ?
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:                btcFormatter.formatCoinWithCode(offer.getMakerFee()) :
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:            return (direction == OfferDirection.BUY) ? Res.get("shared.buyingRADCWith", currencyCode) : Res.get("shared.sellingRADCFor", currencyCode);
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookViewModel.java:        return btcFormatter.formatCoin(deposit) + " (" + percentage + ")";
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookView.java:                  @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookView.java:        AutoTooltipTableColumn<OfferBookListItem, OfferBookListItem> column = new AutoTooltipTableColumn<>(Res.get("shared.RADCMinMax"), Res.get("shared.amountHelp"));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.TxFeeEstimationService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:                       BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        super(btcWalletService, offerUtil);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        addressEntry = btcWalletService.getOrCreateAddressEntry(offer.getId(), AddressEntry.Context.OFFER_FUNDING);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        btcWalletService.resetAddressEntriesForOpenOffer(offer.getId());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:                    isCurrencyForTakerFeeBtc(),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    // start over again. To reproduce keep adding 0.002 RADC amounts while in the funding screen.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        if (btcWalletService.getBalance(Wallet.BalanceType.AVAILABLE).isPositive()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        if (!isBtcWalletFunded.get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        btcWalletService.addBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        btcWalletService.removeBalanceListener(balanceListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:            if (isCurrencyForTakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    Coin getTakerFee(boolean isCurrencyForTakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:            Coin feePerBtc = CoinUtil.getFeePerBtc(FeeService.getTakerFeePerBtc(isCurrencyForTakerFeeBtc), amount);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:            return CoinUtil.maxCoin(feePerBtc, FeeService.getMinTakerFee(isCurrencyForTakerFeeBtc));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        return getTakerFee(isCurrencyForTakerFeeBtc());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        btcWalletService.resetAddressEntriesForOpenOffer(offer.getId());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        if (isCurrencyForTakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    public boolean isCurrencyForTakerFeeBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        return offerUtil.isCurrencyForTakerFeeBtc(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    public void setPreferredCurrencyForTakerFeeBtc(boolean isCurrencyForTakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        preferences.setPayFeeInBtc(isCurrencyForTakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    public boolean isPreferredFeeCurrencyBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        return preferences.isPayFeeInBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:    public Coin getTakerFeeInBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        return preferences.getPayFeeInBtc() || offerUtil.isBsqForTakerFeeAvailable(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        // When you buy an asset you actually sell RADC.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferDataModel.java:        // This is why an offer to buy BSQ is actually an offer to sell RADC for BSQ.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            tradeFeeDescriptionLabel, resultLabel, tradeFeeInBtcLabel, tradeFeeInBsqLabel, xLabel,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            showTransactionPublishedScreenSubscription, showWarningInvalidBtcDecimalPlacesSubscription,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:    private AutoTooltipSlideToggleButton tradeFeeInBtcToggle, tradeFeeInBsqToggle;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:    private ChangeListener<Boolean> tradeFeeInBtcToggleListener, tradeFeeInBsqToggleListener,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                          @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        balanceTextField.setFormatter(model.getBtcFormatter());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggleListener = (observable, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            setIsCurrencyForMakerFeeBtc(newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            if (newValue && tradeFeeInBtcToggle.isSelected())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                tradeFeeInBtcToggle.setSelected(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            if (!newValue && !tradeFeeInBtcToggle.isSelected())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                tradeFeeInBtcToggle.setSelected(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            setIsCurrencyForMakerFeeBtc(!newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                tradeFeeInBtcToggle.setVisible(newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:    private void setIsCurrencyForMakerFeeBtc(boolean isCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        model.setIsCurrencyForTakerFeeBtc(isCurrencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            tradeFeeInBtcLabel.setOpacity(isCurrencyForMakerFeeBtc ? 1 : 0.3);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            tradeFeeInBsqLabel.setOpacity(isCurrencyForMakerFeeBtc ? 0.3 : 1);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        boolean currencyForMakerFeeBtc = model.dataModel.isCurrencyForTakerFeeBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.setSelected(currencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBsqToggle.setSelected(!currencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            tradeFeeInBtcToggle.setVisible(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            tradeFeeInBtcToggle.setManaged(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            showInsufficientBsqFundsForBtcFeePaymentPopup();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.setMouseTransparent(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                    .onAction(() -> GUIUtil.openWebPage("https://bisq.wiki/Frequently_asked_questions#Why_does_Bisq_require_a_security_deposit_in_RADC.3F"))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        if (model.dataModel.getIsBtcWalletFunded().get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.textProperty().bind(model.tradeFeeInBtcWithFiat);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.visibleProperty().bind(model.isTradeFeeVisible);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        fundingHBox.visibleProperty().bind(model.dataModel.getIsBtcWalletFunded().not().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        fundingHBox.managedProperty().bind(model.dataModel.getIsBtcWalletFunded().not().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        takeOfferBox.visibleProperty().bind(model.dataModel.getIsBtcWalletFunded().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        takeOfferBox.managedProperty().bind(model.dataModel.getIsBtcWalletFunded().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.textProperty().unbind();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.visibleProperty().unbind();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        showWarningInvalidBtcDecimalPlacesSubscription = EasyBind.subscribe(model.showWarningInvalidBtcDecimalPlaces, newValue -> {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                new Popup().warning(Res.get("takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces")).show();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                model.showWarningInvalidBtcDecimalPlaces.set(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        showWarningInvalidBtcDecimalPlacesSubscription.unsubscribe();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.selectedProperty().addListener(tradeFeeInBtcToggleListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.selectedProperty().removeListener(tradeFeeInBtcToggleListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        boolean isPreferredFeeCurrencyBtc = model.dataModel.isPreferredFeeCurrencyBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        if (!isPreferredFeeCurrencyBtc && !isBsqForFeeAvailable) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                missingBsq = Res.get("popup.warning.insufficientBsqFundsForBtcFeePayment",
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                missingBsq = Res.get("popup.warning.noBsqFundsForBtcFeePayment");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                        .actionButtonText(Res.get("feeOptionWindow.useRADC"))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:                            tradeFeeInBtcToggle.setSelected(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            if (model.dataModel.getIsBtcWalletFunded().get() &&
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel = new Label();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.setMouseTransparent(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcLabel.setId("trade-fee-textfield");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        vBox.getChildren().addAll(tradeFeeInBtcLabel, tradeFeeInBsqLabel);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle = new AutoTooltipSlideToggleButton();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.setText("RADC");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeInBtcToggle.setPadding(new Insets(-8, 5, -10, 5));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        tradeFeeToggleButtonBox.getChildren().addAll(tradeFeeInBtcToggle, tradeFeeInBsqToggle);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:    private void showInsufficientBsqFundsForBtcFeePaymentPopup() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            message = Res.get("popup.warning.insufficientBsqFundsForBtcFeePayment",
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:            message = Res.get("popup.warning.noBsqFundsForBtcFeePayment");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferView.java:        // warn if you are selling RADC to unsigned account (#5343)
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    private final BtcValidator btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    final StringProperty tradeFeeInBtcWithFiat = new SimpleStringProperty();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    final BooleanProperty showWarningInvalidBtcDecimalPlaces = new SimpleBooleanProperty();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                              BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        this.btcValidator = btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        amount.set(btcFormatter.formatCoin(dataModel.getAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        amountRange = btcFormatter.formatCoin(offer.getMinAmount()) + " - " + btcFormatter.formatCoin(offer.getAmount());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        btcValidator.setMaxValue(offer.getAmount());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(Math.min(dataModel.getMaxTradeLimit(), offer.getAmount().value)));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        btcValidator.setMinValue(offer.getMinAmount());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(Math.min(dataModel.getMaxTradeLimit(), offer.getAmount().value)));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        if (dataModel.getIsBtcWalletFunded().get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    btcFormatter.formatCoinWithCode(dataModel.getTotalToPayAsCoin().get()),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    btcFormatter.formatCoinWithCode(dataModel.getTotalAvailableBalance())))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    public void setIsCurrencyForTakerFeeBtc(boolean isCurrencyForTakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        dataModel.setPreferredCurrencyForTakerFeeBtc(isCurrencyForTakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                Res.get("createOffer.tradeFee.descriptionRADCOnly"));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        tradeFeeInBtcWithFiat.set(OfferViewModelUtil.getTradeFeeWithFiatEquivalent(offerUtil,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                dataModel.getTakerFeeInBtc(),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                btcFormatter));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                showWarningInvalidBtcDecimalPlaces.set(!DisplayUtils.hasBtcValidDecimals(userInput, btcFormatter));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                // only allow max 4 decimal places for btc values
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                amount.set(btcFormatter.formatCoin(dataModel.getAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    amount.set(btcFormatter.formatCoin(dataModel.getAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    amount.set(btcFormatter.formatCoin(dataModel.getAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            } else if (btcValidator.getMaxTradeLimit() != null && btcValidator.getMaxTradeLimit().value == OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT.value) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                            btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                            btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        boolean inputDataValid = isBtcInputValid(amount.get()).isValid
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        isTakeOfferButtonDisabled.set(takeOfferRequested || !inputDataValid || !dataModel.getIsBtcWalletFunded().get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        totalToPay.bind(createStringBinding(() -> btcFormatter.formatCoinWithCode(dataModel.getTotalToPayAsCoin().get()), dataModel.getTotalToPayAsCoin()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            if (isBtcInputValid(newValue).isValid) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            amount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        } else if (dataModel.getIsBtcWalletFunded().get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        dataModel.getIsBtcWalletFunded().addListener(isWalletFundedListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        dataModel.getIsBtcWalletFunded().removeListener(isWalletFundedListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            Coin amount = DisplayUtils.parseToCoinWith4Decimals(this.amount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    CoinFormatter getBtcFormatter() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        return btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:    private InputValidator.ValidationResult isBtcInputValid(String input) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        return btcValidator.validate(input);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        return btcFormatter.formatCoinWithCode(dataModel.getSecurityDeposit());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        if (dataModel.isCurrencyForTakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    dataModel.getTakerFeeInBtc(),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    FeeService.getMinMakerFee(dataModel.isCurrencyForTakerFeeBtc()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:            // calculate the RADC value of the BSQ fee and use that...
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        if (dataModel.isCurrencyForTakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        if (dataModel.isCurrencyForTakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                    btcFormatter) + " + " + getTradeFee();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/takeoffer/TakeOfferViewModel.java:        return dataModel.isCurrencyForTakerFeeBtc() ? btcFormatter : bsqFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    private final BtcValidator btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    protected final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    final StringProperty buyerSecurityDepositInRADC = new SimpleStringProperty();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    // Price in the viewModel is always dependent on fiat/altcoin: Fiat/RADC, for altcoins we use inverted price.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    // The domain (dataModel) uses always the same price model (otherCurrencyRADC)
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    final StringProperty tradeFeeInBtcWithFiat = new SimpleStringProperty();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                                 BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                                 @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        this.btcValidator = btcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        totalToPay.bind(createStringBinding(() -> btcFormatter.formatCoinWithCode(dataModel.totalToPayAsCoinProperty().get()),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        tradeAmount.bind(createStringBinding(() -> btcFormatter.formatCoinWithCode(dataModel.getAmount().get()),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                if (isBtcInputValid(newValue).isValid) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            if (isBtcInputValid(newValue).isValid)
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                amount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                buyerSecurityDepositInRADC.set(btcFormatter.formatCoinWithCode(dataModel.getBuyerSecurityDepositAsCoin()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                buyerSecurityDepositInRADC.set("");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                minAmount.set(btcFormatter.formatCoin(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    buyerSecurityDepositInRADC.set(btcFormatter.formatCoinWithCode(dataModel.getBuyerSecurityDepositAsCoin()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                buyerSecurityDepositInRADC.set("");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        tradeFeeCurrencyCode.set(dataModel.isCurrencyForMakerFeeBtc() ? Res.getBaseCurrencyCode() : "BSQ");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                Res.get("createOffer.tradeFee.descriptionRADCOnly"));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        tradeFeeInBtcWithFiat.set(OfferViewModelUtil.getTradeFeeWithFiatEquivalent(offerUtil,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                dataModel.getMakerFeeInBtc(),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                btcFormatter));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        dataModel.getIsBtcWalletFunded().addListener(isWalletFundedListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        dataModel.getIsBtcWalletFunded().removeListener(isWalletFundedListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            btcValidator.setMaxValue(dataModel.paymentAccount.getPaymentMethod().getMaxTradeLimitAsCoin(dataModel.getTradeCurrencyCode().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(dataModel.getMaxTradeLimit()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        btcValidator.setMinValue(Restrictions.getMinTradeAmount());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            amountValidationResult.set(isBtcInputValid(amount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        btcValidator.setMaxValue(dataModel.paymentAccount.getPaymentMethod().getMaxTradeLimitAsCoin(dataModel.getTradeCurrencyCode().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        btcValidator.setMaxTradeLimit(Coin.valueOf(dataModel.getMaxTradeLimit()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        if (dataModel.getIsBtcWalletFunded().get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                            btcFormatter.formatCoinWithCode(dataModel.totalToPayAsCoinProperty().get()),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                            btcFormatter.formatCoinWithCode(dataModel.getTotalAvailableBalance())))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    public void setIsCurrencyForMakerFeeBtc(boolean isCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        dataModel.setPreferredCurrencyForMakerFeeBtc(isCurrencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                amount.set(btcFormatter.formatCoin(dataModel.getAmount().get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    minAmountValidationResult.set(isBtcInputValid(minAmount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            } else if (amount.get() != null && btcValidator.getMaxTradeLimit() != null && btcValidator.getMaxTradeLimit().value == OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT.value) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                amount.set(btcFormatter.formatCoin(btcValidator.getMaxTradeLimit()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                                btcFormatter.formatCoinWithCode(OfferRestrictions.TOLERATED_SMALL_TRADE_AMOUNT),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            InputValidator.ValidationResult result = isBtcInputValid(minAmount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                this.minAmount.set(btcFormatter.formatCoin(minAmountAsCoin));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                        amountValidationResult.set(isBtcInputValid(this.amount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                        amountValidationResult.set(isBtcInputValid(amount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                        minAmountValidationResult.set(isBtcInputValid(minAmount.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    CoinFormatter getBtcFormatter() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        return btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    public String getSecurityDepositPopOverLabel(String depositInRADC) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        return dataModel.isBuyOffer() ? Res.get("createOffer.securityDepositInfoAsBuyer", depositInRADC) :
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                Res.get("createOffer.securityDepositInfo", depositInRADC);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        return btcFormatter.formatCoinWithCode(dataModel.getSecurityDeposit());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        if (dataModel.isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    dataModel.getMakerFeeInBtc(),
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    FeeService.getMinMakerFee(dataModel.isCurrencyForMakerFeeBtc()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            // calculate the RADC value of the BSQ fee and use that...
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        if (dataModel.isCurrencyForMakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        if (dataModel.isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                    btcFormatter) + " + " + getTradeFee();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        if (dataModel.isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            Coin amount = DisplayUtils.parseToCoinWith4Decimals(this.amount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            Coin minAmount = DisplayUtils.parseToCoinWith4Decimals(this.minAmount.get(), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:    private InputValidator.ValidationResult isBtcInputValid(String input) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        return btcValidator.validate(input);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        } else if (dataModel.getIsBtcWalletFunded().get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:            buyerSecurityDeposit.set(btcFormatter.formatCoin(Restrictions.getMinBuyerSecurityDepositAsCoin()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        boolean inputDataValid = isBtcInputValid(amount.get()).isValid &&
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:                isBtcInputValid(minAmount.get()).isValid &&
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        isPlaceOfferButtonDisabled.set(createOfferRequested || !inputDataValid || !dataModel.getIsBtcWalletFunded().get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferViewModel.java:        return dataModel.isCurrencyForMakerFeeBtc() ? btcFormatter : bsqFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.TxFeeEstimationService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.listeners.BalanceListener;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.listeners.BsqBalanceListener;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:import bisq.core.btc.wallet.Restrictions;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    private final BalanceListener btcBalanceListener;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:                                 BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:                                 @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        super(btcWalletService, offerUtil);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        addressEntry = btcWalletService.getOrCreateAddressEntry(offerId, AddressEntry.Context.OFFER_FUNDING);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        btcBalanceListener = new BalanceListener(getAddressEntry().getAddress()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        btcWalletService.addBalanceListener(btcBalanceListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        btcWalletService.removeBalanceListener(btcBalanceListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        if (!isBtcWalletFunded.get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    void setPreferredCurrencyForMakerFeeBtc(boolean preferredCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        preferences.setPayFeeInBtc(preferredCurrencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        return preferences.getPayFeeInBtc() || isBsqForFeeAvailable();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:                Coin value = DisplayUtils.reduceTo4Decimals(price.get().getAmountByVolume(volume.get()), btcFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:            if (isCurrencyForMakerFeeBtc())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        if (isCurrencyForMakerFeeBtc()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        btcWalletService.resetAddressEntriesForOpenOffer(offerId);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        btcWalletService.resetAddressEntriesForOpenOffer(offerId);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        // We need to ensure that for small amount values we don't get a too low RADC amount. We limit it with using the
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        // We need to ensure that for small amount values we don't get a too low RADC amount. We limit it with using the
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    public Coin getMakerFee(boolean isCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        return CoinUtil.getMakerFee(isCurrencyForMakerFeeBtc, amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    public Coin getMakerFeeInBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    public boolean isCurrencyForMakerFeeBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        return offerUtil.isCurrencyForMakerFeeBtc(amount.get());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:    boolean isPreferredFeeCurrencyBtc() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        return preferences.isPayFeeInBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        // When you buy an asset you actually sell RADC.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferDataModel.java:        // This is why an offer to buy BSQ is actually an offer to sell RADC for BSQ.
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewUtil.java:        var info = new AutoTooltipLabel("BSQ is colored RADC that helps fund Bisq developers.");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                                                       boolean isCurrencyForMakerFeeBtc,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:        if (!isCurrencyForMakerFeeBtc && !DevEnv.isDaoActivated()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:        Optional<Volume> optionalBtcFeeInFiat = offerUtil.getFeeInUserFiatCurrency(tradeFee,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                isCurrencyForMakerFeeBtc,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:        return DisplayUtils.getFeeWithFiatAmount(tradeFee, optionalBtcFeeInFiat, formatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                                                                    boolean isCurrencyForMakerFeeBtc,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:        if (isCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:            String feeAsBtc = formatter.formatCoinWithCode(tradeFee);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                    isCurrencyForMakerFeeBtc,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                    .map(feeInFiat -> Res.get("feeOptionWindow.btcFeeWithFiatAndPercentage", feeAsBtc, feeInFiat, percentage))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:                    .orElseGet(() -> Res.get("feeOptionWindow.btcFeeWithPercentage", feeAsBtc, percentage));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferViewModelUtil.java:            // We could calculate the RADC value if the BSQ fee and use that...
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:import bisq.core.btc.model.AddressEntry;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:    protected final BtcWalletService btcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:    protected final BooleanProperty isBtcWalletFunded = new SimpleBooleanProperty();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:    public OfferDataModel(BtcWalletService btcWalletService, OfferUtil offerUtil) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:        this.btcWalletService = btcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:        Coin tradeWalletBalance = btcWalletService.getBalanceForAddress(addressEntry.getAddress());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:            Coin savingWalletBalance = btcWalletService.getSavingWalletBalance();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:        isBtcWalletFunded.set(offerUtil.isBalanceSufficient(totalToPayAsCoin.get(), balance.get()));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/OfferDataModel.java:        if (totalToPayAsCoin.get() != null && isBtcWalletFunded.get() && !showWalletFundedNotification.get()) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:    private final CoinFormatter btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            resultLabel, tradeFeeInBtcLabel, tradeFeeInBsqLabel, xLabel, fakeXLabel, buyerSecurityDepositLabel,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:    protected Label amountBtcLabel, volumeCurrencyLabel, minAmountBtcLabel;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            tradeFeeInBtcToggleListener, tradeFeeInBsqToggleListener, tradeFeeVisibleListener,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            marketPriceMarginListener, volumeListener, buyerSecurityDepositInRADCListener;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:    private AutoTooltipSlideToggleButton tradeFeeInBtcToggle, tradeFeeInBsqToggle;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                            CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        this.btcFormatter = btcFormatter;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        balanceTextField.setFormatter(model.getBtcFormatter());
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            boolean currencyForMakerFeeBtc = model.getDataModel().isCurrencyForMakerFeeBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            tradeFeeInBtcToggle.setSelected(currencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            tradeFeeInBsqToggle.setSelected(!currencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                tradeFeeInBtcToggle.setVisible(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                tradeFeeInBtcToggle.setManaged(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            showInsufficientBsqFundsForBtcFeePaymentPopup();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                showInsufficientBsqFundsForBtcFeePaymentPopup();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:    private void showInsufficientBsqFundsForBtcFeePaymentPopup() {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            message = Res.get("popup.warning.insufficientBsqFundsForBtcFeePayment",
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            message = Res.get("popup.warning.noBsqFundsForBtcFeePayment");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.setMouseTransparent(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                    .onAction(() -> GUIUtil.openWebPage("https://bisq.wiki/Frequently_asked_questions#Why_does_Bisq_require_a_security_deposit_in_RADC.3F"))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.textProperty().bind(model.tradeFeeInBtcWithFiat);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.visibleProperty().bind(model.isTradeFeeVisible);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        fundingHBox.visibleProperty().bind(model.getDataModel().getIsBtcWalletFunded().not().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        fundingHBox.managedProperty().bind(model.getDataModel().getIsBtcWalletFunded().not().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        placeOfferBox.visibleProperty().bind(model.getDataModel().getIsBtcWalletFunded().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        placeOfferBox.managedProperty().bind(model.getDataModel().getIsBtcWalletFunded().and(model.showPayFundsScreenDisplayed));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.textProperty().unbind();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.visibleProperty().unbind();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                        .notification(Res.get("notification.walletUpdate.msg", btcFormatter.formatCoinWithCode(model.getDataModel().getTotalToPayAsCoin().get())))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        buyerSecurityDepositInRADCListener = (observable, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                Label depositInRADCInfo = OfferViewUtil.createPopOverLabel(model.getSecurityDepositPopOverLabel(newValue));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                buyerSecurityDepositInfoInputTextField.setContentForInfoPopOver(depositInRADCInfo);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggleListener = (observable, oldValue, newValue) -> {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            setIsCurrencyForMakerFeeBtc(newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            if (newValue && tradeFeeInBtcToggle.isSelected())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                tradeFeeInBtcToggle.setSelected(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            if (!newValue && !tradeFeeInBtcToggle.isSelected())
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                tradeFeeInBtcToggle.setSelected(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            setIsCurrencyForMakerFeeBtc(!newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                tradeFeeInBtcToggle.setVisible(newValue);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                // show RADC
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:    private void setIsCurrencyForMakerFeeBtc(boolean isCurrencyForMakerFeeBtc) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        model.setIsCurrencyForMakerFeeBtc(isCurrencyForMakerFeeBtc);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            tradeFeeInBtcLabel.setOpacity(isCurrencyForMakerFeeBtc ? 1 : 0.3);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            tradeFeeInBsqLabel.setOpacity(isCurrencyForMakerFeeBtc ? 0.3 : 1);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        model.buyerSecurityDepositInRADC.addListener(buyerSecurityDepositInRADCListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.selectedProperty().addListener(tradeFeeInBtcToggleListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        model.buyerSecurityDepositInRADC.removeListener(buyerSecurityDepositInRADCListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.selectedProperty().removeListener(tradeFeeInBtcToggleListener);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        boolean isPreferredFeeCurrencyBtc = model.getDataModel().isPreferredFeeCurrencyBtc();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        if (!isPreferredFeeCurrencyBtc && !isBsqForFeeAvailable) {
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                        .actionButtonText(Res.get("feeOptionWindow.useRADC"))
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:                            tradeFeeInBtcToggle.setSelected(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        // getEditableValueBox delivers RADC, so we overwrite it with %
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:            if (model.getDataModel().getIsBtcWalletFunded().get() &&
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        amountBtcLabel = amountValueCurrencyBoxTuple.third;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        editOfferElements.add(amountBtcLabel);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        minAmountBtcLabel = amountValueCurrencyBoxTuple.third;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        editOfferElements.add(minAmountBtcLabel);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel = new Label();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.setMouseTransparent(true);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcLabel.setId("trade-fee-textfield");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        vBox.getChildren().addAll(tradeFeeInBtcLabel, tradeFeeInBsqLabel);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle = new AutoTooltipSlideToggleButton();
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.setText("RADC");
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.setVisible(false);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeInBtcToggle.setPadding(new Insets(-8, 5, -10, 5));
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/MutableOfferView.java:        tradeFeeToggleButtonBox.getChildren().addAll(tradeFeeInBtcToggle, tradeFeeInBsqToggle);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferViewModel.java:import bisq.desktop.util.validation.BtcValidator;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferViewModel.java:                                BtcValidator btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferViewModel.java:                                @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferViewModel.java:                btcValidator,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferViewModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferView.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferView.java:        super(model, navigation, preferences, offerDetailsWindow, btcFormatter, bsqFormatter);
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:                                BtcWalletService btcWalletService,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:                                @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:                btcWalletService,
desktop/src/main/java/bisq/desktop/main/offer/bisq_v1/createoffer/CreateOfferDataModel.java:                btcFormatter,
desktop/src/main/java/bisq/desktop/main/market/trades/TradesChartsView.java:                            @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter coinFormatter) {
desktop/src/main/java/bisq/desktop/main/market/trades/TradesChartsView.java:        volumeChart = getVolumeChart(volumeAxisX, volumeAxisY, volumeSeries, "RADC");
desktop/src/main/java/bisq/desktop/main/market/trades/TradesChartsView.java:                return currency.equals("RADC") ?
desktop/src/main/java/bisq/desktop/main/market/trades/TradesChartsView.java:        StringConverter<Number> btcStringConverter = new StringConverter<>() {
desktop/src/main/java/bisq/desktop/main/market/trades/TradesChartsView.java:        VolumeChart volumeChart = new VolumeChart(axisX, axisY, btcStringConverter);
desktop/src/main/java/bisq/desktop/main/market/trades/charts/volume/VolumeBar.java:        String volumeInBtc = volumeStringConverter.toString(candleData.accumulatedAmount);
desktop/src/main/java/bisq/desktop/main/market/trades/charts/volume/VolumeBar.java:        tooltip.setText(Res.get("market.trades.tooltip.volumeBar", volumeInBtc, volumeInUsd, candleData.numTrades, candleData.date));
desktop/src/main/java/bisq/desktop/main/market/MarketView.java:                      @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/market/MarketView.java:                            .append("Amount: ").append(DisplayUtils.formatAmount(offer, formatter)).append(" RADC\n")
desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java:        // Trading btc-fiat is considered as buying/selling RADC, but trading btc-altcoin is
desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java:        // considered as buying/selling Altcoin. Because of this, when viewing a btc-altcoin pair,
desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartView.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartView.java:        TableColumn<OfferListItem, OfferListItem> amountColumn = new AutoTooltipTableColumn<>(Res.get("shared.RADCMinMax"));
desktop/src/main/java/bisq/desktop/main/market/spread/SpreadViewModel.java:    public SpreadViewModel(OfferBook offerBook, PriceFeedService priceFeedService, @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/market/spread/SpreadView.java:    public SpreadView(SpreadViewModel model, @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/market/spread/SpreadViewPaymentMethod.java:    public SpreadViewPaymentMethod(SpreadViewModel model, @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
desktop/src/main/java/bisq/desktop/main/SharedPresentation.java:import bisq.core.btc.wallet.WalletsManager;
desktop/src/main/java/bisq/desktop/components/TxIdTextField.java:import bisq.core.btc.listeners.TxConfidenceListener;
desktop/src/main/java/bisq/desktop/components/TxIdTextField.java:import bisq.core.btc.wallet.BtcWalletService;
desktop/src/main/java/bisq/desktop/components/TxIdTextField.java:    private static BtcWalletService walletService;
desktop/src/main/java/bisq/desktop/components/FundsTextField.java:                    copyText = strings[0]; // exclude the RADC postfix
desktop/src/main/java/bisq/desktop/components/AccountStatusTooltipLabel.java:                Res.get("offerbook.timeSinceSigning.tooltip.checkmark.buyBtc"),
desktop/src/main/java/bisq/desktop/components/TextFieldWithCopyIcon.java:                        copyText = strings[0]; // exclude the RADC postfix
desktop/src/main/java/bisq/desktop/components/TxConfidenceListItem.java:import bisq.core.btc.listeners.TxConfidenceListener;
desktop/src/main/java/bisq/desktop/components/TxConfidenceListItem.java:import bisq.core.btc.wallet.BsqWalletService;
desktop/package/macosx/copy_dbs.sh:dbDir=$BISQ_DIR/btc_mainnet/db
desktop/package/macosx/copy_dbs.sh:cp "$dbDir/TradeStatistics3Store" "$resDir/TradeStatistics3Store_${version}_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:cp "$dbDir/AccountAgeWitnessStore" "$resDir/AccountAgeWitnessStore_${version}_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:cp "$dbDir/DaoStateStore" "$resDir/DaoStateStore_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:cp "$dbDir/SignedWitnessStore" "$resDir/SignedWitnessStore_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:cp -a "$dbDir/BsqBlocks/." "$resDir/BsqBlocks_RADC_MAINNET/"
desktop/package/macosx/copy_dbs.sh:# cp "$dbDir/ProposalStore" "$resDir/ProposalStore_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:# cp "$dbDir/TempProposalStore" "$resDir/TempProposalStore_RADC_MAINNET"
desktop/package/macosx/copy_dbs.sh:# cp "$dbDir/BlindVoteStore" "$resDir/BlindVoteStore_RADC_MAINNET"
docs/autosetup-regtest-dao/clean.sh:rm ~/.local/share/bisq-RADC_REGTEST_Seed_2002 -rf
docs/autosetup-regtest-dao/clean.sh:rm ~/.local/share/bisq-RADC_REGTEST_Alice -rf
docs/autosetup-regtest-dao/clean.sh:rm ~/.local/share/bisq-RADC_REGTEST_Bob -rf
docs/autosetup-regtest-dao/bisq/create_genesis.sh:echo "How much RADC to turn to BSQ for Alice? (sum must be 2.5RADC)"
docs/autosetup-regtest-dao/bisq/create_genesis.sh:echo "How much RADC to turn to BSQ for Bob? (sum must be 2.5RADC)"
docs/autosetup-regtest-dao/bisq/create_genesis.sh:echo "sending 2.5001 RADC to $genesis_input_address"
docs/autosetup-regtest-dao/bisq/seed_node:~/bin/bisq/bisq-seednode --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=2002 --appName=bisq-RADC_REGTEST_Seed_2002 --daoActivated=true --genesisBlockHeight=$genesis_height --genesisTxId=$genesis_tx --fullDaoNode=$dao --rpcUser=$rpcuser --rpcPassword=$rpcpassword --rpcPort=$rpcport --rpcBlockNotificationPort=$blocknotifyport
docs/autosetup-regtest-dao/bisq/alice:~/bin/bisq/bisq-desktop --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=5555 --appName=bisq-RADC_REGTEST_Alice --daoActivated=$dao --genesisBlockHeight=$genesis_height --genesisTxId=$genesis_tx
docs/autosetup-regtest-dao/bisq/bob:~/bin/bisq/bisq-desktop --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=6666 --appName=bisq-RADC_REGTEST_Bob --daoActivated=$dao --genesisBlockHeight=$genesis_height --genesisTxId=$genesis_tx
docs/autosetup-regtest-dao/README.md:4. Enter the amount of RADC in the `create_genesis.sh` script you want `Alice` to receive as BSQ.
docs/autosetup-regtest-dao/README.md:How much RADC to turn to BSQ for Alice? (sum must be 2.5RADC)
docs/autosetup-regtest-dao/README.md:6. Enter the amount of RADC in the `create_genesis.sh` script you want `Bob` to receive as BSQ.
docs/autosetup-regtest-dao/README.md:How much RADC to turn to BSQ for Alice? (sum must be 2.5RADC)
docs/autosetup-regtest-dao/README.md:How much RADC to turn to BSQ for Bob? (sum must be 2.5RADC)
docs/autosetup-regtest-dao/README.md:sending 2.5001 RADC to 2MwNUS6czZZ8tFeFArujf1AghFZUfcJmgRx
docs/dev-setup.md: - 2 local Bisq trading instances (RADC buyer and RADC seller for executing a trade)
docs/dev-setup.md:At first startup you need to create 101 blocks using the command `generatetoaddress 101 address`* from the terminal inside Bitcoin Core, where `address` value could be obtained with the command `getnewaddress`. 101 blocks are required because of the coin maturity (100 blocks) so you need one more to have at least 50 RADC available for spending.
docs/dev-setup.md: - `--baseCurrencyNetwork`: The RADC network to use. Possible values are: `RADC_REGTEST`, `RADC_TESTNET`, `RADC_MAINNET` (default)
docs/dev-setup.md:    --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=2002 --appName=bisq-RADC_REGTEST_Seed_2002
docs/dev-setup.md:    --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=4444 --appName=bisq-RADC_REGTEST_arbitrator
docs/dev-setup.md:    --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=5555 --appName=bisq-RADC_REGTEST_Alice
docs/dev-setup.md:    --baseCurrencyNetwork=RADC_REGTEST --useLocalhostForP2P=true --useDevPrivilegeKeys=true --nodePort=6666 --appName=bisq-RADC_REGTEST_Bob
docs/dao-setup.md:`--daoActivated=true --genesisBlockHeight=111 --genesisTxId=30af0050040befd8af25068cc697e418e09c2d8ebd8d411d2240591b9ec203cf --baseCurrencyNetwork=RADC_REGTEST --useDevPrivilegeKeys=true --useLocalhostForP2P=true --nodePort=7777 --appName=bisq-RADC_REGTEST_Alice_dao --fullDaoNode=true --rpcUser=YOUR_USER_NAME --rpcPassword=YOUR_PW --rpcPort=18443 --rpcBlockNotificationPort=5120`
docs/dao-setup.md:`--daoActivated=true --genesisBlockHeight=111 --genesisTxId=30af0050040befd8af25068cc697e418e09c2d8ebd8d411d2240591b9ec203cf --baseCurrencyNetwork=RADC_REGTEST --useDevPrivilegeKeys=true --useLocalhostForP2P=true --nodePort=8888 --appName=bisq-RADC_REGTEST_Bob_dao`
docs/dao-setup.md: - Send 2.50010000 RADC from Bitcoin Core to another address inside Bitcoin Core (label it with `Genesis funding address`).
docs/dao-setup.md: - Start Alice in full or lite node mode and go to the DAO/Wallet/Receive screen. Copy the BSQ address and use it for one of the receivers of the genesis tx. When pasting into Bitcoin Core remove the `B` prefix - that prefix is marking a BSQ address but technically it is a RADC address.
docs/dao-setup.md: - You send in sum exactly 2.5 RADC to both Alice and Bob. You can choose how to distribute it (e.g. 1 RADC to Alice 1.5 RADC to Bob).
docs/dao-setup.md: - Set the miner fee so that it is exactly the remaining 0.00010000 RADC. That might be the tricky part as miner fee selection is not very convenient in Bitcoin Core. In worst case if you cannot get the right miner fee you can add the difference to one of the receivers (e.g. send 1.0000234 RADC instead of 1 RADC).
docs/dao-setup.md:_Note: It is important that there is exactly 2.5 RADC spent entirely as described, otherwise the genesis tx is invalid._
gradle/verification-metadata.xml:      <component group="org.knowm.xchange" name="xchange-btcmarkets" version="4.4.2">
gradle/verification-metadata.xml:         <artifact name="xchange-btcmarkets-4.4.2.jar">
gradle/verification-metadata.xml:         <artifact name="xchange-btcmarkets-4.4.2.pom">
gradle/verification-metadata.xml:      <component group="org.knowm.xchange" name="xchange-hitbtc" version="4.4.2">
gradle/verification-metadata.xml:         <artifact name="xchange-hitbtc-4.4.2.jar">
gradle/verification-metadata.xml:         <artifact name="xchange-hitbtc-4.4.2.pom">
scripts/create_dao_genesis.sh:RADC_NETWORK=regtest
scripts/create_dao_genesis.sh:                RADC_NETWORK=$2
scripts/create_dao_genesis.sh:BITCOIN_TX="bitcoin-tx -${RADC_NETWORK}"
scripts/create_dao_genesis.sh:GENESIS_RADC_AMOUNT=$(awk "BEGIN {printf \"%.8f\",${GENESIS_BSQ_AMOUNT}/1000000.00}")
scripts/create_dao_genesis.sh:GENESIS_RADC_FUNDING_AMOUNT=$(awk "BEGIN {printf \"%.8f\",${GENESIS_RADC_AMOUNT}+0.0001}")
scripts/create_dao_genesis.sh:btc_balance=$(${BITCOIN_CLI} getbalance)
scripts/create_dao_genesis.sh:if (( $(echo "${btc_balance} < ${GENESIS_RADC_FUNDING_AMOUNT}" | bc -l) )); then
scripts/create_dao_genesis.sh:	printf "ERROR: Insufficient balance; %'.8f RADC is required but only %'.8f RADC is available\n" ${GENESIS_RADC_FUNDING_AMOUNT} ${btc_balance}
scripts/create_dao_genesis.sh:printf "Sending %'.8f RADC to genesis funding address ${genesis_input_address}\n" ${GENESIS_RADC_FUNDING_AMOUNT}
scripts/create_dao_genesis.sh:genesis_input_txid=$(${BITCOIN_CLI} sendtoaddress ${genesis_input_address} ${GENESIS_RADC_FUNDING_AMOUNT})
scripts/create_dao_genesis.sh:vin_json=$(${BITCOIN_CLI} decoderawtransaction ${tx_hex} | jq ".vout | map(select(.value==${GENESIS_RADC_FUNDING_AMOUNT}))[0]" | tr -d "[ \n\t]")
scripts/create_dao_genesis.sh:    btc_amount="$(awk "BEGIN {printf \"%.8f\",${bsq_amount}/1000000.00}")"
scripts/create_dao_genesis.sh:    outaddr="${outaddr}outaddr=${btc_amount}:${bsq_address##B} "
common/src/main/java/bisq/common/app/Version.java:    // The version for the crypto network (RADC_Mainnet = 0, RADC_TestNet = 1, RADC_Regtest = 2, ...)
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_MAINNET(DogecoinMainNetParams.get(), "RADC", "MAINNET", "Radiocoin"),
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_TESTNET(DogecoinTestNet3Params.get(), "RADC", "TESTNET", "Radiocoin"),
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_REGTEST(DogecoinRegTestParams.get(), "RADC", "REGTEST", "Radiocoin"),
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_DAO_TESTNET(DogecoinRegTestParams.get(), "RADC", "REGTEST", "Radiocoin"), // server side regtest until v0.9.5
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_DAO_BETANET(DogecoinMainNetParams.get(), "RADC", "MAINNET", "Radiocoin"), // mainnet test genesis
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:    RADC_DAO_REGTEST(DogecoinRegTestParams.get(), "RADC", "REGTEST", "Radiocoin"); // server side regtest after v0.9.5, had breaking code changes so we started over again
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_MAINNET".equals(name());
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_TESTNET".equals(name());
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_DAO_TESTNET".equals(name());
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_DAO_REGTEST".equals(name());
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_DAO_BETANET".equals(name());
common/src/main/java/bisq/common/config/BaseCurrencyNetwork.java:        return "RADC_REGTEST".equals(name());
common/src/main/java/bisq/common/config/Config.java:    public static final String BANNED_RADC_NODES = "bannedBtcNodes";
common/src/main/java/bisq/common/config/Config.java:    public static final String SOCKS_5_PROXY_RADC_ADDRESS = "socks5ProxyBtcAddress";
common/src/main/java/bisq/common/config/Config.java:    public static final String USE_TOR_FOR_RADC = "useTorForBtc";
common/src/main/java/bisq/common/config/Config.java:    public static final String IGNORE_LOCAL_RADC_NODE = "ignoreLocalBtcNode";
common/src/main/java/bisq/common/config/Config.java:    public static final String RADC_NODES = "btcNodes";
common/src/main/java/bisq/common/config/Config.java:    public static final String NUM_CONNECTIONS_FOR_RADC = "numConnectionsForBtc";
common/src/main/java/bisq/common/config/Config.java:    public static final String RADC_TX_FEE = "btcTxFee";
common/src/main/java/bisq/common/config/Config.java:    public static final String RADC_MIN_TX_FEE = "btcMinTxFee";
common/src/main/java/bisq/common/config/Config.java:    public static final String RADC_FEES_TS = "bitcoinFeesTs";
common/src/main/java/bisq/common/config/Config.java:    public static final String RADC_FEE_INFO = "bitcoinFeeInfo";
common/src/main/java/bisq/common/config/Config.java:    public static final int DEFAULT_NUM_CONNECTIONS_FOR_RADC_PROVIDED = 10; // down from RadiocoinJ default of 12
common/src/main/java/bisq/common/config/Config.java:    public static final int DEFAULT_NUM_CONNECTIONS_FOR_RADC_PUBLIC = 10;
common/src/main/java/bisq/common/config/Config.java:    private static BaseCurrencyNetwork BASE_CURRENCY_NETWORK_VALUE = BaseCurrencyNetwork.RADC_MAINNET;
common/src/main/java/bisq/common/config/Config.java:    public final List<String> bannedBtcNodes;
common/src/main/java/bisq/common/config/Config.java:    public final boolean ignoreLocalBtcNode;
common/src/main/java/bisq/common/config/Config.java:    public final String socks5ProxyBtcAddress;
common/src/main/java/bisq/common/config/Config.java:    public final String btcNodes;
common/src/main/java/bisq/common/config/Config.java:    public final boolean useTorForBtc;
common/src/main/java/bisq/common/config/Config.java:    public final boolean useTorForBtcOptionSetExplicitly;
common/src/main/java/bisq/common/config/Config.java:    public final int numConnectionsForBtc;
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<String> bannedBtcNodesOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(BANNED_RADC_NODES, "List Radiocoin nodes to ban")
common/src/main/java/bisq/common/config/Config.java:                        .defaultsTo(BaseCurrencyNetwork.RADC_MAINNET);
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<Boolean> ignoreLocalBtcNodeOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(IGNORE_LOCAL_RADC_NODE,
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(BITCOIN_REGTEST_HOST, "Radiocoin Core node when using RADC_REGTEST network")
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(USE_LOCALHOST_FOR_P2P, "Use localhost P2P network for development. Only available for non-RADC_MAINNET configuration.")
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<String> socks5ProxyBtcAddressOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(SOCKS_5_PROXY_RADC_ADDRESS, "A proxy address to be used for Radiocoin network.")
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<String> btcNodesOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(RADC_NODES, "Custom nodes used for RadiocoinJ as comma separated IP addresses.")
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<Boolean> useTorForBtcOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(USE_TOR_FOR_RADC, "If set to true RadiocoinJ is routed over tor (socks 5 proxy).")
common/src/main/java/bisq/common/config/Config.java:        ArgumentAcceptingOptionSpec<Integer> numConnectionsForBtcOpt =
common/src/main/java/bisq/common/config/Config.java:                parser.accepts(NUM_CONNECTIONS_FOR_RADC, "Number of connections to the Radiocoin network")
common/src/main/java/bisq/common/config/Config.java:                        .defaultsTo(DEFAULT_NUM_CONNECTIONS_FOR_RADC_PROVIDED);
common/src/main/java/bisq/common/config/Config.java:            this.bannedBtcNodes = options.valuesOf(bannedBtcNodesOpt);
common/src/main/java/bisq/common/config/Config.java:            this.ignoreLocalBtcNode = options.valueOf(ignoreLocalBtcNodeOpt);
common/src/main/java/bisq/common/config/Config.java:            this.socks5ProxyBtcAddress = options.valueOf(socks5ProxyBtcAddressOpt);
common/src/main/java/bisq/common/config/Config.java:            this.btcNodes = options.valueOf(btcNodesOpt);
common/src/main/java/bisq/common/config/Config.java:            this.useTorForBtc = options.valueOf(useTorForBtcOpt);
common/src/main/java/bisq/common/config/Config.java:            this.useTorForBtcOptionSetExplicitly = options.has(useTorForBtcOpt);
common/src/main/java/bisq/common/config/Config.java:            this.numConnectionsForBtc = options.valueOf(numConnectionsForBtcOpt);
common/src/main/java/bisq/common/config/Config.java:        File btcNetworkDir = mkdir(appDataDir, baseCurrencyNetwork.name().toLowerCase());
common/src/main/java/bisq/common/config/Config.java:        this.keyStorageDir = mkdir(btcNetworkDir, "keys");
common/src/main/java/bisq/common/config/Config.java:        this.storageDir = mkdir(btcNetworkDir, "db");
common/src/main/java/bisq/common/config/Config.java:        this.torDir = mkdir(btcNetworkDir, "tor");
common/src/main/java/bisq/common/config/Config.java:        this.walletDir = mkdir(btcNetworkDir, "wallet");
common/src/main/java/bisq/common/config/Config.java:     * {@link BaseCurrencyNetwork#RADC_MAINNET} or the value assigned via the
common/src/test/java/bisq/common/config/ConfigTests.java:    public void whenBannedBtcNodesOptionIsSet_thenBannedBtcNodesPropertyReturnsItsValue() {
common/src/test/java/bisq/common/config/ConfigTests.java:        Config config = configWithOpts(opt(BANNED_RADC_NODES, "foo.onion:8333,bar.onion:8333"));
common/src/test/java/bisq/common/config/ConfigTests.java:        assertThat(config.bannedBtcNodes, contains("foo.onion:8333", "bar.onion:8333"));
monitor/README.md:# 0 -> RADC_MAINNET, 1 -> RADC_TESTNET (default)
monitor/src/main/java/bisq/monitor/Metric.java:            Version.setBaseCryptoNetworkId(Integer.parseInt(properties.getProperty("System." + BASE_CURRENCY_NETWORK, "1"))); // defaults to RADC_TESTNET
monitor/src/main/java/bisq/monitor/metric/MarketStats.java:                if (market.group(1).endsWith("btc")) {
monitor/src/main/resources/metrics.properties:# 0 -> RADC_MAINNET, 1 -> RADC_TESTNET (default)
run-radiox-local-seednode.sh:then launch radiox-exchange.jar with --seedNodes= option and --btcNodes option (replace foo.onion for your .onion address)
run-radiox-local-seednode.sh:connect with example java -jar radiox-exchange.jar --seedNodes=foo.onion:8000 --btcNodes=foo.onion:8333
run-radiox-local-seednode.sh:java -jar radiox-exchange.jar --seedNodes=j53zpx2eji2n4m5eyypnxpg5euirwyrculda3ivwlzw45lwsc56euzad.onion:8000 --btcNodes=j53zpx2eji2n4m5eyypnxpg5euirwyrculda3ivwlzw45lwsc56euzad.onion:8333
seednode/bisq.env:BISQ_BASE_CURRENCY=btc_mainnet
seednode/README.md:sudo cat /bisq/bisq-seednode/btc_mainnet/tor/hiddenservice/hostname
seednode/README.md:After your Bisq seednode is ready, test it by connecting to your new btcnode and bisq!
seednode/README.md:/Applications/Bisq.app/Contents/MacOS/Bisq --seedNodes=foo.onion:8000 --btcNodes=foo.onion:8333
seednode/docker/README.md:    docker run -v /your/tor/dir:/root/.local/share/seednode/btc_mainnet/tor/hiddenservice/ bisq/seednode
seednode/docker/startSeedNode.sh:if [ ! -z "$RADC_NODES" ]; then
seednode/docker/startSeedNode.sh:    ARGS="$ARGS --btcNodes=$RADC_NODES"
seednode/docker-compose.yml:            - BASE_CURRENCY_NETWORK=RADC_REGTEST
seednode/src/main/java/bisq/seednode/SeedNodeMain.java:        // For dev testing (usually on RADC_REGTEST) we don't want to get the seed shut
seednode/src/main/java/bisq/seednode/SeedNodeMain.java:        if (Config.baseCurrencyNetwork() == BaseCurrencyNetwork.RADC_REGTEST) {
seednode/bisq.service:          --btcNodes=${BITCOIN_P2P_HOST}:${BITCOIN_P2P_PORT} \
apitest/dao-setup.gradle:        file(buildResourcesDir + '/dao-setup/bisq-RADC_REGTEST_Alice_dao')
apitest/dao-setup.gradle:                .renameTo(file(buildResourcesDir + '/bisq-RADC_REGTEST_Alice_dao'))
apitest/dao-setup.gradle:        file(buildResourcesDir + '/dao-setup/bisq-RADC_REGTEST_Bob_dao')
apitest/dao-setup.gradle:                .renameTo(file(buildResourcesDir + '/bisq-RADC_REGTEST_Bob_dao'))
apitest/dao-setup.gradle:        delete file(buildResourcesDir + '/bisq-RADC_REGTEST_Seed_2002')
apitest/dao-setup.gradle:        delete file(buildResourcesDir + '/bisq-RADC_REGTEST_Arb_dao')
apitest/dao-setup.gradle:        delete file(buildResourcesDir + '/bisq-RADC_REGTEST_Alice_dao')
apitest/dao-setup.gradle:        delete file(buildResourcesDir + '/bisq-RADC_REGTEST_Bob_dao')
apitest/dao-setup.gradle:        delete file(mainResourcesDir + '/dao-setup/bisq-RADC_REGTEST_Alice_dao/ratemeters.json')
apitest/dao-setup.gradle:        delete file(mainResourcesDir + '/dao-setup/bisq-RADC_REGTEST_Bob_dao/ratemeters.json')
apitest/docs/build-run.md:data directories for Bob and Alice Bisq instances.  Bob & Alice wallets are pre-configured with 10 RADC each, and the
apitest/docs/build-run.md:equivalent of 2.5 RADC in BSQ distributed among Bob & Alice's BSQ wallets.
apitest/docs/api-beta-test-guide.md:`bitcoin-cli getwalletinfo` command, and generate a regtest btc block.
apitest/docs/api-beta-test-guide.md:the other side to perform his step in the protocol, and for btc block generation and asynchronous processing
apitest/docs/api-beta-test-guide.md:of new btc blocks by test daemons -- may not be long enough._
apitest/docs/api-beta-test-guide.md:-a=<btc-amount>         The amount of btc to buy or sell.
apitest/docs/api-beta-test-guide.md:creates a SELL / USD offer for the amount of 0.1 RADC, at a price 2% below the current market price.
apitest/docs/api-beta-test-guide.md:the trade, checking their trade status along the way, and their BSQ / RADC balances when the trade is closed.
apitest/docs/api-beta-test-guide.md:offer to buy 0.125 RADC at a fixed price of  30,800  EUR.
apitest/docs/api-beta-test-guide.md:real RADC.  This section explains how to encrypt your Bisq wallet with the CLI, and unlock it before performing wallet
apitest/docs/api-beta-test-guide.md:related operations such as creating and taking offers, checking balances, and sending BSQ and RADC to external wallets.
apitest/docs/api-beta-test-guide.md:Show full BSQ and RADC wallet balance information:
apitest/docs/api-beta-test-guide.md:Show Bob’s full RADC wallet balance information:
apitest/docs/api-beta-test-guide.md:$ ./bisq-cli --password=xyz --port=9999 getbalance --currency-code=btc
apitest/docs/api-beta-test-guide.md:#### Receiving RADC
apitest/docs/api-beta-test-guide.md:To receive RADC from an external wallet, find an unused RADC address (with a zero balance) to receive the RADC.
apitest/docs/api-beta-test-guide.md:You can check a block explorer for the status of a transaction, or you can check your Bisq RADC wallet address directly:
apitest/docs/api-beta-test-guide.md:$ ./bisq-cli --password=xyz --port=9998 getaddressbalance --address=<btc-address>
apitest/docs/api-beta-test-guide.md:### Sending BSQ and RADC to External Wallets
apitest/docs/api-beta-test-guide.md:Below are commands for sending BSQ and RADC to external wallets.
apitest/docs/api-beta-test-guide.md:Send RADC:
apitest/docs/api-beta-test-guide.md:$ ./bisq-cli --password=xyz --port=9998 sendbtc --address=<btc-address> --amount=<btc-amount>
apitest/docs/api-beta-test-guide.md:Send RADC with a withdrawal transaction fee of 20 sats/byte:
apitest/docs/api-beta-test-guide.md:$ ./bisq-cli --password=xyz --port=9998 sendbtc --address=<btc-address> --amount=<btc-amount>  --tx-fee-rate=20
apitest/docs/api-beta-test-guide.md:transaction fee option in the `sendbsq` and `sendbtc` commands.  The `sendbsq` and `sendbtc` commands'
apitest/docs/api-beta-test-guide.md:In a previous example, Alice created a BUY/ EUR offer to buy 0.125 RADC at a fixed price of  30,800 EUR,
apitest/docs/api-beta-test-guide.md:If Alice was in Japan, and wanted to create an offer to sell 0.125 RADC at 0.5% above the current market JPY price,
apitest/docs/api-beta-test-guide.md:after a BSQ swap offer is taken.  To swap 0.5 RADC for BSQ at a price of 0.00005 RADC for 1 BSQ:
apitest/docs/api-beta-test-guide.md:    --fee-currency=btc
apitest/docs/api-beta-test-guide.md:Payout Published            YES if the seller’s RADC payout tx has been broadcast to the network.
apitest/docs/api-beta-test-guide.md:Withdrawn                   YES if the buyer’s RADC proceeds have been sent to an external wallet.
apitest/docs/api-beta-test-guide.md:$ ./bisq-cli --password=xyz --port=9999 withdrawfunds --trade-id=<trade-id> --address=<btc-address> [--memo=<"memo">]
apitest/docs/api-beta-test-guide.md:The `takeoffer` command will immediately perform the BSQ swap, assuming both sides' wallets have sufficient RADC and
apitest/scripts/limit-order-simulation.sh:#  - Only regtest btc can be bought or sold with the test payment account.
apitest/scripts/limit-order-simulation.sh:#  Script options:  -l <limit-price> -d <direction> -c <country-code> (-m <mkt-price-margin(%)> || -f <fixed-price>) -a <amount(btc)> [-w <price-poll-interval(s)>]
apitest/scripts/limit-order-simulation.sh:#    Create a sell/eur offer to sell 0.125 btc at a fixed-price of 38,000 euros, using a France face to face
apitest/scripts/limit-order-simulation.sh:#    payment account, when the RADC market price rises to or above 40,000 EUR:
apitest/scripts/limit-order-simulation.sh:# Generate some btc blocks.
apitest/scripts/limit-order-simulation.sh:printdate "Generating btc blocks after publishing Alice's offer."
apitest/scripts/limit-order-simulation.sh:genbtcblocks 3 3
apitest/scripts/trade-xmr-simulation.sh:# Runs xmr <-> btc trading scenarios using the API CLI with a local regtest bitcoin node.
apitest/scripts/trade-xmr-simulation.sh:#  Script options:  -d <direction> -m <mkt-price-margin(%)> -f <fixed-price> -a <amount(btc)>
apitest/scripts/trade-xmr-simulation.sh:#    Create a buy/xmr offer to buy 0.125 btc at an xmr fixed-price of 0.05 btc, using an xmr payment account:
apitest/scripts/trade-xmr-simulation.sh:#    Create a sell/xmr offer to sell 0.125 btc at at an xmr mkt-price-margin of 0%, using using an xmr payment account:
apitest/scripts/trade-xmr-simulation.sh:# Generate some btc blocks.
apitest/scripts/trade-xmr-simulation.sh:printdate "Generating btc blocks after publishing Alice's offer."
apitest/scripts/trade-xmr-simulation.sh:genbtcblocks 3 1
apitest/scripts/bsqswap-simulation-utils.sh:    # Generate 1 btc block
apitest/scripts/bsqswap-simulation-utils.sh:    printdate "Generating 1 btc block after BSQ swap execution."
apitest/scripts/bsqswap-simulation-utils.sh:    genbtcblocks 1 2
apitest/scripts/trade-simulation-env.sh:        echo "Usage: $0 [-d buy|sell] [-c <country-code>] [-f <fixed-price> || -m <margin-from-price>] [-a <amount in btc>]" 1>&2
apitest/scripts/trade-simulation-env.sh:        echo "Usage: $0 [-l limit-price] [-d buy|sell] [-c <country-code>] [-f <fixed-price> || -m <margin-from-price>] [-a <amount in btc>] [-w <price-poll-interval(s)>]" 1>&2
apitest/scripts/trade-simulation-env.sh:        echo "Usage: $0 [-d buy|sell] [-f <fixed-price>] [-a <amount in btc>]" 1>&2
apitest/scripts/trade-simulation-env.sh:        echo "Usage: $0 [-d buy|sell] [-f <fixed-price> || -m <margin-from-price>] [-a <amount in btc>]" 1>&2
apitest/scripts/trade-simulation-env.sh:        if pgrep -f "bisq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Arb_dao" > /dev/null ; then
apitest/scripts/trade-simulation-env.sh:        if ps -A | awk '/[b]isq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Arb_dao/ {print $1}' > /dev/null ; then
apitest/scripts/trade-simulation-env.sh:        if pgrep -f "bisq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Alice_dao" > /dev/null ; then
apitest/scripts/trade-simulation-env.sh:        if ps -A | awk '/[b]isq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Alice_dao/ {print $1}' > /dev/null ; then
apitest/scripts/trade-simulation-env.sh:        if pgrep -f "bisq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Alice_dao" > /dev/null ; then
apitest/scripts/trade-simulation-env.sh:        if ps -A | awk '/[b]isq.daemon.app.BisqDaemonMain --appName=bisq-RADC_REGTEST_Alice_dao/ {print $1}' > /dev/null ; then
apitest/scripts/mainnet-test.sh:#    is empty or otherwise contains an unencrypted wallet with a 0 RADC balance
apitest/scripts/mainnet-test.sh:@test "test getbalance when wallet available & unlocked with 0 btc balance" {
apitest/scripts/trade-simulation.sh:# Demonstrates a fiat <-> btc trade using the API CLI with a local regtest bitcoin node.
apitest/scripts/trade-simulation.sh:#  - Only regtest btc can be bought or sold with the test payment account.
apitest/scripts/trade-simulation.sh:#  Script options:  -d <direction> -c <country-code> -m <mkt-price-margin(%)> -f <fixed-price> -a <amount(btc)>
apitest/scripts/trade-simulation.sh:#    Create and take a buy/eur offer to buy 0.125 btc at a mkt-price-margin of 0%, using an Italy face to face
apitest/scripts/trade-simulation.sh:#    Create and take a sell/eur offer to sell 0.125 btc at a fixed-price of 38,000 euros, using a France face to face
apitest/scripts/trade-simulation.sh:# Generate some btc blocks.
apitest/scripts/trade-simulation.sh:printdate "Generating btc blocks after publishing Alice's offer."
apitest/scripts/trade-simulation.sh:genbtcblocks 3 1
apitest/scripts/bsqswap-simulation.sh:# Demonstrates a bsq <-> btc swap trade using the API CLI with a local regtest bitcoin node.
apitest/scripts/bsqswap-simulation.sh:#  Script options:  -d <direction> -c <country-code> -f <fixed-price> -a <amount(btc)>
apitest/scripts/bsqswap-simulation.sh:#    Create and take a bsq swap offer to buy 0.05 btc at a fixed-price of 0.00005 bsq (per 1 btc):
apitest/scripts/bsqswap-simulation.sh:#    Create and take a bsq swap offer to buy 1 btc at a fixed-price of 0.00005 bsq (per 1 btc):
apitest/scripts/bsqswap-simulation.sh:printdate "Alice creating BSQ swap offer: $DIRECTION $AMOUNT RADC for BSQ at fixed price of $FIXED_PRICE RADC per 1 BSQ."
apitest/scripts/bsqswap-simulation.sh:# Generate 1 btc block.
apitest/scripts/bsqswap-simulation.sh:printdate "Generating 1 btc block after publishing Alice's offer."
apitest/scripts/bsqswap-simulation.sh:genbtcblocks 1 1
apitest/scripts/trade-simulation-utils.sh:getbtcoreaddress() {
apitest/scripts/trade-simulation-utils.sh:genbtcblocks() {
apitest/scripts/trade-simulation-utils.sh:	ADDR_PARAM="$(getbtcoreaddress)"
apitest/scripts/trade-simulation-utils.sh:        NEW_BLOCK_HASH=$(genbtcblock "$CMD")
apitest/scripts/trade-simulation-utils.sh:genbtcblock() {
apitest/scripts/trade-simulation-utils.sh:            printdate "Generating btc block while Bob waits for trade deposit to be confirmed."
apitest/scripts/trade-simulation-utils.sh:            genbtcblocks 1 0
apitest/scripts/trade-simulation-utils.sh:    # Generate some btc blocks
apitest/scripts/trade-simulation-utils.sh:    printdate "Generating btc blocks after payment."
apitest/scripts/trade-simulation-utils.sh:    genbtcblocks 2 2
apitest/scripts/trade-simulation-utils.sh:    CMD="$CLI_BASE --port=$PORT getbtcprice --currency-code=$CURRENCY_CODE"
apitest/scripts/rolling-offer-simulation.sh:#  - Only regtest btc can be bought or sold with the test payment account.
apitest/scripts/rolling-offer-simulation.sh:#  Script options:  -d <direction> -c <country-code> (-m <mkt-price-margin(%)> || -f <fixed-price>) -a <amount(btc)>
apitest/scripts/rolling-offer-simulation.sh:#    Create a buy/usd offer to sell 0.1 btc at 2% above market price, using a US face to face payment account:
apitest/scripts/rolling-offer-simulation.sh:    # Generate some btc blocks.
apitest/scripts/rolling-offer-simulation.sh:    printdate "Generating btc blocks after publishing Alice's offer."
apitest/scripts/rolling-offer-simulation.sh:    genbtcblocks 3 2
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    seednode("bisq-RADC_REGTEST_Seed_2002",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    arbdaemon("bisq-RADC_REGTEST_Arb_dao",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    arbdesktop("bisq-RADC_REGTEST_Arb_dao",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    alicedaemon("bisq-RADC_REGTEST_Alice_dao",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    alicedesktop("bisq-RADC_REGTEST_Alice_dao",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    bobdaemon("bisq-RADC_REGTEST_Bob_dao",
apitest/src/main/java/bisq/apitest/config/BisqAppConfig.java:    bobdesktop("bisq-RADC_REGTEST_Bob_dao",
apitest/src/main/java/bisq/apitest/config/ApiTestConfig.java:    public static final String RADC = "RADC";
apitest/src/main/java/bisq/apitest/linux/BisqProcess.java:        this.baseCurrencyNetwork = "RADC_REGTEST";
Makefile:	mv .localnet/bisq-RADC_REGTEST_Alice_dao .localnet/alice
Makefile:	mv .localnet/bisq-RADC_REGTEST_Bob_dao .localnet/bob
Makefile:		--baseCurrencyNetwork=RADC_REGTEST \
Makefile:		--baseCurrencyNetwork=RADC_REGTEST \
Makefile:		--baseCurrencyNetwork=RADC_REGTEST \
Makefile:		--baseCurrencyNetwork=RADC_REGTEST \
Makefile:		--baseCurrencyNetwork=RADC_REGTEST \
cli/src/main/java/bisq/cli/CliMain.java:import bisq.cli.opts.GetRADCMarketPriceOptionParser;
cli/src/main/java/bisq/cli/CliMain.java:import bisq.cli.opts.SendBtcOptionParser;
cli/src/main/java/bisq/cli/CliMain.java:                        case "RADC":
cli/src/main/java/bisq/cli/CliMain.java:                            new TableBuilder(RADC_BALANCE_TBL, balances.getBtc()).build().print(out);
cli/src/main/java/bisq/cli/CliMain.java:                            out.println("RADC");
cli/src/main/java/bisq/cli/CliMain.java:                            new TableBuilder(RADC_BALANCE_TBL, balances.getBtc()).build().print(out);
cli/src/main/java/bisq/cli/CliMain.java:                case getbtcprice: {
cli/src/main/java/bisq/cli/CliMain.java:                    var opts = new GetRADCMarketPriceOptionParser(args).parse();
cli/src/main/java/bisq/cli/CliMain.java:                    var price = client.getBtcPrice(currencyCode);
cli/src/main/java/bisq/cli/CliMain.java:                case sendbtc: {
cli/src/main/java/bisq/cli/CliMain.java:                    var opts = new SendBtcOptionParser(args).parse();
cli/src/main/java/bisq/cli/CliMain.java:                    var txInfo = client.sendBtc(address, amount, txFeeRate, memo);
cli/src/main/java/bisq/cli/CliMain.java:                    out.printf("%s btc sent to %s in tx %s%n",
cli/src/main/java/bisq/cli/CliMain.java:                    out.printf("trade %s funds sent to btc address %s%n", tradeId, address);
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, getbalance.name(), "[--currency-code=<bsq|btc>]", "Get server wallet balances");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, getaddressbalance.name(), "--address=<btc-address>", "Get server wallet address balance");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, getbtcprice.name(), "--currency-code=<currency-code>", "Get current market btc price");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, getfundingaddresses.name(), "", "Get RADC funding addresses");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, sendbtc.name(), "--address=<btc-address> --amount=<btc-amount> \\", "Send RADC");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, "", "--amount=<btc-amount> \\", "");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, "", "[--min-amount=<min-btc-amount>] \\", "");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, "", "[--fee-currency=<bsq|btc>]", "");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, "", "[--fee-currency=<btc|bsq>]", "");
cli/src/main/java/bisq/cli/CliMain.java:            stream.format(rowFormat, withdrawfunds.name(), "--trade-id=<trade-id> --address=<btc-address> \\",
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:import bisq.proto.grpc.BtcBalanceInfo;
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:import bisq.proto.grpc.SendBtcRequest;
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:    public BtcBalanceInfo getBtcBalances() {
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:        return getBalances("RADC").getBtc();
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:    public double getBtcPrice(String currencyCode) {
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:    public String getUnusedBtcAddress() {
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:    public TxInfo sendBtc(String address, String amount, String txFeeRate, String memo) {
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:        var request = SendBtcRequest.newBuilder()
cli/src/main/java/bisq/cli/request/WalletsServiceRequest.java:        return grpcStubs.walletsService.sendBtc(request).getTxInfo();
cli/src/main/java/bisq/cli/Method.java:    getbtcprice,
cli/src/main/java/bisq/cli/Method.java:    sendbtc,
cli/src/main/java/bisq/cli/GrpcClient.java:import bisq.proto.grpc.BtcBalanceInfo;
cli/src/main/java/bisq/cli/GrpcClient.java:    public BtcBalanceInfo getBtcBalances() {
cli/src/main/java/bisq/cli/GrpcClient.java:        return walletsServiceRequest.getBtcBalances();
cli/src/main/java/bisq/cli/GrpcClient.java:    public double getBtcPrice(String currencyCode) {
cli/src/main/java/bisq/cli/GrpcClient.java:        return walletsServiceRequest.getBtcPrice(currencyCode);
cli/src/main/java/bisq/cli/GrpcClient.java:    public String getUnusedBtcAddress() {
cli/src/main/java/bisq/cli/GrpcClient.java:        return walletsServiceRequest.getUnusedBtcAddress();
cli/src/main/java/bisq/cli/GrpcClient.java:    public TxInfo sendBtc(String address, String amount, String txFeeRate, String memo) {
cli/src/main/java/bisq/cli/GrpcClient.java:        return walletsServiceRequest.sendBtc(address, amount, txFeeRate, memo);
cli/src/main/java/bisq/cli/opts/TakeOfferOptionParser.java:    final OptionSpec<String> takerFeeCurrencyCodeOpt = parser.accepts(OPT_FEE_CURRENCY, "taker fee currency code (bsq|btc)")
cli/src/main/java/bisq/cli/opts/TakeOfferOptionParser.java:            .defaultsTo("btc");
cli/src/main/java/bisq/cli/opts/TakeOfferOptionParser.java:        return options.has(takerFeeCurrencyCodeOpt) ? options.valueOf(takerFeeCurrencyCodeOpt) : "btc";
cli/src/main/java/bisq/cli/opts/GetAddressBalanceOptionParser.java:    final OptionSpec<String> addressOpt = parser.accepts(OPT_ADDRESS, "wallet btc address")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:    final OptionSpec<String> amountOpt = parser.accepts(OPT_AMOUNT, "amount of btc to buy or sell")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:    final OptionSpec<String> minAmountOpt = parser.accepts(OPT_MIN_AMOUNT, "minimum amount of btc to buy or sell")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:    final OptionSpec<String> mktPriceMarginPctOpt = parser.accepts(OPT_MKT_PRICE_MARGIN, "market btc price margin (%)")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:    final OptionSpec<String> fixedPriceOpt = parser.accepts(OPT_FIXED_PRICE, "fixed btc price")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:    final OptionSpec<String> makerFeeCurrencyCodeOpt = parser.accepts(OPT_FEE_CURRENCY, "maker fee currency code (bsq|btc)")
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:            .defaultsTo("btc");
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:            throw new IllegalArgumentException("no btc amount specified");
cli/src/main/java/bisq/cli/opts/CreateOfferOptionParser.java:        return options.has(makerFeeCurrencyCodeOpt) ? options.valueOf(makerFeeCurrencyCodeOpt) : "btc";
cli/src/main/java/bisq/cli/opts/GetBalanceOptionParser.java:    final OptionSpec<String> currencyCodeOpt = parser.accepts(OPT_CURRENCY_CODE, "wallet currency code (bsq|btc)")
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:public class SendBtcOptionParser extends AbstractMethodOptionParser implements MethodOpts {
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:    final OptionSpec<String> addressOpt = parser.accepts(OPT_ADDRESS, "destination btc address")
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:    final OptionSpec<String> amountOpt = parser.accepts(OPT_AMOUNT, "amount of btc to send")
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:    public SendBtcOptionParser(String[] args) {
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:    public SendBtcOptionParser parse() {
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:            throw new IllegalArgumentException("no btc address specified");
cli/src/main/java/bisq/cli/opts/SendBtcOptionParser.java:            throw new IllegalArgumentException("no btc amount specified");
cli/src/main/java/bisq/cli/opts/WithdrawFundsOptionParser.java:    final OptionSpec<String> addressOpt = parser.accepts(OPT_ADDRESS, "destination btc address")
cli/src/main/java/bisq/cli/opts/EditOfferOptionParser.java:    final OptionSpec<String> fixedPriceOpt = parser.accepts(OPT_FIXED_PRICE, "fixed btc price")
cli/src/main/java/bisq/cli/opts/EditOfferOptionParser.java:                    "market btc price margin (%)")
cli/src/main/java/bisq/cli/opts/GetRADCMarketPriceOptionParser.java:public class GetRADCMarketPriceOptionParser extends AbstractMethodOptionParser implements MethodOpts {
cli/src/main/java/bisq/cli/opts/GetRADCMarketPriceOptionParser.java:    public GetRADCMarketPriceOptionParser(String[] args) {
cli/src/main/java/bisq/cli/opts/GetRADCMarketPriceOptionParser.java:    public GetRADCMarketPriceOptionParser parse() {
cli/src/main/java/bisq/cli/table/column/MixedTradeFeeColumn.java: * For displaying a mix of BSQ and RADC trade fees with appropriate precision.
cli/src/main/java/bisq/cli/table/column/MixedTradeFeeColumn.java:                : formatSatoshis(value) + " RADC";
cli/src/main/java/bisq/cli/table/column/SatoshiColumn.java: * For displaying RADC or BSQ satoshi values with appropriate precision.
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:import static bisq.cli.CurrencyFormat.formatBtc;
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:public class BtcColumn extends SatoshiColumn {
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:    public BtcColumn(String name) {
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:        String s = formatBtc(value);
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:        return formatBtc(getRow(rowIndex));
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:            String btcString = stringColumn.getRow(rowIndex);
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:            if (btcString.length() < maxColumnValueWidth) {
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:                String paddedBtcString = padEnd(btcString, maxColumnValueWidth, '0');
cli/src/main/java/bisq/cli/table/column/BtcColumn.java:                stringColumn.updateRow(rowIndex, paddedBtcString);
cli/src/main/java/bisq/cli/table/builder/TableType.java:    RADC_BALANCE_TBL,
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_AMOUNT_IN_RADC = "Amount in RADC";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_AMOUNT_RANGE = "RADC(min - max)";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_BUYER_DEPOSIT = "Buyer Deposit (RADC)";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_SELLER_DEPOSIT = "Seller Deposit (RADC)";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_DETAILED_PRICE = "Price in %-3s for 1 RADC";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_DETAILED_PRICE_OF_ALTCOIN = "Price in RADC for 1 %-3s";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_TX_INPUT_SUM = "Tx Inputs (RADC)";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_TX_OUTPUT_SUM = "Tx Outputs (RADC)";
cli/src/main/java/bisq/cli/table/builder/TableBuilderConstants.java:    static final String COL_HEADER_TX_FEE = "Tx Fee (RADC)";
cli/src/main/java/bisq/cli/table/builder/TradeTableColumnSupplier.java:import bisq.cli.table.column.BtcColumn;
cli/src/main/java/bisq/cli/table/builder/TradeTableColumnSupplier.java:    // Can be fiat, btc or altcoin amount represented as longs.  Placing the decimal
cli/src/main/java/bisq/cli/table/builder/TradeTableColumnSupplier.java:            : new BtcColumn(COL_HEADER_AMOUNT_IN_RADC);
cli/src/main/java/bisq/cli/table/builder/TradeTableColumnSupplier.java:                    ? t.getIsCurrencyForTakerFeeBtc() ? "RADC" : "BSQ"
cli/src/main/java/bisq/cli/table/builder/TradeTableColumnSupplier.java:                    : t.getOffer().getIsCurrencyForMakerFeeBtc() ? "RADC" : "BSQ";
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:    protected final Predicate<TradeInfo> isBtcSeller = (t) -> (isMyOffer.test(t) && isSellOffer.test(t))
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:    protected final Predicate<TradeInfo> isTradeFeeBtc = (t) -> isMyOffer.test(t)
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            ? t.getOffer().getIsCurrencyForMakerFeeBtc()
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            : t.getIsCurrencyForTakerFeeBtc();
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            // The RADC seller pays the miner fee for both sides.
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return isBtcSeller.test(t) ? t.getTxFeeAsLong() : 0L;
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return t.getOffer().getIsCurrencyForMakerFeeBtc()
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:                    ? 0L // Maker paid RADC fee, return 0.
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return t.getIsCurrencyForTakerFeeBtc()
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:                    ? 0L // Taker paid RADC fee, return 0.
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:    protected final Function<TradeInfo, Long> toTradeFeeBtc = (t) -> {
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return t.getOffer().getIsCurrencyForMakerFeeBtc()
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return t.getIsCurrencyForTakerFeeBtc()
cli/src/main/java/bisq/cli/table/builder/AbstractTradeListBuilder.java:            return isBuyerMakerAndSellerTaker  // (is RADC buyer / maker)
cli/src/main/java/bisq/cli/table/builder/TableBuilder.java:            case RADC_BALANCE_TBL:
cli/src/main/java/bisq/cli/table/builder/TableBuilder.java:                return new BtcBalanceTableBuilder(protos).build();
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:import bisq.proto.grpc.BtcBalanceInfo;
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:import static bisq.cli.table.builder.TableType.RADC_BALANCE_TBL;
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java: * {@code bisq.proto.grpc.BtcBalanceInfo} object.
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:class BtcBalanceTableBuilder extends AbstractTableBuilder {
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:    // Default columns not dynamically generated with btc balance info.
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:    BtcBalanceTableBuilder(List<?> protos) {
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:        super(RADC_BALANCE_TBL, protos);
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:        BtcBalanceInfo balance = (BtcBalanceInfo) protos.get(0);
cli/src/main/java/bisq/cli/table/builder/BtcBalanceTableBuilder.java:        // Populate columns with btc balance info.
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:        Column<String> colBtcPrice = new StringColumn(format(COL_HEADER_DETAILED_PRICE_OF_ALTCOIN, altcoinTradeCurrency.get()), RIGHT);
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:            colBtcPrice.addRow(o.getPrice());
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:                        colBtcPrice.justify(),
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:                        colBtcPrice.justify(),
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:                    colBtcPrice.justify(),
cli/src/main/java/bisq/cli/table/builder/OfferTableBuilder.java:            // Return "Sell BSQ (Buy RADC)", or "Buy BSQ (Sell RADC)".
cli/src/main/java/bisq/cli/table/builder/AddressBalanceTableBuilder.java:        colAddress = new StringColumn(format(COL_HEADER_ADDRESS, "RADC"));
cli/src/main/java/bisq/cli/table/builder/ClosedTradeTableBuilder.java:                // For BSQ Swaps, RADC buyer pays the BSQ trade fee for both sides (RADC seller pays no fee).
cli/src/main/java/bisq/cli/table/builder/ClosedTradeTableBuilder.java:                var optionalTradeFeeBsq = isBtcSeller.test(t) ? 0L : toTradeFeeBsq.apply(t);
cli/src/main/java/bisq/cli/table/builder/ClosedTradeTableBuilder.java:            } else if (isTradeFeeBtc.test(t)) {
cli/src/main/java/bisq/cli/table/builder/ClosedTradeTableBuilder.java:                colMixedTradeFee.addRow(toTradeFeeBtc.apply(t), false);
cli/src/main/java/bisq/cli/CurrencyFormat.java:    static final DecimalFormat RADC_FORMAT = new DecimalFormat("###,##0.########", DECIMAL_FORMAT_SYMBOLS);
cli/src/main/java/bisq/cli/CurrencyFormat.java:    static final DecimalFormat RADC_TX_FEE_FORMAT = new DecimalFormat("###,###,##0", DECIMAL_FORMAT_SYMBOLS);
cli/src/main/java/bisq/cli/CurrencyFormat.java:    public static String formatBtc(long sats) {
cli/src/main/java/bisq/cli/CurrencyFormat.java:        return RADC_FORMAT.format(new BigDecimal(sats).divide(SATOSHI_DIVISOR));
cli/src/main/java/bisq/cli/CurrencyFormat.java:    public static long toSatoshis(String btc) {
cli/src/main/java/bisq/cli/CurrencyFormat.java:        if (btc.startsWith("-"))
cli/src/main/java/bisq/cli/CurrencyFormat.java:            throw new IllegalArgumentException(format("'%s' is not a positive number", btc));
cli/src/main/java/bisq/cli/CurrencyFormat.java:            return new BigDecimal(btc).multiply(SATOSHI_DIVISOR).longValue();
cli/src/main/java/bisq/cli/CurrencyFormat.java:            throw new IllegalArgumentException(format("'%s' is not a number", btc));
cli/src/main/java/bisq/cli/CurrencyFormat.java:        return RADC_TX_FEE_FORMAT.format(BigDecimal.valueOf(sats));
cli/src/test/java/bisq/cli/CreateOfferSmokeTest.java: Note:  Test harness will not automatically generate RADC blocks to confirm transactions.
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:import static bisq.cli.table.builder.TableType.RADC_BALANCE_TBL;
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:        test.getBtcBalance();
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:    private void getBtcBalance() {
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:        var balance = aliceClient.getBtcBalances();
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:        // var oldTbl = TableFormat.formatBtcBalanceInfoTbl(balance);
cli/src/test/java/bisq/cli/table/GetBalanceCliOutputDiffTest.java:        var newTbl = new TableBuilder(RADC_BALANCE_TBL, balance).build().toString();
.idea/codeStyles/Project.xml:          <package name="com.neemre.btcdcli4j" withSubpackages="true" static="false" />
inventory/src/main/java/bisq/inventory/InventoryMonitorMain.java:    // prog args for regtest: 10 1 RADC_REGTEST
inventory/src/main/java/bisq/inventory/InventoryMonitorMain.java:        BaseCurrencyNetwork network = BaseCurrencyNetwork.RADC_MAINNET;
assets/src/main/java/bisq/asset/coins/BSQ.java:            String addressAsBtc = address.substring(1);
assets/src/main/java/bisq/asset/coins/BSQ.java:            return super.validate(addressAsBtc);
assets/src/main/java/bisq/asset/coins/LiquidBitcoin.java:        super("Liquid Bitcoin", "L-RADC", new LiquidBitcoinAddressValidator());
assets/src/main/java/bisq/asset/coins/RSKSmartBitcoin.java:        super("RSK Smart Bitcoin", "R-RADC", new EtherAddressValidator(I18n.DISPLAY_STRINGS.getString("account.altcoin.popup.validation.RRADC")));
assets/src/main/java/bisq/asset/PrintTool.java:                .filter(e -> !e.getTickerSymbol().equals("RADC"))
assets/src/main/java/bisq/asset/Asset.java: * eg "RADC", and an address validation function. Together, these properties represent
assets/src/main/resources/i18n/displayStrings-assets.properties:account.altcoin.popup.validation.RRADC=RSK Smart Bitcoin address must start with '0x' and must be made up of letters 'A' to 'F' and numbers which are 40 characters long.
assets/src/test/java/bisq/asset/coins/EmercoinTest.java:        assertInvalidAddress("19rem1SSWTphjsFLmcNEAvnfHaBFuDMMae");  // Valid RADC
assets/src/test/java/bisq/asset/coins/Cash2Test.java:        assertInvalidAddress("yAENYbDcrf49FUHHDdSbtCF4EEG6LxxjvE7CsusYoi6bQUoUCfqH9yqjbuTP8i8e5vPYzWqLj1VpdMSZ4DQdhhUB8MtdvcL");
assets/src/test/java/bisq/asset/coins/AdeptioTest.java:        assertInvalidAddress("AZt2Kuy9cWFbTc888HNphppkuCTNyqu5PY");
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:    public boolean isCurrencyForTradeFeeBtc(Tradable tradable) {
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:    public Coin getTotalTradeFee(List<Tradable> tradableList, boolean expectBtcFee) {
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:                .mapToLong(tradable -> getTradeFee(tradable, expectBtcFee))
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:    private long getTradeFee(Tradable tradable, boolean expectBtcFee) {
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:        return expectBtcFee ? getBtcTradeFee(tradable) : getBsqTradeFee(tradable);
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:    public long getBtcTradeFee(Tradable tradable) {
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:            return !tradable.getOffer().isCurrencyForMakerFeeBtc();
core/src/main/java/bisq/core/trade/ClosedTradableManager.java:            return !tradable.getOffer().isCurrencyForMakerFeeBtc();
core/src/main/java/bisq/core/trade/model/bsq_swap/BsqSwapTrade.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/model/TradableList.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/TradableList.java:                                                   BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/trade/model/TradableList.java:                            return BuyerAsMakerTrade.fromProto(tradable.getBuyerAsMakerTrade(), btcWalletService, coreProtoResolver);
core/src/main/java/bisq/core/trade/model/TradableList.java:                            return BuyerAsTakerTrade.fromProto(tradable.getBuyerAsTakerTrade(), btcWalletService, coreProtoResolver);
core/src/main/java/bisq/core/trade/model/TradableList.java:                            return SellerAsMakerTrade.fromProto(tradable.getSellerAsMakerTrade(), btcWalletService, coreProtoResolver);
core/src/main/java/bisq/core/trade/model/TradableList.java:                            return SellerAsTakerTrade.fromProto(tradable.getSellerAsTakerTrade(), btcWalletService, coreProtoResolver);
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                             boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                             BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                                     BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                proto.getIsCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsMakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                             boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                             BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                                     BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                        proto.getIsCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerAsTakerTrade.java:                        btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                              boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                              BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                                     BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                proto.getIsCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsMakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                              boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                              BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                                     BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                        proto.getIsCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerAsTakerTrade.java:                        btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/SellerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:               boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:               boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/BuyerTrade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    private final boolean isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    private byte[] arbitratorBtcPubKey;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    transient final private BtcWalletService btcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                    boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                    BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        this.isCurrencyForTakerFeeBtc = isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                    boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                    BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                btcWalletService,
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                .setIsCurrencyForTakerFeeBtc(isCurrencyForTakerFeeBtc)
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        Optional.ofNullable(arbitratorBtcPubKey).ifPresent(e -> builder.setArbitratorBtcPubKey(ByteString.copyFrom(arbitratorBtcPubKey)));
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        trade.setArbitratorBtcPubKey(ProtoUtil.byteArrayOrNullFromProto(proto.getArbitratorBtcPubKey()));
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            arbitratorBtcPubKey = arbitrator.getBtcPubKey();
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            depositTx = depositTxId != null ? btcWalletService.getTransaction(depositTxId) : null;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        return getDelayedPayoutTx(processModel.getBtcWalletService());
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    // we need to pass the btcWalletService
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    public Transaction getDelayedPayoutTx(BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            if (btcWalletService == null) {
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                log.warn("btcWalletService is null. You might call that method before the tradeManager has " +
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            delayedPayoutTx = btcWalletService.getTxFromSerializedTx(delayedPayoutTxBytes);
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            payoutTx = payoutTxId != null ? btcWalletService.getTransaction(payoutTxId) : null;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:    public byte[] getArbitratorBtcPubKey() {
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        if (arbitratorBtcPubKey == null) {
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:            arbitratorBtcPubKey = arbitrator.getBtcPubKey();
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        checkNotNull(arbitratorBtcPubKey, "ArbitratorPubKey must not be null");
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:        return arbitratorBtcPubKey;
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                ",\n     isCurrencyForTakerFeeBtc=" + isCurrencyForTakerFeeBtc +
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                ",\n     arbitratorBtcPubKey=" + Utilities.bytesAsHexString(arbitratorBtcPubKey) +
core/src/main/java/bisq/core/trade/model/bisq_v1/Trade.java:                ",\n     btcWalletService=" + btcWalletService +
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:    private ChangeListener<Number> btcPeersListener, btcBlockListener;
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:        BooleanProperty hasSufficientBtcPeers = hasSufficientBtcPeers();
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:        BooleanProperty isBtcBlockDownloadComplete = isBtcBlockDownloadComplete();
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:        if (isP2pBootstrapped.get() && hasSufficientBtcPeers.get() && isBtcBlockDownloadComplete.get()) {
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:            p2pNetworkAndWalletReady = EasyBind.combine(isP2pBootstrapped, hasSufficientBtcPeers, isBtcBlockDownloadComplete,
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:    private BooleanProperty isBtcBlockDownloadComplete() {
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:            btcBlockListener = (observable, oldValue, newValue) -> {
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:                    walletsSetup.downloadPercentageProperty().removeListener(btcBlockListener);
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:            walletsSetup.downloadPercentageProperty().addListener(btcBlockListener);
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:    private BooleanProperty hasSufficientBtcPeers() {
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:            btcPeersListener = (observable, oldValue, newValue) -> {
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:                    walletsSetup.numPeersProperty().removeListener(btcPeersListener);
core/src/main/java/bisq/core/trade/txproof/xmr/XmrTxProofService.java:            walletsSetup.numPeersProperty().addListener(btcPeersListener);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapTradeManager.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:import bisq.core.btc.exceptions.InsufficientBsqException;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java: * the buyer add the trade fee to the BSQ input and reduce the tx fee from the RADC output. For the seller its the
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java: * RADC trade amount 100000000 sat (1 RADC)
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java: * Input seller: RADC trade amount + seller tx fee                                               100000000 + 1850
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java: * Output buyer:  RADC trade amount - buyers tx fee                                              100000000 - 1950
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java: * Output seller:  RADC change                                                                   0
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getBuyersBtcPayoutValue(BsqSwapTrade trade, int buyersVBytesSize, long buyerTradeFee) {
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getBuyersBtcPayoutValue(trade.getAmountAsLong(), trade.getTxFeePerVbyte(), buyersVBytesSize, buyerTradeFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getBuyersBtcPayoutValue(long btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getBuyersBtcPayoutValue(btcTradeAmount, buyersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getBuyersBtcPayoutValue(BsqWalletService bsqWalletService,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:                                               Coin btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getBuyersBtcPayoutValue(btcTradeAmount.getValue(), buyersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getEstimatedBuyersBtcPayoutValue(Coin btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getBuyersBtcPayoutValue(btcTradeAmount.getValue(), buyersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    private static Coin getBuyersBtcPayoutValue(long btcTradeAmount, long buyerTxFee) {
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return Coin.valueOf(btcTradeAmount - buyerTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getSellersBtcInputValue(BsqSwapTrade trade, int sellersTxSize, long sellersTradeFee) {
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getSellersBtcInputValue(trade.getAmountAsLong(), trade.getTxFeePerVbyte(), sellersTxSize, sellersTradeFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getSellersBtcInputValue(long btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getSellersBtcInputValue(btcTradeAmount, sellersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getSellersBtcInputValue(BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:                                               Coin btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        Tuple2<List<RawTransactionInput>, Coin> inputsAndChange = getSellersBtcInputsAndChange(btcWalletService,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:                btcTradeAmount.getValue(),
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getSellersBtcInputValue(btcTradeAmount.getValue(), sellersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getEstimatedSellersBtcInputValue(Coin btcTradeAmount,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return getSellersBtcInputValue(btcTradeAmount.getValue(), sellersTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Coin getSellersBtcInputValue(long btcTradeAmount, long sellerTxFee) {
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        return Coin.valueOf(btcTradeAmount + sellerTxFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    public static Tuple2<List<RawTransactionInput>, Coin> getSellersBtcInputsAndChange(BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        Coin required = getSellersBtcInputValue(amount, txFeePerVbyte, sellersTxSize, sellersTradeFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        inputsAndChange = btcWalletService.getInputsAndChange(required);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:        required = getSellersBtcInputValue(amount, txFeePerVbyte, sellersTxSize, sellersTradeFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:            inputsAndChange = btcWalletService.getInputsAndChange(required);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:            required = getSellersBtcInputValue(amount, txFeePerVbyte, sellersTxSize, sellersTradeFee);
core/src/main/java/bisq/core/trade/bsq_swap/BsqSwapCalculation.java:    // Convert RADC trade amount to BSQ amount
core/src/main/java/bisq/core/trade/statistics/TradeStatisticsForJson.java:    // primaryMarket fields are based on industry standard where primaryMarket is always in the focus (in the app RADC is always in the focus - will be changed in a larger refactoring once)
core/src/main/java/bisq/core/trade/statistics/TradeStatistics2.java:        return baseCurrency.equals("RADC") ? counterCurrency : baseCurrency;
core/src/main/java/bisq/core/trade/statistics/TradeStatistics3.java:    private final long amount; // RADC amount
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:    public TradeUtil(BtcWalletService btcWalletService, KeyRing keyRing) {
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:        if (btcWalletService.getAvailableAddressEntries().stream()
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:        if (btcWalletService.getAvailableAddressEntries().stream()
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:        var multiSigAddress = btcWalletService.getAddressEntryListAsImmutableList().stream()
core/src/main/java/bisq/core/trade/bisq_v1/TradeUtil.java:        var payoutAddressEntry = btcWalletService.getAddressEntryListAsImmutableList().stream()
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                                               BtcWalletService btcWalletService)
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                                               BtcWalletService btcWalletService)
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                                               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:                                               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/TradeDataValidation.java:        NetworkParameters params = btcWalletService.getParams();
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:import static bisq.core.btc.model.AddressEntry.Context.AVAILABLE;
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:                               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/trade/bisq_v1/FailedTradesManager.java:        for (var addressEntry : btcWalletService.getAddressEntryListAsImmutableList()) {
core/src/main/java/bisq/core/trade/TradeManager.java:import bisq.core.btc.exceptions.AddressEntryException;
core/src/main/java/bisq/core/trade/TradeManager.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/TradeManager.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/TradeManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/TradeManager.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/trade/TradeManager.java:                        BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/TradeManager.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/trade/TradeManager.java:                    inputsForDepositTxRequest.isCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/TradeManager.java:                    btcWalletService,
core/src/main/java/bisq/core/trade/TradeManager.java:                    inputsForDepositTxRequest.isCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/TradeManager.java:                    btcWalletService,
core/src/main/java/bisq/core/trade/TradeManager.java:        btcWalletService.getAddressEntriesForAvailableBalanceStream()
core/src/main/java/bisq/core/trade/TradeManager.java:                    btcWalletService.swapTradeEntryToAvailableEntry(addressEntry.getOfferId(), AddressEntry.Context.OFFER_FUNDING);
core/src/main/java/bisq/core/trade/TradeManager.java:        if (btcWalletService.isUnconfirmedTransactionsLimitHit() ||
core/src/main/java/bisq/core/trade/TradeManager.java:                            boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/TradeManager.java:                                    isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/TradeManager.java:                                    btcWalletService,
core/src/main/java/bisq/core/trade/TradeManager.java:                                    isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/TradeManager.java:                                    btcWalletService,
core/src/main/java/bisq/core/trade/TradeManager.java:        String fromAddress = btcWalletService.getOrCreateAddressEntry(trade.getId(),
core/src/main/java/bisq/core/trade/TradeManager.java:            btcWalletService.sendFunds(fromAddress, toAddress, amount, fee, aesKey,
core/src/main/java/bisq/core/trade/TradeManager.java:        btcWalletService.resetAddressEntriesForPendingTrade(trade.getId());
core/src/main/java/bisq/core/trade/TradeManager.java:            btcWalletService.swapTradeEntryToAvailableEntry(trade.getId(), AddressEntry.Context.TRADE_PAYOUT);
core/src/main/java/bisq/core/trade/TradeManager.java:                        TransactionConfidence confidence = btcWalletService.getConfidenceForTxId(depositTx.getTxId().toString());
core/src/main/java/bisq/core/trade/TradeManager.java:        btcWalletService.recoverAddressEntry(trade.getId(), entries.first,
core/src/main/java/bisq/core/trade/TradeManager.java:        btcWalletService.recoverAddressEntry(trade.getId(), entries.second,
core/src/main/java/bisq/core/trade/DelayedPayoutAddressProvider.java:        String address = daoFacade.getParamValue(Param.RECIPIENT_RADC_ADDRESS);
core/src/main/java/bisq/core/trade/protocol/Provider.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/Provider.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/Provider.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/Provider.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/trade/protocol/Provider.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/trade/protocol/Provider.java:                    BtcWalletService btcWalletService,
core/src/main/java/bisq/core/trade/protocol/Provider.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapTradePeer.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapTradePeer.java:    private String btcAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapTradePeer.java:        Optional.ofNullable(btcAddress).ifPresent(builder::setBtcAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapTradePeer.java:            bsqSwapTradePeer.setBtcAddress(proto.getBtcAddress());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapTradePeer.java:                ",\r\n     btcAddress='" + btcAddress + '\'' +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:    private String btcAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:        Optional.ofNullable(btcAddress).ifPresent(builder::setBtcAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:        bsqSwapProtocolModel.setBtcAddress(ProtoUtil.stringOrNullFromProto(proto.getBtcAddress()));
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:    public BtcWalletService getBtcWalletService() {
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:        return provider.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/model/BsqSwapProtocolModel.java:                ",\r\n     btcAddress='" + btcAddress + '\'' +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:    private final String buyersBtcPayoutAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:                                String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:                buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:                                 String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:        this.buyersBtcPayoutAddress = buyersBtcPayoutAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:                        .setBuyersBtcPayoutAddress(buyersBtcPayoutAddress)
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BuyersBsqSwapRequest.java:                proto.getBuyersBtcPayoutAddress(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/TxInputsMessage.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/TxInputsMessage.java:    String getBuyersBtcPayoutAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:    private final List<RawTransactionInput> btcInputs;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:    private final long btcChange;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:    private final String btcChangeAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                    List<RawTransactionInput> btcInputs,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                    long btcChange,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                    String btcChangeAddress) {
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                btcInputs,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                btcChange,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                btcChangeAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                     List<RawTransactionInput> btcInputs,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                     long btcChange,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                                     String btcChangeAddress) {
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:        this.btcInputs = btcInputs;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:        this.btcChange = btcChange;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:        this.btcChangeAddress = btcChangeAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                        .addAllBtcInputs(btcInputs.stream().map(RawTransactionInput::toProtoMessage).collect(
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                        .setBtcChange(btcChange)
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                        .setBtcChangeAddress(btcChangeAddress))
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                proto.getBtcInputsList().stream()
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                proto.getBtcChange(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                proto.getBtcChangeAddress()
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                ",\r\n     btcInputs=" + btcInputs +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                ",\r\n     btcChange=" + btcChange +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapFinalizeTxRequest.java:                ",\r\n     btcChangeAddress='" + btcChangeAddress + '\'' +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:    private final String buyersBtcPayoutAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:                                  String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:                buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:                                   String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:        this.buyersBtcPayoutAddress = buyersBtcPayoutAddress;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:                        .setBuyersBtcPayoutAddress(buyersBtcPayoutAddress)
core/src/main/java/bisq/core/trade/protocol/bsq_swap/messages/BsqSwapTxInputsMessage.java:                proto.getBuyersBtcPayoutAddress(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer_as_maker/SendBsqSwapTxInputsMessage.java:                    protocolModel.getBtcAddress(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer_as_taker/SendBuyersBsqSwapRequest.java:                    protocolModel.getBtcAddress(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:            List<TransactionInput> sellersBtcInputs = tradePeer.getTransactionInputs();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:            Coin buyersBtcPayoutAmount = Coin.valueOf(protocolModel.getPayout());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:            String buyersBtcPayoutAddress = protocolModel.getBtcAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:            Coin sellersBtcChangeAmount = Coin.valueOf(tradePeer.getChange());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:            String sellersBtcChangeAddress = tradePeer.getBtcAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:                    sellersBtcInputs,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:                    buyersBtcPayoutAmount,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:                    buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:                    sellersBtcChangeAmount,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesAndSignsFinalizedTx.java:                    sellersBtcChangeAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:            BtcWalletService btcWalletService = protocolModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:            protocolModel.setBtcAddress(btcWalletService.getFreshAddressEntry().getAddressString());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:            long btcPayout = BsqSwapCalculation.getBuyersBtcPayoutValue(trade, buyersTxSize, buyersTradeFee).getValue();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerCreatesBsqInputsAndChange.java:            protocolModel.setPayout(btcPayout);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerPublishesTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/BuyerPublishesTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java: * The important values for out RADC output and out BSQ change output are set already in BuyerCreatesBsqInputsAndChange
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            // We will use only the seller's RADC inputs from the tx, so we do not verify anything else.
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            WalletService btcWalletService = protocolModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            Transaction sellersTransaction = btcWalletService.getTxFromSerializedTx(tx);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            List<RawTransactionInput> sellersRawBtcInputs = request.getBtcInputs();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkArgument(!sellersRawBtcInputs.isEmpty(), "SellersRawBtcInputs must not be empty");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            sellersRawBtcInputs.forEach(input -> input.validate(btcWalletService));
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            List<TransactionInput> sellersBtcInputs = sellersTransaction.getInputs().stream()
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkArgument(sellersBtcInputs.size() == sellersRawBtcInputs.size(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                    "Number of sellersBtcInputs in tx must match the number of sellersRawBtcInputs");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            for (int i = 0; i < sellersBtcInputs.size(); i++) {
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                String parentTxId = sellersBtcInputs.get(i).getOutpoint().getHash().toString();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                String rawParentTxId = sellersRawBtcInputs.get(i).getParentTxId(btcWalletService);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                        "Spending tx mismatch between sellersBtcInputs and sellersRawBtcInputs at index %s", i);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            boolean hasUnSignedInputs = sellersBtcInputs.stream()
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkArgument(!hasUnSignedInputs, "SellersBtcInputs from tx has unsigned inputs");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            long change = request.getBtcChange();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                    "RADC change must be 0 or above dust");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            long sumInputs = sellersRawBtcInputs.stream().mapToLong(input -> input.value).sum();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            int sellersTxSize = BsqSwapCalculation.getVBytesSize(sellersRawBtcInputs, change);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            long sellersBtcInputAmount = BsqSwapCalculation.getSellersBtcInputValue(trade, sellersTxSize, getSellersTradeFee()).getValue();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkArgument(sumInputs >= sellersBtcInputAmount,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                    "Sellers RADC input amount do not match our calculated required RADC input amount");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            long buyersBtcPayout = protocolModel.getPayout();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            long expectedChange = sumInputs - buyersBtcPayout - sellersTxFee - buyersTxFee;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                log.warn("Sellers RADC change is not as expected. This can happen if fee estimation for buyersBsqInputs did not " +
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                log.warn("buyersBtcPayout={}, sumInputs={}, sellersTxFee={}, buyersTxFee={}, expectedChange={}, change={}",
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:                        buyersBtcPayout, sumInputs, sellersTxFee, buyersTxFee, expectedChange, change);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            NetworkParameters params = btcWalletService.getParams();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            Address.fromString(params, sellersBsqPayoutAddress); // If address is not a RADC address it throws an exception
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            String sellersBtcChangeAddress = request.getBtcChangeAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkNotNull(sellersBtcChangeAddress, "sellersBtcChangeAddress must not be null");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            checkArgument(!sellersBtcChangeAddress.isEmpty(), "sellersBtcChangeAddress must not be empty");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            Address.fromString(params, sellersBtcChangeAddress); // If address is not a RADC address it throws an exception
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            tradePeer.setTransactionInputs(sellersBtcInputs);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            tradePeer.setInputs(sellersRawBtcInputs);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/buyer/ProcessBsqSwapFinalizeTxRequest.java:            tradePeer.setBtcAddress(sellersBtcChangeAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java: * The sellersBsqPayoutAmount is calculated here independent of the peers data. The RADC change output will be calculated
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            BtcWalletService btcWalletService = protocolModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            inputs.forEach(input -> input.validate(btcWalletService));
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:                            new TxOutputKey(input.getParentTxId(btcWalletService), (int) input.index))
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:                    .map(input -> new TxOutputKey(input.getParentTxId(btcWalletService), (int) input.index))
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            NetworkParameters params = btcWalletService.getParams();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            String buyersBtcPayoutAddress = message.getBuyersBtcPayoutAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            checkNotNull(buyersBtcPayoutAddress, "buyersBtcPayoutAddress must not be null");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            checkArgument(!buyersBtcPayoutAddress.isEmpty(), "buyersBtcPayoutAddress must not be empty");
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            Address.fromString(params, buyersBtcPayoutAddress); // If address is not a RADC address it throws an exception
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            Address.fromString(params, buyersBsqChangeAddress); // If address is not a RADC address it throws an exception
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessTxInputsMessage.java:            tradePeer.setBtcAddress(buyersBtcPayoutAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SendBsqSwapFinalizeTxRequest.java:                    protocolModel.getBtcAddress());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerMaybePublishesTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerMaybePublishesTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessBsqSwapFinalizedTxMessage.java:            Transaction buyersTransactionWithoutSigs = protocolModel.getBtcWalletService().getTxFromSerializedTx(message.getTx());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/ProcessBsqSwapFinalizedTxMessage.java:            Transaction buyersTransaction = protocolModel.getBtcWalletService().getTxFromSerializedTx(message.getTx());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerSetupTxListener.java:import bisq.core.btc.listeners.TxConfidenceListener;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerSetupTxListener.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            Tuple2<List<RawTransactionInput>, Coin> btcInputsAndChange = BsqSwapCalculation.getSellersBtcInputsAndChange(
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    protocolModel.getBtcWalletService(),
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            List<RawTransactionInput> sellersBtcInputs = btcInputsAndChange.first;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            protocolModel.setInputs(sellersBtcInputs);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            Coin buyersBtcPayoutAmount = BsqSwapCalculation.getBuyersBtcPayoutValue(trade, buyersTxSize, getBuyersTradeFee());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            tradePeer.setPayout(buyersBtcPayoutAmount.getValue());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            String buyersBtcPayoutAddress = tradePeer.getBtcAddress();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            Coin sellersBtcChangeAmount = btcInputsAndChange.second;
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            protocolModel.setChange(sellersBtcChangeAmount.getValue());
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            String sellersBtcChangeAddress = protocolModel.getBtcWalletService().getFreshAddressEntry().getAddressString();
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            protocolModel.setBtcAddress(sellersBtcChangeAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    sellersBtcInputs,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    buyersBtcPayoutAmount,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    buyersBtcPayoutAddress,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    sellersBtcChangeAmount,
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:                    sellersBtcChangeAddress);
core/src/main/java/bisq/core/trade/protocol/bsq_swap/tasks/seller/SellerCreatesAndSignsTx.java:            int sellersTxSize = BsqSwapCalculation.getVBytesSize(sellersBtcInputs, sellersBtcChangeAmount.getValue());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:            if (!trade.isCurrencyForTakerFeeBtc())
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:                takeOfferFeeTx = getBtcWalletService().getTransaction(takeOfferFeeTxId);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:    public BtcWalletService getBtcWalletService() {
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/ProcessModel.java:        return provider.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/model/TradingPeer.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxResponse.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:    private final boolean isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:                                     boolean isCurrencyForTakerFeeBtc,
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:        this.isCurrencyForTakerFeeBtc = isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:                .setIsCurrencyForTakerFeeBtc(isCurrencyForTakerFeeBtc)
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:                proto.getIsCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/messages/InputsForDepositTxRequest.java:                ",\n     isCurrencyForTakerFeeBtc=" + isCurrencyForTakerFeeBtc +
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:            BtcWalletService btcWalletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:            btcWalletService.resetCoinLockedInMultiSigAddressEntry(trade.getId());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/arbitration/PublishedDelayedPayoutTx.java:            Transaction committedDelayedPayoutTx = WalletService.maybeAddSelfTxToWallet(delayedPayoutTx, btcWalletService.getWallet());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerVerifyAndSignContract.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerVerifyAndSignContract.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerVerifyAndSignContract.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerPublishFeeTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerPublishFeeTx.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerPublishFeeTx.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerPublishFeeTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerPublishFeeTx.java:            if (trade.isCurrencyForTakerFeeBtc()) {
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerProcessesInputsForDepositTxResponse.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerProcessesInputsForDepositTxResponse.java:                int myLockTime = processModel.getBtcWalletService().getBestChainHeight() +
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerProcessesInputsForDepositTxResponse.java:            long delay = processModel.getBtcWalletService().getBestChainHeight() - lockTime;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerSendInputsForDepositTxRequest.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerSendInputsForDepositTxRequest.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerSendInputsForDepositTxRequest.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/TakerSendInputsForDepositTxRequest.java:                    trade.isCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:            if (trade.isCurrencyForTakerFeeBtc()) {
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:                transaction = tradeWalletService.createBtcTradingFeeTx(
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/taker/CreateTakerFeeTx.java:                        "disabled due technical problems. Please use the RADC fee option until the issues are resolved. " +
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:import bisq.core.btc.model.PreparedDepositTxAndMakerInputs;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerCreatesAndSignsDepositTx.java:            processModel.getBtcWalletService().setCoinLockedInMultiSigAddressEntry(makerMultiSigAddressEntry, makerInputAmount.value);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java:        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerSignsDepositTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerSignsDepositTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerSignsDepositTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerSignsDepositTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerSignsDepositTx.java:            processModel.getBtcWalletService().setCoinLockedInMultiSigAddressEntry(sellerMultiSigAddressEntry, multiSigValue.value);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_taker/SellerAsTakerCreatesDepositTxInputs.java:import bisq.core.btc.model.InputsAndChangeOutput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:import bisq.core.btc.listeners.AddressConfidenceListener;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:                BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:                            processModel.getBtcWalletService().resetCoinLockedInMultiSigAddressEntry(trade.getId());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:            BtcWalletService.printTx("payoutTx received from network", walletTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:        processModel.getBtcWalletService().resetCoinLockedInMultiSigAddressEntry(trade.getId());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/SetupPayoutTxListener.java:            processModel.getBtcWalletService().removeAddressConfidenceListener(confidenceListener);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/ProcessPeerPublishedDelayedPayoutTxMessage.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/ProcessPeerPublishedDelayedPayoutTxMessage.java:            WalletService.maybeAddSelfTxToWallet(delayedPayoutTx, processModel.getBtcWalletService().getWallet());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerSignsDepositTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerSignsDepositTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerSignsDepositTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerSignsDepositTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerSignsDepositTx.java:            processModel.getBtcWalletService().setCoinLockedInMultiSigAddressEntry(buyerMultiSigAddressEntry, multiSigValue.value);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer_as_taker/BuyerAsTakerCreatesDepositTxInputs.java:import bisq.core.btc.model.InputsAndChangeOutput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/ProcessMediatedPayoutTxPublishedMessage.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/ProcessMediatedPayoutTxPublishedMessage.java:                Transaction committedMediatedPayoutTx = WalletService.maybeAddNetworkTxToWallet(message.getPayoutTx(), processModel.getBtcWalletService().getWallet());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/ProcessMediatedPayoutTxPublishedMessage.java:                processModel.getBtcWalletService().resetCoinLockedInMultiSigAddressEntry(trade.getId());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/FinalizeMediatedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/FinalizeMediatedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/FinalizeMediatedPayoutTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/SignMediatedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/SignMediatedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/mediation/SignMediatedPayoutTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerFinalizesDepositTx.java:            Transaction takersDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(takersRawPreparedDepositTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerFinalizesDepositTx.java:            Transaction myDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(myRawPreparedDepositTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerSendsInputsForDepositTxResponse.java:        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:import bisq.core.btc.model.PreparedDepositTxAndMakerInputs;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller_as_maker/SellerAsMakerCreatesUnsignedDepositTx.java:            processModel.getBtcWalletService().setCoinLockedInMultiSigAddressEntry(makerMultiSigAddressEntry, makerInputAmount.value);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerSendsInputsForDepositTxResponse.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerSendsInputsForDepositTxResponse.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerSendsInputsForDepositTxResponse.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerCreateAndSignContract.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerCreateAndSignContract.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerCreateAndSignContract.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerSetsLockTime.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/maker/MakerSetsLockTime.java:            long lockTime = processModel.getBtcWalletService().getBestChainHeight() + delay;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:            Transaction depositTx = processModel.getBtcWalletService().getTxFromSerializedTx(depositTxBytes);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:            Wallet wallet = processModel.getBtcWalletService().getWallet();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:            BtcWalletService.printTx("depositTx received from peer", committedDepositTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDepositTxAndDelayedPayoutTxMessage.java:            processModel.getBtcWalletService().swapTradeEntryToAvailableEntry(trade.getId(),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSendCounterCurrencyTransferStartedMessage.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSendCounterCurrencyTransferStartedMessage.java:            AddressEntry payoutAddressEntry = processModel.getBtcWalletService().getOrCreateAddressEntry(tradeId,
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessDelayedPayoutTxSignatureRequest.java:            Transaction preparedDelayedPayoutTx = processModel.getBtcWalletService().getTxFromSerializedTx(delayedPayoutTxAsBytes);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:import bisq.core.btc.listeners.AddressConfidenceListener;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:                BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:            BtcWalletService.printTx("depositTx received from network", walletTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:        processModel.getBtcWalletService().swapTradeEntryToAvailableEntry(trade.getId(),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSetupDepositTxListener.java:            processModel.getBtcWalletService().removeAddressConfidenceListener(confidenceListener);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerVerifiesPreparedDelayedPayoutTx.java:                    processModel.getBtcWalletService());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerVerifiesPreparedDelayedPayoutTx.java:                var preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:            BtcWalletService btcWalletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:            NetworkParameters params = btcWalletService.getParams();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:            DeterministicKey myMultiSigKeyPair = btcWalletService.getMultiSigKeyPair(id, buyerMultiSigPubKey);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignsDelayedPayoutTx.java:                    btcWalletService.getOrCreateAddressEntry(id, AddressEntry.Context.MULTI_SIG).getPubKey()),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessPayoutTxPublishedMessage.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessPayoutTxPublishedMessage.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessPayoutTxPublishedMessage.java:                Transaction committedPayoutTx = WalletService.maybeAddNetworkTxToWallet(message.getPayoutTx(), processModel.getBtcWalletService().getWallet());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessPayoutTxPublishedMessage.java:                BtcWalletService.printTx("payoutTx received from peer", committedPayoutTx);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerProcessPayoutTxPublishedMessage.java:                processModel.getBtcWalletService().resetCoinLockedInMultiSigAddressEntry(trade.getId());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerSignPayoutTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerFinalizesDelayedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerFinalizesDelayedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerFinalizesDelayedPayoutTx.java:            BtcWalletService btcWalletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerFinalizesDelayedPayoutTx.java:            Transaction preparedDepositTx = btcWalletService.getTxFromSerializedTx(processModel.getPreparedDepositTx());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerFinalizesDelayedPayoutTx.java:                    btcWalletService.getOrCreateAddressEntry(id, AddressEntry.Context.MULTI_SIG).getPubKey()),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/buyer/BuyerVerifiesFinalDelayedPayoutTx.java:                    processModel.getBtcWalletService());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:            BtcWalletService btcWalletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:            NetworkParameters params = btcWalletService.getParams();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:            DeterministicKey myMultiSigKeyPair = btcWalletService.getMultiSigKeyPair(id, sellerMultiSigPubKey);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignsDelayedPayoutTx.java:                    btcWalletService.getOrCreateAddressEntry(id, AddressEntry.Context.MULTI_SIG).getPubKey()),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerProcessDelayedPayoutTxSignatureResponse.java:                    processModel.getBtcWalletService().getTxFromSerializedTx(response.getDepositTx())
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignAndFinalizePayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignAndFinalizePayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerSignAndFinalizePayoutTx.java:            BtcWalletService walletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerCreatesDelayedPayoutTx.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerCreatesDelayedPayoutTx.java:            String donationAddressString = processModel.getDaoFacade().getParamValue(Param.RECIPIENT_RADC_ADDRESS);
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerCreatesDelayedPayoutTx.java:                    processModel.getBtcWalletService());
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerFinalizesDelayedPayoutTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerFinalizesDelayedPayoutTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerFinalizesDelayedPayoutTx.java:            BtcWalletService btcWalletService = processModel.getBtcWalletService();
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerFinalizesDelayedPayoutTx.java:                    btcWalletService.getOrCreateAddressEntry(id, AddressEntry.Context.MULTI_SIG).getPubKey()),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerPublishesDepositTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerPublishesDepositTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerPublishesDepositTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/seller/SellerPublishesDepositTx.java:                                processModel.getBtcWalletService().swapTradeEntryToAvailableEntry(processModel.getOffer().getId(),
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/BroadcastPayoutTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/trade/protocol/bisq_v1/tasks/BroadcastPayoutTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:import static bisq.core.util.FormattingUtils.RADC_FORMATTER_KEY;
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:    private static final String I18N_KEY_TOTAL_TRADE_FEE_RADC = "closedTradesSummaryWindow.totalTradeFeeInBtc.value";
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:    private final CoinFormatter btcFormatter;
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                                   @Named(RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:        this.btcFormatter = btcFormatter;
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:        return tradable.getOptionalAmount().map(btcFormatter::formatCoin).orElse("");
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                btcFormatter.formatCoin(totalTradeAmount, true),
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:        return btcFormatter.formatCoin(getTxFee(tradable));
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                btcFormatter.formatCoin(totalTxFee, true),
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                btcFormatter.formatCoin(tradable.getOffer().getBuyerSecurityDeposit());
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                btcFormatter.formatCoin(tradable.getOffer().getSellerSecurityDeposit());
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:            closedTradableManager.getBtcTradeFee(tradable);
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:            return btcFormatter.formatCoin(Coin.valueOf(closedTradableManager.getBtcTradeFee(tradable)), appendCode);
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:    public String getTotalTradeFeeInBtcAsString(Coin totalTradeAmount, Coin totalTradeFee) {
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:        return Res.get(I18N_KEY_TOTAL_TRADE_FEE_RADC,
core/src/main/java/bisq/core/trade/ClosedTradableFormatter.java:                btcFormatter.formatCoin(totalTradeFee, true),
core/src/main/java/bisq/core/locale/CurrencyUtil.java:        result.add(new CryptoCurrency("L-RADC", "Liquid Bitcoin"));
core/src/main/java/bisq/core/locale/CurrencyUtil.java:        result.add(new CryptoCurrency("R-RADC", "RSK Smart Bitcoin"));
core/src/main/java/bisq/core/locale/CurrencyUtil.java:     * We return true if it is RADC or any of our currencies available in the assetRegistry.
core/src/main/java/bisq/core/locale/CurrencyUtil.java:            // RADC is not part of our assetRegistry so treat it extra here. Other old base currencies (LTC, DOGE, DASH)
core/src/main/java/bisq/core/locale/CurrencyUtil.java:            // If RADC is the code (used in tests) we also want return Bitcoin as name.
core/src/main/java/bisq/core/locale/CurrencyUtil.java:            String btcOrRemovedAsset = "RADC".equals(currencyCode) ? "Radiocoin" :
core/src/main/java/bisq/core/locale/CurrencyUtil.java:            return getCryptoCurrency(currencyCode).map(TradeCurrency::getName).orElse(btcOrRemovedAsset);
core/src/main/java/bisq/core/locale/CurrencyUtil.java:        // We check for exact match with network, e.g. RADC$TESTNET
core/src/main/java/bisq/core/locale/GlobalSettings.java:    private static String btcDenomination;
core/src/main/java/bisq/core/locale/GlobalSettings.java:    public static void setBtcDenomination(String btcDenomination) {
core/src/main/java/bisq/core/locale/GlobalSettings.java:        GlobalSettings.btcDenomination = btcDenomination;
core/src/main/java/bisq/core/locale/GlobalSettings.java:    public static String getBtcDenomination() {
core/src/main/java/bisq/core/locale/GlobalSettings.java:        return btcDenomination;
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:import bisq.core.btc.model.AddressEntryList;
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:    private final Provider<BtcWalletService> btcWalletService;
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:    public CorePersistenceProtoResolver(Provider<BtcWalletService> btcWalletService,
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/proto/persistable/CorePersistenceProtoResolver.java:                    return TradableList.fromProto(proto.getTradableList(), this, btcWalletService.get());
core/src/main/java/bisq/core/proto/ProtoDevUtil.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/util/ParsingUtils.java:                log.warn("Exception at parseToBtc: " + t.toString());
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:import bisq.core.util.validation.BtcAddressValidator;
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    // Note: BtcFormat was intended to be used, but it leads to many problems (automatic format to mBit,
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    private final MonetaryFormat btcCoinFormat;
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        this.btcCoinFormat = Config.baseCurrencyNetworkParameters().getMonetaryFormat();
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    public String formatRADCSatoshis(long satoshi) {
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        return FormattingUtils.formatCoin(satoshi, btcCoinFormat);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    public String formatRADCWithCode(long satoshi) {
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        return FormattingUtils.formatCoinWithCode(satoshi, btcCoinFormat);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    public String formatRADCWithCode(Coin coin) {
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        return FormattingUtils.formatCoinWithCode(coin, btcCoinFormat);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    private String formatRADC(Coin coin) {
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        return FormattingUtils.formatCoin(coin.value, btcCoinFormat);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:    public Coin parseToRADC(String input) {
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:        return ParsingUtils.parseToCoin(input, btcCoinFormat);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:            case RADC:
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:                return formatRADCWithCode(parseToRADC(value));
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:            case RADC:
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:                return parseToRADC(inputValue);
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:            case RADC:
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:                return formatRADC(parseParamValueToCoin(param, inputValue));
core/src/main/java/bisq/core/util/coin/BsqFormatter.java:                InputValidator.ValidationResult validationResult = new BtcAddressValidator().validate(inputValue);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/util/coin/CoinUtil.java:    public static Coin getFeePerBtc(Coin feePerBtc, Coin amount) {
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        double feePerBtcAsDouble = feePerBtc != null ? (double) feePerBtc.value : 0;
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        double btcAsDouble = (double) Coin.COIN.value;
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        double fact = amountAsDouble / btcAsDouble;
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        return Coin.valueOf(Math.round(feePerBtcAsDouble * fact));
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @param value Btc amount to be converted to percent value. E.g. 0.01 RADC is 1% (of 1 RADC)
core/src/main/java/bisq/core/util/coin/CoinUtil.java:    public static double getAsPercentPerBtc(Coin value) {
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        return getAsPercentPerBtc(value, Coin.COIN);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @param part Btc amount to be converted to percent value, based on total value passed.
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     *              E.g. 0.1 RADC is 25% (of 0.4 RADC)
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @param total Total Btc amount the percentage part is calculated from
core/src/main/java/bisq/core/util/coin/CoinUtil.java:    public static double getAsPercentPerBtc(Coin part, Coin total) {
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        double btcAsDouble = total != null ? (double) total.value : 1;
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        return MathUtils.roundDouble(asDouble / btcAsDouble, 4);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @return The percentage as Coin (e.g. 1% of 1 RADC is 0.01 RADC)
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @param isCurrencyForMakerFeeBtc {@code true} to pay fee in RADC, {@code false} to pay fee in BSQ
core/src/main/java/bisq/core/util/coin/CoinUtil.java:     * @param amount                   the amount of RADC to trade
core/src/main/java/bisq/core/util/coin/CoinUtil.java:    public static Coin getMakerFee(boolean isCurrencyForMakerFeeBtc, @Nullable Coin amount) {
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        Coin feePerBtc = getFeePerBtc(FeeService.getMakerFeePerBtc(isCurrencyForMakerFeeBtc), amount);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        Coin minMakerFee = FeeService.getMinMakerFee(isCurrencyForMakerFeeBtc);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        return maxCoin(feePerBtc, minMakerFee);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:    public static Coin getTakerFee(boolean isCurrencyForTakerFeeBtc, @Nullable Coin amount) {
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        Coin feePerBtc = getFeePerBtc(FeeService.getTakerFeePerBtc(isCurrencyForTakerFeeBtc), amount);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        Coin minTakerFee = FeeService.getMinTakerFee(isCurrencyForTakerFeeBtc);
core/src/main/java/bisq/core/util/coin/CoinUtil.java:        return maxCoin(feePerBtc, minTakerFee);
core/src/main/java/bisq/core/util/coin/ImmutableCoinFormatter.java:    // Note: BtcFormat was intended to be used, but it lead to many problems (automatic format to mBit,
core/src/main/java/bisq/core/util/coin/ImmutableCoinFormatter.java:    // RADC
core/src/main/java/bisq/core/util/FormattingUtils.java:    public static final String RADC_FORMATTER_KEY = "RADC";
core/src/main/java/bisq/core/util/FormattingUtils.java:                // we don't use the code feature from coinFormat as it does automatic switching between mRADC and RADC and
core/src/main/java/bisq/core/util/FormattingUtils.java:                log.warn("Exception at formatBtc: " + t.toString());
core/src/main/java/bisq/core/util/FeeReceiverSelector.java:    public static final String RADC_FEE_RECEIVER_ADDRESS = "38bZBj5peYS3Husdz7AH3gEUiUbYRD951t";
core/src/main/java/bisq/core/util/FeeReceiverSelector.java:        return Config.baseCurrencyNetwork().isMainnet() ? RADC_FEE_RECEIVER_ADDRESS :
core/src/main/java/bisq/core/util/FeeReceiverSelector.java:                .flatMap(f -> Optional.ofNullable(f.getBtcFeeReceiverAddresses()))
core/src/main/java/bisq/core/util/AveragePriceUtil.java:        Price bsqPrice = Price.valueOf("BSQ", getRADCAverage(bsqTradePastXDays));
core/src/main/java/bisq/core/util/AveragePriceUtil.java:    private static long getRADCAverage(List<TradeStatistics3> list) {
core/src/main/java/bisq/core/util/AveragePriceUtil.java:            accumulatedAmount += item.getTradeAmount().getValue(); // Amount of RADC traded
core/src/main/java/bisq/core/util/AveragePriceUtil.java:        // Use next USD/RADC print as price to calculate BSQ/USD rate
core/src/main/java/bisq/core/util/AveragePriceUtil.java:        var usdRADCPrice = 10000d; // Default to 10000 USD per RADC if there is no USD feed at all
core/src/main/java/bisq/core/util/AveragePriceUtil.java:            usdRADCPrice = usdList.stream()
core/src/main/java/bisq/core/util/AveragePriceUtil.java:                    .orElse(usdRADCPrice);
core/src/main/java/bisq/core/util/AveragePriceUtil.java:            var btcAmount = MathUtils.scaleDownByPowerOf10((double) item.getTradeAmount().getValue(),
core/src/main/java/bisq/core/util/AveragePriceUtil.java:            usdBsqList.add(new Tuple2<>(usdRADCPrice * btcAmount, bsqAmount));
core/src/main/java/bisq/core/util/validation/BtcAddressValidator.java:public final class BtcAddressValidator extends InputValidator {
core/src/main/java/bisq/core/util/validation/BtcAddressValidator.java:    public BtcAddressValidator() {
core/src/main/java/bisq/core/util/validation/BtcAddressValidator.java:            return validateBtcAddress(input);
core/src/main/java/bisq/core/util/validation/BtcAddressValidator.java:    private ValidationResult validateBtcAddress(String input) {
core/src/main/java/bisq/core/util/validation/BtcAddressValidator.java:            return new ValidationResult(false, Res.get("validation.btc.invalidFormat"));
core/src/main/java/bisq/core/util/validation/IntegerValidator.java:            return new ValidationResult(false, Res.get("validation.btc.toSmall", minValue));
core/src/main/java/bisq/core/util/validation/IntegerValidator.java:            return new ValidationResult(false, Res.get("validation.btc.toLarge", maxValue));
core/src/main/java/bisq/core/user/PreferencesPayload.java:import static bisq.core.btc.wallet.Restrictions.getDefaultBuyerSecurityDepositAsPercent;
core/src/main/java/bisq/core/user/PreferencesPayload.java:    // custom btc nodes
core/src/main/java/bisq/core/user/PreferencesPayload.java:    private boolean payFeeInBtc = true;
core/src/main/java/bisq/core/user/PreferencesPayload.java:                .setPayFeeInBtc(payFeeInBtc)
core/src/main/java/bisq/core/user/PreferencesPayload.java:                proto.getPayFeeInBtc(),
core/src/main/java/bisq/core/user/Preferences.java:import bisq.core.btc.nodes.BtcNodes;
core/src/main/java/bisq/core/user/Preferences.java:import bisq.core.btc.nodes.LocalBitcoinNode;
core/src/main/java/bisq/core/user/Preferences.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/user/Preferences.java: private static final ArrayList<BlockChainExplorer> RADC_MAIN_NET_EXPLORERS = new ArrayList<>(Arrays.asList(
core/src/main/java/bisq/core/user/Preferences.java:    private static final ArrayList<BlockChainExplorer> RADC_TEST_NET_EXPLORERS = new ArrayList<>(Arrays.asList(
core/src/main/java/bisq/core/user/Preferences.java:    private static final ArrayList<BlockChainExplorer> RADC_DAO_TEST_NET_EXPLORERS = new ArrayList<>(Collections.singletonList(
core/src/main/java/bisq/core/user/Preferences.java:          new BlockChainExplorer("RADC DAO-testnet explorer", "https://bisq.network/explorer/btc/dao_testnet/tx/", "https://bisq.network/explorer/btc/dao_testnet/address/")
core/src/main/java/bisq/core/user/Preferences.java:    private final String btcNodesFromOptions, referralIdFromOptions,
core/src/main/java/bisq/core/user/Preferences.java:                       @Named(Config.RADC_NODES) String btcNodesFromOptions,
core/src/main/java/bisq/core/user/Preferences.java:        this.btcNodesFromOptions = btcNodesFromOptions;
core/src/main/java/bisq/core/user/Preferences.java:            setBlockChainExplorerMainNet(RADC_MAIN_NET_EXPLORERS.get(0));
core/src/main/java/bisq/core/user/Preferences.java:            setBlockChainExplorerTestNet(RADC_TEST_NET_EXPLORERS.get(0));
core/src/main/java/bisq/core/user/Preferences.java:        ArrayList<BlockChainExplorer> btcExplorers = getBlockChainExplorers();
core/src/main/java/bisq/core/user/Preferences.java:            setBlockChainExplorer(btcExplorers.get(0));
core/src/main/java/bisq/core/user/Preferences.java:        if (config.useTorForBtcOptionSetExplicitly)
core/src/main/java/bisq/core/user/Preferences.java:            setUseTorForBitcoinJ(config.useTorForBtc);
core/src/main/java/bisq/core/user/Preferences.java:        if (btcNodesFromOptions != null && !btcNodesFromOptions.isEmpty()) {
core/src/main/java/bisq/core/user/Preferences.java:            if (getBitcoinNodes() != null && !getBitcoinNodes().equals(btcNodesFromOptions)) {
core/src/main/java/bisq/core/user/Preferences.java:                        "The Radiocoin node(s) {} from the program argument will be used.", btcNodesFromOptions);
core/src/main/java/bisq/core/user/Preferences.java:            setBitcoinNodes(btcNodesFromOptions);
core/src/main/java/bisq/core/user/Preferences.java:            setBitcoinNodesOptionOrdinal(BtcNodes.BitcoinNodesOption.CUSTOM.ordinal());
core/src/main/java/bisq/core/user/Preferences.java:    public void setPayFeeInBtc(boolean payFeeInBtc) {
core/src/main/java/bisq/core/user/Preferences.java:        prefPayload.setPayFeeInBtc(payFeeInBtc);
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_MAINNET:
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_TESTNET:
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_REGTEST:
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_TESTNET:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_DAO_TEST_NET_EXPLORERS.get(0);
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_BETANET:
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_REGTEST:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_DAO_TEST_NET_EXPLORERS.get(0);
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_MAINNET:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_MAIN_NET_EXPLORERS;
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_TESTNET:
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_REGTEST:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_TEST_NET_EXPLORERS;
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_TESTNET:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_DAO_TEST_NET_EXPLORERS;
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_BETANET:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_MAIN_NET_EXPLORERS;
core/src/main/java/bisq/core/user/Preferences.java:            case RADC_DAO_REGTEST:
core/src/main/java/bisq/core/user/Preferences.java:                return RADC_DAO_TEST_NET_EXPLORERS;
core/src/main/java/bisq/core/user/Preferences.java:        // localhost Bitcoin node or if we are not on mainnet, unless the useTorForBtc
core/src/main/java/bisq/core/user/Preferences.java:                && !config.useTorForBtcOptionSetExplicitly)
core/src/main/java/bisq/core/user/Preferences.java:    //TODO remove and use isPayFeeInBtc instead
core/src/main/java/bisq/core/user/Preferences.java:    public boolean getPayFeeInBtc() {
core/src/main/java/bisq/core/user/Preferences.java:        return prefPayload.isPayFeeInBtc();
core/src/main/java/bisq/core/user/Preferences.java:        void setPayFeeInBtc(boolean payFeeInBtc);
core/src/main/java/bisq/core/filter/Filter.java:    private final boolean preventPublicBtcNetwork;
core/src/main/java/bisq/core/filter/Filter.java:    private final List<String> btcNodes;
core/src/main/java/bisq/core/filter/Filter.java:    private final List<String> btcFeeReceiverAddresses;
core/src/main/java/bisq/core/filter/Filter.java:    private final long makerFeeBtc;
core/src/main/java/bisq/core/filter/Filter.java:    private final long takerFeeBtc;
core/src/main/java/bisq/core/filter/Filter.java:                filter.isPreventPublicBtcNetwork(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getBtcNodes(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getBtcFeeReceiverAddresses(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getMakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getTakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.isPreventPublicBtcNetwork(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getBtcNodes(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getBtcFeeReceiverAddresses(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getMakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                filter.getTakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                  boolean preventPublicBtcNetwork,
core/src/main/java/bisq/core/filter/Filter.java:                  List<String> btcNodes,
core/src/main/java/bisq/core/filter/Filter.java:                  List<String> btcFeeReceiverAddresses,
core/src/main/java/bisq/core/filter/Filter.java:                  long makerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:                  long takerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:                preventPublicBtcNetwork,
core/src/main/java/bisq/core/filter/Filter.java:                btcNodes,
core/src/main/java/bisq/core/filter/Filter.java:                btcFeeReceiverAddresses,
core/src/main/java/bisq/core/filter/Filter.java:                makerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:                takerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:                  boolean preventPublicBtcNetwork,
core/src/main/java/bisq/core/filter/Filter.java:                  List<String> btcNodes,
core/src/main/java/bisq/core/filter/Filter.java:                  List<String> btcFeeReceiverAddresses,
core/src/main/java/bisq/core/filter/Filter.java:                  long makerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:                  long takerFeeBtc,
core/src/main/java/bisq/core/filter/Filter.java:        this.preventPublicBtcNetwork = preventPublicBtcNetwork;
core/src/main/java/bisq/core/filter/Filter.java:        this.btcNodes = btcNodes;
core/src/main/java/bisq/core/filter/Filter.java:        this.btcFeeReceiverAddresses = btcFeeReceiverAddresses;
core/src/main/java/bisq/core/filter/Filter.java:        this.makerFeeBtc = makerFeeBtc;
core/src/main/java/bisq/core/filter/Filter.java:        this.takerFeeBtc = takerFeeBtc;
core/src/main/java/bisq/core/filter/Filter.java:                .setPreventPublicBtcNetwork(preventPublicBtcNetwork)
core/src/main/java/bisq/core/filter/Filter.java:                .addAllBtcNodes(btcNodes)
core/src/main/java/bisq/core/filter/Filter.java:                .addAllBtcFeeReceiverAddresses(btcFeeReceiverAddresses)
core/src/main/java/bisq/core/filter/Filter.java:                .setMakerFeeBtc(makerFeeBtc)
core/src/main/java/bisq/core/filter/Filter.java:                .setTakerFeeBtc(takerFeeBtc)
core/src/main/java/bisq/core/filter/Filter.java:                proto.getPreventPublicBtcNetwork(),
core/src/main/java/bisq/core/filter/Filter.java:                ProtoUtil.protocolStringListToList(proto.getBtcNodesList()),
core/src/main/java/bisq/core/filter/Filter.java:                ProtoUtil.protocolStringListToList(proto.getBtcFeeReceiverAddressesList()),
core/src/main/java/bisq/core/filter/Filter.java:                proto.getMakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                proto.getTakerFeeBtc(),
core/src/main/java/bisq/core/filter/Filter.java:                ",\n     preventPublicBtcNetwork=" + preventPublicBtcNetwork +
core/src/main/java/bisq/core/filter/Filter.java:                ",\n     btcNodes=" + btcNodes +
core/src/main/java/bisq/core/filter/Filter.java:                ",\n     btcFeeReceiverAddresses=" + btcFeeReceiverAddresses +
core/src/main/java/bisq/core/filter/Filter.java:                ",\n     makerFeeBtc=" + makerFeeBtc +
core/src/main/java/bisq/core/filter/Filter.java:                ",\n     takerFeeBtc=" + takerFeeBtc +
core/src/main/java/bisq/core/filter/FilterManager.java:import bisq.core.btc.nodes.BtcNodes;
core/src/main/java/bisq/core/filter/FilterManager.java:    private static final String BANNED_RADC_NODES = "bannedBtcNodes";
core/src/main/java/bisq/core/filter/FilterManager.java:        saveBannedNodes(BANNED_RADC_NODES, newFilter.getBtcNodes());
core/src/main/java/bisq/core/filter/FilterManager.java:        if (newFilter.isPreventPublicBtcNetwork() &&
core/src/main/java/bisq/core/filter/FilterManager.java:                preferences.getBitcoinNodesOptionOrdinal() == BtcNodes.BitcoinNodesOption.PUBLIC.ordinal()) {
core/src/main/java/bisq/core/filter/FilterManager.java:            preferences.setBitcoinNodesOptionOrdinal(BtcNodes.BitcoinNodesOption.PROVIDED.ordinal());
core/src/main/java/bisq/core/filter/FilterManager.java:        saveBannedNodes(BANNED_RADC_NODES, null);
core/src/main/java/bisq/core/app/BisqHeadlessApp.java:        bisqSetup.setShowPopupIfInvalidBtcConfigHandler(() -> log.error("onShowPopupIfInvalidBtcConfigHandler"));
core/src/main/java/bisq/core/app/AppStartupState.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/WalletAppSetup.java:import bisq.core.btc.exceptions.InvalidHostException;
core/src/main/java/bisq/core/app/WalletAppSetup.java:import bisq.core.btc.exceptions.RejectedTxException;
core/src/main/java/bisq/core/app/WalletAppSetup.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/WalletAppSetup.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private MonadicBinding<String> btcInfoBinding;
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private final DoubleProperty btcSyncProgress = new SimpleDoubleProperty(-1);
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private final StringProperty btcSplashSyncIconId = new SimpleStringProperty();
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private final StringProperty btcInfo = new SimpleStringProperty(Res.get("mainView.footer.btcInfo.initializing"));
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private final BooleanProperty useTorForRADC = new SimpleBooleanProperty();
core/src/main/java/bisq/core/app/WalletAppSetup.java:        this.useTorForRADC.set(preferences.getUseTorForBitcoinJ());
core/src/main/java/bisq/core/app/WalletAppSetup.java:              @Nullable Runnable showPopupIfInvalidBtcConfigHandler,
core/src/main/java/bisq/core/app/WalletAppSetup.java:        btcInfoBinding = EasyBind.combine(walletsSetup.downloadPercentageProperty(),
core/src/main/java/bisq/core/app/WalletAppSetup.java:                        btcSyncProgress.set(percentage);
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            String synchronizedWith = Res.get("mainView.footer.btcInfo.synchronizedWith",
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                    getBtcNetworkAsString(), chainHeightAsString);
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                    Res.get("mainView.footer.btcFeeRate", feeService.getTxFeePerVbyte().value) :
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            result = Res.get("mainView.footer.btcInfo", synchronizedWith, info);
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            getBtcSplashSyncIconId().set("image-connection-synced");
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            String synchronizingWith = Res.get("mainView.footer.btcInfo.synchronizingWith",
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                    getBtcNetworkAsString(), chainHeightAsString,
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            result = Res.get("mainView.footer.btcInfo", synchronizingWith, "");
core/src/main/java/bisq/core/app/WalletAppSetup.java:                            result = Res.get("mainView.footer.btcInfo",
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                    Res.get("mainView.footer.btcInfo.connectingTo"),
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                    getBtcNetworkAsString());
core/src/main/java/bisq/core/app/WalletAppSetup.java:                        result = Res.get("mainView.footer.btcInfo",
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                Res.get("mainView.footer.btcInfo.connectionFailed"),
core/src/main/java/bisq/core/app/WalletAppSetup.java:                                getBtcNetworkAsString());
core/src/main/java/bisq/core/app/WalletAppSetup.java:        btcInfoBinding.subscribe((observable, oldValue, newValue) -> getBtcInfo().set(newValue));
core/src/main/java/bisq/core/app/WalletAppSetup.java:                    if (exception instanceof InvalidHostException && showPopupIfInvalidBtcConfigHandler != null) {
core/src/main/java/bisq/core/app/WalletAppSetup.java:                        showPopupIfInvalidBtcConfigHandler.run();
core/src/main/java/bisq/core/app/WalletAppSetup.java:    private String getBtcNetworkAsString() {
core/src/main/java/bisq/core/app/WalletAppSetup.java:        if (config.ignoreLocalBtcNode)
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.nodes.LocalBitcoinNode;
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/app/BisqSetup.java:import bisq.core.btc.wallet.http.MemPoolSpaceTxBroadcaster;
core/src/main/java/bisq/core/app/BisqSetup.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/app/BisqSetup.java:    private Runnable showPopupIfInvalidBtcConfigHandler;
core/src/main/java/bisq/core/app/BisqSetup.java:                     BtcWalletService btcWalletService,
core/src/main/java/bisq/core/app/BisqSetup.java:                     @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter,
core/src/main/java/bisq/core/app/BisqSetup.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/app/BisqSetup.java:        if (Config.baseCurrencyNetwork() == BaseCurrencyNetwork.RADC_MAINNET &&
core/src/main/java/bisq/core/app/BisqSetup.java:                showPopupIfInvalidBtcConfigHandler,
core/src/main/java/bisq/core/app/BisqSetup.java:            btcWalletService.getAddressEntriesForTrade().stream()
core/src/main/java/bisq/core/app/BisqSetup.java:            if (btcWalletService.getConfidenceForTxId(offerFeePaymentTxId) == null) {
core/src/main/java/bisq/core/app/BisqSetup.java:    public StringProperty getBtcInfo() {
core/src/main/java/bisq/core/app/BisqSetup.java:        return walletAppSetup.getBtcInfo();
core/src/main/java/bisq/core/app/BisqSetup.java:    public DoubleProperty getBtcSyncProgress() {
core/src/main/java/bisq/core/app/BisqSetup.java:        return walletAppSetup.getBtcSyncProgress();
core/src/main/java/bisq/core/app/BisqSetup.java:    public StringProperty getBtcSplashSyncIconId() {
core/src/main/java/bisq/core/app/BisqSetup.java:        return walletAppSetup.getBtcSplashSyncIconId();
core/src/main/java/bisq/core/app/BisqSetup.java:    public BooleanProperty getUseTorForRADC() {
core/src/main/java/bisq/core/app/BisqSetup.java:        return walletAppSetup.getUseTorForRADC();
core/src/main/java/bisq/core/app/misc/ExecutableForAppWithP2p.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/misc/ExecutableForAppWithP2p.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/app/misc/ExecutableForAppWithP2p.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/app/misc/ExecutableForAppWithP2p.java:                    injector.getInstance(BtcWalletService.class).shutDown();
core/src/main/java/bisq/core/app/misc/ModuleForAppWithP2p.java:import bisq.core.btc.BitcoinModule;
core/src/main/java/bisq/core/app/CoreModule.java:import bisq.core.btc.BitcoinModule;
core/src/main/java/bisq/core/app/CoreModule.java:        CoinFormatter btcFormatter = new ImmutableCoinFormatter(config.networkParameters.getMonetaryFormat());
core/src/main/java/bisq/core/app/CoreModule.java:        bind(CoinFormatter.class).annotatedWith(named(FormattingUtils.RADC_FORMATTER_KEY)).toInstance(btcFormatter);
core/src/main/java/bisq/core/app/P2PNetworkSetup.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/P2PNetworkSetup.java:                (state, warning, numP2pPeers, numBtcPeers, hiddenService, dataReceived) -> {
core/src/main/java/bisq/core/app/P2PNetworkSetup.java:                        String p2pInfo = Res.get("mainView.footer.p2pInfo", numBtcPeers, numP2pPeers);
core/src/main/java/bisq/core/app/DomainInitialisation.java:import bisq.core.btc.Balances;
core/src/main/java/bisq/core/app/BisqExecutable.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/app/BisqExecutable.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/app/BisqExecutable.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/app/BisqExecutable.java:                injector.getInstance(BtcWalletService.class).shutDown();
core/src/main/java/bisq/core/monetary/Altcoin.java:     * Returns the value as a plain string denominated in RADC. The result is unformatted with no trailing zeroes. For
core/src/main/java/bisq/core/monetary/Altcoin.java:     * instance, a value of 150000 satoshis gives an output string of "0.0015" RADC
core/src/main/java/bisq/core/dao/node/lite/LiteNode.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/dao/node/lite/LiteNode.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/node/parser/TxInputParser.java:                            case RADC_OUTPUT:
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * We did not apply the check to not allow BSQ outputs after we had detected a RADC output.
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * A trade fee tx in case when the RADC input matches exactly the RADC output
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * (or RADC change was <= the miner fee) and the BSQ fee was > the miner fee. Then we
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * create a change output after the RADC output (using an address from the RADC wallet) and as
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * There have been observed 5 such transactions where 4 got spent later to a RADC address and by that burned
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * The BSQ was sitting in the RADC wallet so not even visible as BSQ to the user.
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * At confiscating we set the first to TxOutputType.RADC_OUTPUT but we do not want to confiscate
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java: * the second BSQ change output as well. So we do not apply the rule that no BSQ is allowed once a RADC output is
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:            } else if (isBtcOutputOfBurnFeeTx(tempTxOutput)) {
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                // In case we have the opReturn for a burn fee tx all outputs after 1st output are considered RADC
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                handleBtcOutput(tempTxOutput, index);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                    handleBtcOutput(tempTxOutput, index);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                handleBtcOutput(tempTxOutput, index);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:            tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:     * This sets all outputs to RADC_OUTPUT and doesn't add any txOutputs to the unspentTxOutput map in daoStateService
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:        // We do not need to apply prohibitMoreBsqOutputs as all spendable outputs are set to RADC_OUTPUT anyway.
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:        utxoCandidates.forEach(output -> output.setTxOutputType(TxOutputType.RADC_OUTPUT));
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:    private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                    // Out: burned BSQ change 7 BSQ -> RADC (7 BSQ burned)
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:    private void handleBtcOutput(TempTxOutput txOutput, int index) {
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:            txOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:            // For regular transactions we don't permit BSQ outputs after a RADC output was detected.
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                txOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java:                // For regular transactions we don't permit BSQ outputs after a RADC output was detected.
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:        // set the output to a RADC output. We must not use `if else` cases here!
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:            // txOutputParser so we don't need to do any additional check here when we change to RADC_OUTPUT.
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:            txOutputParser.getOptionalIssuanceCandidate().ifPresent(tempTxOutput -> tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT));
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                // We cannot apply the rule to not allow BSQ outputs after a RADC output as the 2nd output is an
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                // We do not apply the rule to not allow BSQ outputs after a RADC output here because we expect only
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                // We cannot apply the rule to not allow BSQ outputs after a RADC output as the 2nd output is an
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:                tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT);
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:            // Make sure the optionalIssuanceCandidate is set to RADC
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:            // txOutputParser so we don't need to do any additional check here when we change to RADC_OUTPUT.
core/src/main/java/bisq/core/dao/node/parser/TxParser.java:            optionalIssuanceCandidate.ifPresent(tempTxOutput -> tempTxOutput.setTxOutputType(TxOutputType.RADC_OUTPUT));
core/src/main/java/bisq/core/dao/node/full/RawBlock.java: * A block derived from the RADC blockchain and filtered for BSQ relevant transactions, though the transactions are not
core/src/main/java/bisq/core/dao/node/explorer/ExportJsonFilesService.java:                    long btcAmount = !isBsqTxOutputType ? txOutput.getValue() : 0;
core/src/main/java/bisq/core/dao/node/explorer/ExportJsonFilesService.java:                            btcAmount,
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutputType.java:    RADC_OUTPUT("RADC"),
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutput.java:    private final long btcAmount;
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutput.java:    JsonTxOutput(String txId, int index, long bsqAmount, long btcAmount, int height, boolean isVerified, long burntFee,
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutput.java:        this.btcAmount = btcAmount;
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutput.java:                btcAmount == that.btcAmount &&
core/src/main/java/bisq/core/dao/node/explorer/JsonTxOutput.java:        return Objects.hash(super.hashCode(), txVersion, txId, index, bsqAmount, btcAmount, height, isVerified,
core/src/main/java/bisq/core/dao/governance/param/ParamType.java:    RADC,
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // Fee in RADC for a 1 RADC trade. 0.001 is 0.1%. @5000 USD/RADC price 0.1% fee is 5 USD.
core/src/main/java/bisq/core/dao/governance/param/Param.java:    DEFAULT_MAKER_FEE_RADC("0.001", ParamType.RADC, 5, 5),
core/src/main/java/bisq/core/dao/governance/param/Param.java:    DEFAULT_TAKER_FEE_RADC("0.003", ParamType.RADC, 5, 5),       // 0.2% of trade amount
core/src/main/java/bisq/core/dao/governance/param/Param.java:    MIN_MAKER_FEE_RADC("0.00005", ParamType.RADC, 5, 5),         // 0.005% of trade amount
core/src/main/java/bisq/core/dao/governance/param/Param.java:    MIN_TAKER_FEE_RADC("0.00005", ParamType.RADC, 5, 5),
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // Fee in BSQ satoshis for a 1 RADC trade. 100 satoshis = 1 BSQ
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // If 1 BTS is 1 USD the fee @5000 USD/RADC is 0.5 USD which is 10% of the RADC fee of 5 USD.
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // Might need adjustment if BSQ/RADC rate changes.
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // 0.03 BSQ (3 satoshis) for a 1 RADC trade. 0.05 USD if 1 BSQ = 1 USD, 10 % of the RADC fee
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // RADC address as recipient for RADC trade fee once the arbitration system is replaced as well as destination for
core/src/main/java/bisq/core/dao/governance/param/Param.java:    // but can be also a burner address if we prefer to burn the RADC
core/src/main/java/bisq/core/dao/governance/param/Param.java:    RECIPIENT_RADC_ADDRESS(Config.baseCurrencyNetwork().isMainnet() ? "1BVxNn3T12veSK6DgqwU4Hdn7QHcDDRag7" :  // mainnet
core/src/main/java/bisq/core/dao/governance/param/Param.java:    ASSET_MIN_VOLUME("0.01", ParamType.RADC, 10, 10),
core/src/main/java/bisq/core/dao/governance/param/Param.java:    MAX_TRADE_LIMIT("2", ParamType.RADC, 2, 2), // max trade limit for lowest risk payment method. Others will get derived from that.
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:                             BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:        Transaction txWithBtcFee = btcWalletService.completePreparedVoteRevealTx(preparedTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/votereveal/VoteRevealService.java:        return bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:    private long minVolumeInBtc;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:                        BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:        minVolumeInBtc = daoStateService.getParamValueAsCoin(Param.ASSET_MIN_VOLUME, chainHeight).value;
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:                        } else if (tradeVolume >= minVolumeInBtc) {
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:            // We add the RADC inputs for the miner fee.
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:            Transaction txWithBtcFee = btcWalletService.completePreparedBurnBsqTx(preparedBurnFeeTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/asset/AssetService.java:            Transaction transaction = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:                                  BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:        Transaction txWithBtcFee = btcWalletService.completePreparedBlindVoteTx(preparedTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/blindvote/MyBlindVoteListService.java:        return bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/blindvote/BlindVoteValidator.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/dao/governance/bond/BondRepository.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/role/BondedRolesRepository.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:                           BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:        Transaction txWithBtcFee = btcWalletService.completePreparedBsqTx(preparedTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/bond/lockup/LockupTxService.java:        Transaction transaction = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/bond/BondConsensus.java:        // require by btcd-cli4j, avoid opReturns with 4 bytes or less
core/src/main/java/bisq/core/dao/governance/bond/reputation/MyBondedReputationRepository.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/reputation/BondedReputationRepository.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:                           BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:        Transaction txWithBtcFee = btcWalletService.completePreparedBsqTx(preparedTx, null);
core/src/main/java/bisq/core/dao/governance/bond/unlock/UnlockTxService.java:        Transaction transaction = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:    protected final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:                                  BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:            // We add the RADC inputs for the miner fee.
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:            Transaction txWithBtcFee = completeTx(preparedBurnFeeTx, opReturnData, proposal);
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:            Transaction transaction = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/governance/proposal/BaseProposalFactory.java:        return btcWalletService.completePreparedBurnBsqTx(preparedBurnFeeTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/proposal/MyProposalListService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/proposal/MyProposalListService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/proposal/MyProposalListService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/proposal/role/RoleProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/role/RoleProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/role/RoleProposalFactory.java:                               BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/role/RoleProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamProposalFactory.java:                                      BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:import bisq.core.util.validation.BtcAddressValidator;
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:                case RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:                    validateBtcValue(currentParamValueAsCoin, inputValueAsCoin, param);
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:    private void validateBtcValue(Coin currentParamValueAsCoin, Coin inputValueAsCoin, Param param) throws ParamValidationException {
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:            case DEFAULT_MAKER_FEE_RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:            case DEFAULT_TAKER_FEE_RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:            case MIN_MAKER_FEE_RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:            case MIN_TAKER_FEE_RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:        InputValidator.ValidationResult validationResult = new BtcAddressValidator().validate(inputValue);
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:            case RADC:
core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java:                value = bsqFormatter.formatRADCSatoshis((long) val);
core/src/main/java/bisq/core/dao/governance/proposal/removeAsset/RemoveAssetProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/removeAsset/RemoveAssetProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/removeAsset/RemoveAssetProposalFactory.java:                                      BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/removeAsset/RemoveAssetProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:                                       BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/compensation/CompensationProposalFactory.java:        return btcWalletService.completePreparedCompensationRequestTx(
core/src/main/java/bisq/core/dao/governance/proposal/IssuanceProposal.java:        String underlyingBtcAddress = getBsqAddress().substring(1);
core/src/main/java/bisq/core/dao/governance/proposal/IssuanceProposal.java:        return Address.fromString(Config.baseCurrencyNetworkParameters(), underlyingBtcAddress);
core/src/main/java/bisq/core/dao/governance/proposal/generic/GenericProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/generic/GenericProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/generic/GenericProposalFactory.java:                                  BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/generic/GenericProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:                                        BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/reimbursement/ReimbursementProposalFactory.java:        return btcWalletService.completePreparedReimbursementRequestTx(
core/src/main/java/bisq/core/dao/governance/proposal/ProposalListPresentation.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/confiscatebond/ConfiscateBondProposalFactory.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/confiscatebond/ConfiscateBondProposalFactory.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proposal/confiscatebond/ConfiscateBondProposalFactory.java:                                         BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proposal/confiscatebond/ConfiscateBondProposalFactory.java:                btcWalletService,
core/src/main/java/bisq/core/dao/governance/voteresult/issuance/IssuanceService.java:                    // which are interpreted as RADC (as a not yet accepted comp. request).
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:                              BtcWalletService btcWalletService,
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:            // We add the RADC inputs for the miner fee.
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:            Transaction txWithBtcFee = btcWalletService.completePreparedBurnBsqTx(preparedBurnFeeTx, opReturnData);
core/src/main/java/bisq/core/dao/governance/proofofburn/ProofOfBurnService.java:            Transaction transaction = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    private static final Coin TESTNET_GENESIS_TOTAL_SUPPLY = Coin.parseCoin("2.5"); // 2.5M BSQ / 2.50000000 RADC
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    private static final Coin DAO_TESTNET_GENESIS_TOTAL_SUPPLY = Coin.parseCoin("2.5"); // 2.5M BSQ / 2.50000000 RADC
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    private static final Coin DAO_BETANET_GENESIS_TOTAL_SUPPLY = Coin.parseCoin("0.49998644"); // 499 986.44 BSQ / 0.49998644 RADC
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    private static final Coin DAO_REGTEST_GENESIS_TOTAL_SUPPLY = Coin.parseCoin("2.5"); // 2.5M BSQ / 2.50000000 RADC
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    private static final Coin REGTEST_GENESIS_TOTAL_SUPPLY = Coin.parseCoin("2.5"); // 2.5M BSQ / 2.50000000 RADC
core/src/main/java/bisq/core/dao/state/GenesisTxInfo.java:    // RADC MAIN NET
core/src/main/java/bisq/core/dao/state/DaoStateService.java:            case RADC_OUTPUT:
core/src/main/java/bisq/core/dao/state/DaoStateService.java:            case RADC_OUTPUT:
core/src/main/java/bisq/core/dao/state/model/governance/BondedRoleType.java:    RADC_NODE_OPERATOR(5, 110, "https://bisq.network/roles/67", true),
core/src/main/java/bisq/core/dao/state/model/governance/BondedRoleType.java:    RADC_DONATION_ADDRESS_OWNER(50, 110, "https://bisq.network/roles/80", true);
core/src/main/java/bisq/core/dao/state/model/blockchain/TxOutputType.java:    RADC_OUTPUT,
core/src/main/java/bisq/core/dao/state/unconfirmed/UnconfirmedBsqChangeOutputListService.java:        // It can be that we don't have a BSQ and a RADC change output.
core/src/main/java/bisq/core/dao/state/unconfirmed/UnconfirmedBsqChangeOutputListService.java:        // If no BSQ change but a RADC change the index points to the RADC output and then
core/src/main/java/bisq/core/dao/state/unconfirmed/UnconfirmedBsqChangeOutputListService.java:        // If there is a BSQ change but no RADC change it has no effect as we ignore RADC outputs anyway.
core/src/main/java/bisq/core/dao/state/unconfirmed/UnconfirmedBsqChangeOutputListService.java:        // If no RADC output (unlikely but
core/src/main/java/bisq/core/dao/state/unconfirmed/UnconfirmedBsqChangeOutputListService.java:        // possible) the index points to the RADC output and then we detect that it is not part of our wallet.
core/src/main/java/bisq/core/dao/state/DaoStateSnapshotService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/dao/state/DaoStateSnapshotService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/state/DaoStateSnapshotService.java:            // In case the DAO state is invalid we might get an outdated RECIPIENT_RADC_ADDRESS. In that case we trigger
core/src/main/java/bisq/core/dao/state/DaoStateSnapshotService.java:            String address = daoStateService.getParamValue(Param.RECIPIENT_RADC_ADDRESS, daoStateService.getChainHeight());
core/src/main/java/bisq/core/dao/state/DaoStateSnapshotService.java:                log.warn("The RECIPIENT_RADC_ADDRESS is not as expected. The DAO state is probably out of " +
core/src/main/java/bisq/core/dao/SignVerifyService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/dao/DaoFacade.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/dao/DaoFacade.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/dao/DaoFacade.java:        Set<String> allPastParamValues = getAllPastParamValues(Param.RECIPIENT_RADC_ADDRESS);
core/src/main/java/bisq/core/dao/DaoFacade.java:            allPastParamValues.add(Param.RECIPIENT_RADC_ADDRESS.getDefaultValue());
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:    private final byte[] btcPubKey;
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:    private final String btcAddress;
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                      byte[] btcPubKey,
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                      String btcAddress,
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:        this.btcPubKey = btcPubKey;
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:        this.btcAddress = btcAddress;
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                .setBtcPubKey(ByteString.copyFrom(btcPubKey))
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                .setBtcAddress(btcAddress)
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                proto.getBtcPubKey().toByteArray(),
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                proto.getBtcAddress(),
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                "\n     btcPubKey=" + Utilities.bytesAsHexString(btcPubKey) +
core/src/main/java/bisq/core/support/dispute/arbitration/arbitrator/Arbitrator.java:                ",\n     btcAddress='" + btcAddress + '\'' +
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:                              BtcWalletService walletService,
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:                btcWalletService.getArbitratorAddressEntry().getPubKey())) {
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:            // more RADC as he has deposited
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:                        DeterministicKey multiSigKeyPair = btcWalletService.getMultiSigKeyPair(tradeId, multiSigPubKey);
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:                        Transaction committedDisputedPayoutTx = WalletService.maybeAddSelfTxToWallet(signedDisputedPayoutTx, btcWalletService.getWallet());
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:        Transaction committedDisputePayoutTx = WalletService.maybeAddNetworkTxToWallet(peerPublishedDisputePayoutTxMessage.getTransaction(), btcWalletService.getWallet());
core/src/main/java/bisq/core/support/dispute/arbitration/ArbitrationManager.java:        BtcWalletService.printTx("Disputed payoutTx received from peer", committedDisputePayoutTx);
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:    protected final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:                          BtcWalletService btcWalletService,
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:                    btcWalletService);
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:    // security deposit (in mediation we will always get back 0.003 RADC to keep some incentive to accept mediated
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:            optionTradeDetails = "\nRADC amount calculated with price at dispute opening: " + potentialAmountAtDisputeOpening.toFriendlyString() +
core/src/main/java/bisq/core/support/dispute/DisputeManager.java:            optionTradeDetails = "\nRADC amount calculated with price at dispute opening: " + potentialAmountAtDisputeOpening.toFriendlyString() +
core/src/main/java/bisq/core/support/dispute/refund/RefundManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/support/dispute/refund/RefundManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/support/dispute/refund/RefundManager.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/support/dispute/refund/RefundManager.java:                         BtcWalletService walletService,
core/src/main/java/bisq/core/support/dispute/mediation/MediationManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/support/dispute/mediation/MediationManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/support/dispute/mediation/MediationManager.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/support/dispute/mediation/MediationManager.java:                            BtcWalletService walletService,
core/src/main/java/bisq/core/support/SupportManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/support/traderchat/TraderChatManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/presentation/BalancePresentation.java:import bisq.core.btc.Balances;
core/src/main/java/bisq/core/presentation/BalancePresentation.java:    public BalancePresentation(Balances balances, @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter formatter) {
core/src/main/java/bisq/core/presentation/BalancePresentation.java:            // If we get full precision the RADC postfix breaks layout so we omit it
core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java:    // Buying of RADC with a payment method that has chargeback risk will use a low trade limit schedule
core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java:        // TOLERATED_SMALL_TRADE_AMOUNT (0.01 RADC) and only in that case return false.
core/src/main/java/bisq/core/setup/CorePersistedDataHost.java:import bisq.core.btc.model.AddressEntryList;
core/src/main/java/bisq/core/btc/wallet/BsqCoinSelector.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.exceptions.SigningException;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.model.InputsAndChangeOutput;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.model.PreparedDepositTxAndMakerInputs;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.setup.WalletConfig;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            wallet = walletsSetup.getBtcWallet();
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:     * Create a RADC trading fee transaction for the maker or taker of an offer. The first output of the tx is for the
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:    public Transaction createBtcTradingFeeTx(Address fundingAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sendRequest.coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sendRequest.coinSelector = new BtcCoinSelector(fundingAddress, preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            log.error("createBtcTradingFeeTx failed: tradingFeeTx={}, txOutputs={}", tradingFeeTx.toString(),
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // We add RADC mining fee. Result tx looks like:
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // inputs [1-n] RADC inputs
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // outputs [1] RADC reservedForTrade output
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // outputs [0-1] RADC change output
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // mining fee: RADC mining fee + burned BSQ fee
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // for RADC to force an additional change output.
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // The RADC changeAddress is used, so it might get used for both output 0 and output 2.
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sendRequest.coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sendRequest.coinSelector = new BtcCoinSelector(fundingAddress, preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            // Sign all RADC inputs
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                            List<RawTransactionInput> sellersBtcInputs,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                            Coin buyersBtcPayoutAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                            String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                            @Nullable Coin sellersBtcChangeAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                            @Nullable String sellersBtcChangeAddress) throws AddressFormatException {
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:        List<TransactionInput> sellersBtcTransactionInput = sellersBtcInputs.stream()
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcTransactionInput,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                buyersBtcPayoutAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                buyersBtcPayoutAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcChangeAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcChangeAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                           List<TransactionInput> sellersBtcInputs,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                           Coin buyersBtcPayoutAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                           String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                           @Nullable Coin sellersBtcChangeAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                           @Nullable String sellersBtcChangeAddress) throws AddressFormatException {
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcInputs,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                buyersBtcPayoutAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                buyersBtcPayoutAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcChangeAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                sellersBtcChangeAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                       List<TransactionInput> sellersBtcInputs,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                       Coin buyersBtcPayoutAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                       String buyersBtcPayoutAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                       @Nullable Coin sellersBtcChangeAmount,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:                                       @Nullable String sellersBtcChangeAddress,
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:        sellersBtcInputs.forEach(transaction::addInput);
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:        transaction.addOutput(buyersBtcPayoutAmount, Address.fromString(params, buyersBtcPayoutAddress));
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:        if (sellersBtcChangeAmount != null && sellersBtcChangeAmount.isPositive())
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            transaction.addOutput(sellersBtcChangeAmount, Address.fromString(params, Objects.requireNonNull(sellersBtcChangeAddress)));
core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java:            sendRequest.coinSelector = new BtcCoinSelector(address, preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.exceptions.AddressEntryException;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.exceptions.InsufficientFundsException;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.model.AddressEntryList;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:import bisq.core.btc.wallet.http.MemPoolSpaceTxBroadcaster;
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:public class BtcWalletService extends WalletService {
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    private static final Logger log = LoggerFactory.getLogger(BtcWalletService.class);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    public BtcWalletService(WalletsSetup walletsSetup,
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:            wallet = walletsSetup.getBtcWallet();
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // inputs [1-n] RADC inputs for BSQ issuance and miner fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // outputs [0-1] RADC change output from issuance and miner fee inputs (>= 546 Satoshi)
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // mining fee: RADC mining fee + burned BSQ fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        int indexOfBtcFirstInput = feeTx.getInputs().size();
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        BtcCoinSelector coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // Sign all RADC inputs
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        signAllBtcInputs(indexOfBtcFirstInput, resultTx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // printTx("RADC wallet: Signed tx", resultTx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // We add RADC inputs to pay miner fees and sign the RADC tx inputs
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // inputs [1-n] RADC inputs for miner fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // outputs [0-1] RADC change output from miner fee inputs (>= 546 Satoshi)
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // mining fee: RADC mining fee + burned BSQ fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // First input index for btc inputs (they get added after bsq inputs)
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        return completePreparedBsqTxWithBtcFee(preparedTx, opReturnData);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    private Transaction completePreparedBsqTxWithBtcFee(Transaction preparedTx,
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // Remember index for first RADC input
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        int indexOfBtcFirstInput = preparedTx.getInputs().size();
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        signAllBtcInputs(indexOfBtcFirstInput, tx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // printTx("RADC wallet: Signed tx", tx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        BtcCoinSelector coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    private void signAllBtcInputs(int indexOfBtcFirstInput, Transaction tx) throws TransactionVerificationException {
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        for (int i = indexOfBtcFirstInput; i < tx.getInputs().size(); i++) {
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // We add RADC fees to the prepared reveal tx
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // inputs [1-n] RADC inputs for miner fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // outputs [0-1] RADC change output from miner fee inputs (>= 546 Satoshi)
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:    // mining fee: RADC mining fee + burned BSQ fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        return completePreparedBsqTxWithBtcFee(preparedTx, opReturnData);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // We add RADC mining fee. Result tx looks like:
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // inputs [1-n] RADC inputs
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // outputs [0-1] RADC change output
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // mining fee: RADC mining fee
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // We add RADC mining fee. Result tx looks like:
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // inputs [1-n] RADC inputs
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // outputs [0-1] RADC change output
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // mining fee: RADC mining fee + optional burned BSQ fee (only if opReturnData != null)
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // for RADC to force an additional change output.
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // In case there are no change outputs we force a change by adding min dust to the RADC input
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        BtcCoinSelector coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // We don't know at this point what type the btc input would be (segwit/legacy).
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        int numLegacyInputs = preparedBsqTxInputs.size() + 1; // We add 1 for the RADC fee input
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // Sign all RADC inputs
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        signAllBtcInputs(preparedBsqTxInputs.size(), resultTx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        printTx("RADC wallet: Signed tx", resultTx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        // printTx("RADC commit Tx", tx);
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:                            sendRequest.coinSelector = new BtcCoinSelector(toAddress, preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:                            sendRequest.coinSelector = new BtcCoinSelector(toAddress, preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:                            sendRequest.coinSelector = new BtcCoinSelector(toAddress,
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        sendRequest.coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        sendRequest.coinSelector = new BtcCoinSelector(addressEntry.get().getAddress(), preferences.getIgnoreDustThreshold());
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        sendRequest.coinSelector = new BtcCoinSelector(walletsSetup.getAddressesFromAddressEntries(addressEntries),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        sendRequest.coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:        BtcCoinSelector coinSelector = new BtcCoinSelector(walletsSetup.getAddressesByContext(AddressEntry.Context.AVAILABLE),
core/src/main/java/bisq/core/btc/wallet/BtcWalletService.java:            log.error("Missing funds in getSellersBtcInputsForBsqSwapTx. missing={}", e.missing);
core/src/main/java/bisq/core/btc/wallet/WalletService.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.listeners.AddressConfidenceListener;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.listeners.BalanceListener;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.listeners.TxConfidenceListener;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/wallet/WalletService.java:import bisq.core.btc.wallet.http.MemPoolSpaceTxBroadcaster;
core/src/main/java/bisq/core/btc/wallet/WalletService.java: * Abstract base class for RADC and BSQ wallet. Provides all non-trade specific functionality.
core/src/main/java/bisq/core/btc/wallet/WalletService.java:    public void emptyBtcWallet(String toAddress,
core/src/main/java/bisq/core/btc/wallet/WalletService.java:        printTx("empty btc wallet", sendResult.tx);
core/src/main/java/bisq/core/btc/wallet/WalletService.java:                log.info("emptyBtcWallet onSuccess Transaction=" + result);
core/src/main/java/bisq/core/btc/wallet/WalletService.java:                log.error("emptyBtcWallet onFailure " + t.toString());
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:import bisq.core.btc.exceptions.BsqChangeBelowDustException;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:import bisq.core.btc.model.BsqTransferModel;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:                              BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:        Transaction txWithBtcFee = btcWalletService.completePreparedSendBsqTx(preparedSendTx, txFeePerVbyte);
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:        Transaction signedTx = bsqWalletService.signTxAndVerifyNoDustOutputs(txWithBtcFee);
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:                txWithBtcFee,
core/src/main/java/bisq/core/btc/wallet/BsqTransferService.java:        walletsManager.publishAndCommitBsqTx(bsqTransferModel.getTxWithBtcFee(),
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:class BtcCoinSelector extends BisqDefaultCoinSelector {
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:    private BtcCoinSelector(Set<Address> addresses, long ignoreDustThreshold, boolean permitForeignPendingTx) {
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:    BtcCoinSelector(Set<Address> addresses, long ignoreDustThreshold) {
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:    BtcCoinSelector(Address address, long ignoreDustThreshold, @SuppressWarnings("SameParameterValue") boolean permitForeignPendingTx) {
core/src/main/java/bisq/core/btc/wallet/BtcCoinSelector.java:    BtcCoinSelector(Address address, long ignoreDustThreshold) {
core/src/main/java/bisq/core/btc/wallet/BisqRiskAnalysis.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/NonBsqCoinSelector.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/NonBsqCoinSelector.java:        // It might be that we received RADC in a non-BSQ tx so that will not be stored in out state and not found.
core/src/main/java/bisq/core/btc/wallet/NonBsqCoinSelector.java:        // So we consider any txOutput which is not in the state as RADC output.
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:            MIN_TRADE_AMOUNT = Coin.valueOf(10_000); // 0,7 USD @ 7000 USD/RADC
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:        return 0.5; // 50% of trade amount. For a 1 RADC trade it is about 3500 USD @ 7000 USD/RADC
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:    // So 0.0005 RADC is the min. buyer security deposit even with amount of 0.0001 RADC and 0.05% percentage value.
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:            MIN_BUYER_SECURITY_DEPOSIT = Coin.parseCoin("0.001"); // 0.001 RADC is 60 USD @ 60000 USD/RADC
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:            SELLER_SECURITY_DEPOSIT = Coin.parseCoin("0.001"); // 0.001 RADC is 60 USD @ 60000 USD/RADC
core/src/main/java/bisq/core/btc/wallet/Restrictions.java:            MIN_REFUND_AT_MEDIATED_DISPUTE = Coin.parseCoin("0.0005"); // 0.0005 RADC is 30 USD @ 60000 USD/RADC
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:    public WalletsManager(BtcWalletService btcWalletService,
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        btcWalletService.decryptWallet(aesKey);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:            btcWalletService.encryptWallet(keyCrypterScrypt, aesKey);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:                btcWalletService.getWalletAsString(includePrivKeys);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:                btcWalletService.isEncrypted() && bsqWalletService.isEncrypted();
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        return btcWalletService.isWalletReady() && bsqWalletService.isWalletReady();
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        if (areWalletsEncrypted() && btcWalletService.getKeyCrypter() != null)
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:            return (KeyCrypterScrypt) btcWalletService.getKeyCrypter();
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        return btcWalletService.checkAESKey(aesKey);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        return btcWalletService.getKeyChainSeed().getCreationTimeSeconds();
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        return btcWalletService.getBalance(Wallet.BalanceType.AVAILABLE)
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        btcWalletService.setAesKey(aesKey);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        walletConfig.maybeAddSegwitKeychain(walletConfig.btcWallet(), aesKey, false);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:    // A bsq tx has miner fees in btc included. Thus we need to handle it on both wallets.
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        Transaction clonedTx = btcWalletService.getClonedTransaction(tx);
core/src/main/java/bisq/core/btc/wallet/WalletsManager.java:        btcWalletService.commitTx(clonedTx);
core/src/main/java/bisq/core/btc/wallet/http/MemPoolSpaceTxBroadcaster.java:package bisq.core.btc.wallet.http;
core/src/main/java/bisq/core/btc/wallet/http/MemPoolSpaceTxBroadcaster.java:import bisq.core.btc.nodes.LocalBitcoinNode;
core/src/main/java/bisq/core/btc/wallet/http/TxBroadcastHttpClient.java:package bisq.core.btc.wallet.http;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.exceptions.BsqChangeBelowDustException;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.exceptions.InsufficientBsqException;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.listeners.BsqBalanceListener;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:    // Send BSQ with RADC fee
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:    // Send RADC (non-BSQ) with RADC fee (e.g. the issuance output from a  lost comp. request)
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:    public Transaction getPreparedSendBtcTx(String receiverAddress, Coin receiverAmount)
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:    public Transaction getPreparedSendBtcTx(String receiverAddress,
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:    // Out: burned BSQ change 7 BSQ -> RADC (7 BSQ burned)
core/src/main/java/bisq/core/btc/wallet/BsqWalletService.java:                // All outputs after that are considered RADC and therefore would be burned BSQ if BSQ is left from what
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:import bisq.core.btc.exceptions.TxBroadcastTimeoutException;
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:import bisq.core.btc.wallet.http.MemPoolSpaceTxBroadcaster;
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:                // We have no guarantee how long it will take to get the information that sufficiently many RADC nodes have
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:        // If it's a bsq tx WalletManager.publishAndCommitBsqTx() should have committed the tx to both bsq and btc
core/src/main/java/bisq/core/btc/wallet/TxBroadcaster.java:        // If it's a btc tx, the next line adds the tx to the wallet.
core/src/main/java/bisq/core/btc/wallet/BisqDefaultCoinSelector.java:package bisq.core.btc.wallet;
core/src/main/java/bisq/core/btc/listeners/BalanceListener.java:package bisq.core.btc.listeners;
core/src/main/java/bisq/core/btc/listeners/TxConfidenceListener.java:package bisq.core.btc.listeners;
core/src/main/java/bisq/core/btc/listeners/BsqBalanceListener.java:package bisq.core.btc.listeners;
core/src/main/java/bisq/core/btc/listeners/AddressConfidenceListener.java:package bisq.core.btc.listeners;
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:import bisq.core.btc.nodes.BtcNodes.BtcNode;
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:class BtcNodeConverter {
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    private static final Logger log = LoggerFactory.getLogger(BtcNodeConverter.class);
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    BtcNodeConverter() {
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    BtcNodeConverter(Facade facade) {
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    PeerAddress convertOnionHost(BtcNode node) {
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    PeerAddress convertClearNode(BtcNode node) {
core/src/main/java/bisq/core/btc/nodes/BtcNodeConverter.java:    PeerAddress convertWithTor(BtcNode node, Socks5Proxy proxy) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:public class BtcNodesRepository {
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:    private final BtcNodeConverter converter;
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:    private final List<BtcNodes.BtcNode> nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:    public BtcNodesRepository(List<BtcNodes.BtcNode> nodes) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:        this(new BtcNodeConverter(), nodes);
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:    public BtcNodesRepository(BtcNodeConverter converter, List<BtcNodes.BtcNode> nodes) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:                .filter(BtcNodes.BtcNode::hasClearNetAddress)
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:                .filter(BtcNodes.BtcNode::hasOnionAddress)
core/src/main/java/bisq/core/btc/nodes/BtcNodesRepository.java:                .filter(BtcNodes.BtcNode::hasClearNetAddress)
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:public class BtcNodesSetupPreferences {
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:    private static final Logger log = LoggerFactory.getLogger(BtcNodesSetupPreferences.class);
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:    private final int numConnectionsForBtc;
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:    public BtcNodesSetupPreferences(Preferences preferences,
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                                    int numConnectionsForBtc) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:        this.numConnectionsForBtc = numConnectionsForBtc;
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:    public List<BtcNodes.BtcNode> selectPreferredNodes(BtcNodes nodes) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:        List<BtcNodes.BtcNode> result;
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:        BtcNodes.BitcoinNodesOption nodesOption = BtcNodes.BitcoinNodesOption.values()[preferences.getBitcoinNodesOptionOrdinal()];
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                result = BtcNodes.toBtcNodesList(distinctNodes);
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                    preferences.setBitcoinNodesOptionOrdinal(BtcNodes.BitcoinNodesOption.PROVIDED.ordinal());
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                    result = nodes.getProvidedBtcNodes();
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                result = nodes.getProvidedBtcNodes();
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:        return BtcNodes.BitcoinNodesOption.CUSTOM.ordinal() == preferences.getBitcoinNodesOptionOrdinal();
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:    public int calculateMinBroadcastConnections(List<BtcNodes.BtcNode> nodes) {
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:        BtcNodes.BitcoinNodesOption nodesOption = BtcNodes.BitcoinNodesOption.values()[preferences.getBitcoinNodesOptionOrdinal()];
core/src/main/java/bisq/core/btc/nodes/BtcNodesSetupPreferences.java:                result = (int) Math.floor(numConnectionsForBtc * 0.8);
core/src/main/java/bisq/core/btc/nodes/LocalBitcoinNode.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/LocalBitcoinNode.java: * @see bisq.common.config.Config#ignoreLocalBtcNode
core/src/main/java/bisq/core/btc/nodes/LocalBitcoinNode.java:        // to avoid confusion if local btc node is not synced with our dao testnet master
core/src/main/java/bisq/core/btc/nodes/LocalBitcoinNode.java:        return config.ignoreLocalBtcNode ||
core/src/main/java/bisq/core/btc/nodes/LocalBitcoinNode.java:     * value. See {@code MainViewModel#setupBtcNumPeersWatcher} to understand how
core/src/main/java/bisq/core/btc/nodes/SeedPeersSocks5Dns.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:public class BtcNodes {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:    public List<BtcNode> getProvidedBtcNodes() {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:        return useProvidedBtcNodes() ?
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java://                        new BtcNode("radiopool.me", "j53zpx2eji2n4m5eyypnxpg5euirwyrculda3ivwlzw45lwsc56euzad.onion", "178.79.188.24", BtcNode.DEFAULT_PORT, "@c4pt000"),
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:  //         new BtcNode("radioblockchain.info", "zxopevlktuiwlcqaeul2xdbyyh4ocr5paywudzafvc3uhfx3jwrglxyd.onion", "172.104.241.226", BtcNode.DEFAULT_PORT, "@c4pt000"),
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:    //       new BtcNode("172.104.64.180", "ullzsoekwbgmbiczpqqddw3cjbccqcj5soc4dxwxwhakvslwfktvhdid.onion", "172.104.64.180", BtcNode.DEFAULT_PORT, "@c4pt000")
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:           new BtcNode("46.101.169.238", "onion.null", "46.101.169.238", BtcNode.DEFAULT_PORT, "@c4pt000")
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:    public boolean useProvidedBtcNodes() {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:    public static List<BtcNodes.BtcNode> toBtcNodesList(Collection<String> nodes) {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:                .map(BtcNodes.BtcNode::fromFullAddress)
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:    public static class BtcNode {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:        private final String operator; // null in case the user provides a list of custom btc nodes
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:         * @return BtcNode instance
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:        public static BtcNode fromFullAddress(String fullAddress) {
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:            checkArgument(host.length() > 0, "BtcNode address format not recognised");
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:            return host.contains(".onion") ? new BtcNode(null, host, null, port, null) : new BtcNode(null, null, host, port, null);
core/src/main/java/bisq/core/btc/nodes/BtcNodes.java:        public BtcNode(@Nullable String hostName,
core/src/main/java/bisq/core/btc/nodes/ProxySocketFactory.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNetworkConfig.java:package bisq.core.btc.nodes;
core/src/main/java/bisq/core/btc/nodes/BtcNetworkConfig.java:import bisq.core.btc.setup.WalletConfig;
core/src/main/java/bisq/core/btc/nodes/BtcNetworkConfig.java:public class BtcNetworkConfig {
core/src/main/java/bisq/core/btc/nodes/BtcNetworkConfig.java:    private static final Logger log = LoggerFactory.getLogger(BtcNetworkConfig.class);
core/src/main/java/bisq/core/btc/nodes/BtcNetworkConfig.java:    public BtcNetworkConfig(WalletConfig delegate, NetworkParameters parameters, int socks5DiscoverMode,
core/src/main/java/bisq/core/btc/model/AddressEntry.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/AddressEntryList.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:    private final Transaction txWithBtcFee;
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:                            Transaction txWithBtcFee,
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:        this.txWithBtcFee = txWithBtcFee;
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:                ", txWithBtcFee.txId=" + txWithBtcFee.getTxId() + "\n" +
core/src/main/java/bisq/core/btc/model/BsqTransferModel.java:                ", txWithBtcFee=" + txWithBtcFee + "\n" +
core/src/main/java/bisq/core/btc/model/PreparedDepositTxAndMakerInputs.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/InputsAndChangeOutput.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/RawTransactionInput.java:package bisq.core.btc.model;
core/src/main/java/bisq/core/btc/model/RawTransactionInput.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/btc/BitcoinModule.java:package bisq.core.btc;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.model.AddressEntryList;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.nodes.BtcNodes;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.setup.RegTestHost;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.setup.WalletsSetup;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.wallet.BsqCoinSelector;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.wallet.NonBsqCoinSelector;
core/src/main/java/bisq/core/btc/BitcoinModule.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/btc/BitcoinModule.java:        // If we have selected RADC_DAO_REGTEST or RADC_DAO_TESTNET we use our master regtest node,
core/src/main/java/bisq/core/btc/BitcoinModule.java:        bindConstant().annotatedWith(named(Config.RADC_NODES)).to(config.btcNodes);
core/src/main/java/bisq/core/btc/BitcoinModule.java:        bindConstant().annotatedWith(named(Config.NUM_CONNECTIONS_FOR_RADC)).to(config.numConnectionsForBtc);
core/src/main/java/bisq/core/btc/BitcoinModule.java:        bindConstant().annotatedWith(named(Config.IGNORE_LOCAL_RADC_NODE)).to(config.ignoreLocalBtcNode);
core/src/main/java/bisq/core/btc/BitcoinModule.java:        bind(BtcWalletService.class).in(Singleton.class);
core/src/main/java/bisq/core/btc/BitcoinModule.java:        bind(BtcNodes.class).in(Singleton.class);
core/src/main/java/bisq/core/btc/exceptions/InvalidHostException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/AddressEntryException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/SigningException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/WalletException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/TxBroadcastTimeoutException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/InsufficientFundsException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/TransactionVerificationException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/TxBroadcastException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/RejectedTxException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/BsqChangeBelowDustException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/exceptions/InsufficientBsqException.java:package bisq.core.btc.exceptions;
core/src/main/java/bisq/core/btc/setup/BisqKeyChainFactory.java:package bisq.core.btc.setup;
core/src/main/java/bisq/core/btc/setup/BisqKeyChainFactory.java: * This code is required to be executed only once per user (actually twice, for btc and bsq wallets).
core/src/main/java/bisq/core/btc/setup/RegTestHost.java:package bisq.core.btc.setup;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:package bisq.core.btc.setup;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.exceptions.InvalidHostException;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.exceptions.RejectedTxException;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.model.AddressEntryList;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.BtcNetworkConfig;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.BtcNodes;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.BtcNodes.BtcNode;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.BtcNodesRepository;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.BtcNodesSetupPreferences;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:import bisq.core.btc.nodes.LocalBitcoinNode;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:    public static final String PRE_SEGWIT_RADC_WALLET_BACKUP = "pre_segwit_radiox_RADC.wallet.backup";
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:    private final BtcNodes btcNodes;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:    private final String btcWalletFileName;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:    private final int numConnectionsForBtc;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:                        BtcNodes btcNodes,
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:                        @Named(Config.NUM_CONNECTIONS_FOR_RADC) int numConnectionsForBtc,
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        this.btcNodes = btcNodes;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        this.numConnectionsForBtc = numConnectionsForBtc;
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        btcWalletFileName = "radiox_" + config.baseCurrencyNetwork.getCurrencyCode() + ".wallet";
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:                //We are here in the btcj thread Thread[ STARTING,5,main]
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:                    addressEntryList.onWalletReady(walletConfig.btcWallet());
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        walletConfig.setNumConnectionsForBtc(numConnectionsForBtc);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        BtcNodesSetupPreferences btcNodesSetupPreferences = new BtcNodesSetupPreferences(preferences,
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:                numConnectionsForBtc);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        List<BtcNode> nodes = btcNodesSetupPreferences.selectPreferredNodes(btcNodes);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        int minBroadcastConnections = btcNodesSetupPreferences.calculateMinBroadcastConnections(nodes);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        BtcNodesRepository repository = new BtcNodesRepository(nodes);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        boolean isUseClearNodesWithProxies = (useAllProvidedNodes || btcNodesSetupPreferences.isUseCustomNodes());
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        BtcNetworkConfig networkConfig = new BtcNetworkConfig(walletConfig, params, socks5DiscoverMode, proxy);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        FileUtil.rollingBackup(walletDir, btcWalletFileName, 20);
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        List.of(PRE_SEGWIT_RADC_WALLET_BACKUP, PRE_SEGWIT_BSQ_WALLET_BACKUP).forEach(filename -> {
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        }, "RestoreRADCWallet-%d").start();
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:    public Wallet getBtcWallet() {
core/src/main/java/bisq/core/btc/setup/WalletsSetup.java:        return walletConfig.btcWallet();
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:package bisq.core.btc.setup;
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:    // We use 0 (0x80000000) as coin_type for RADC
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:    public static final ImmutableList<ChildNumber> BIP44_RADC_NON_SEGWIT_ACCOUNT_PATH = ImmutableList.of(
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:    public static final ImmutableList<ChildNumber> BIP44_RADC_SEGWIT_ACCOUNT_PATH = ImmutableList.of(
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:                return BIP44_RADC_NON_SEGWIT_ACCOUNT_PATH;
core/src/main/java/bisq/core/btc/setup/BisqKeyChainGroupStructure.java:                return BIP44_RADC_SEGWIT_ACCOUNT_PATH;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:package bisq.core.btc.setup;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:import bisq.core.btc.nodes.LocalBitcoinNode;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:import bisq.core.btc.nodes.ProxySocketFactory;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:import bisq.core.btc.wallet.BisqRiskAnalysis;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    protected volatile Wallet vBtcWallet;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    protected volatile File vBtcWalletFile;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    protected int numConnectionsForBtc;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    private BooleanProperty migratedWalletToBtcSegwit = new SimpleBooleanProperty(false);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    private BooleanExpression migratedWalletToSegwit = migratedWalletToBtcSegwit.and(migratedWalletToBsqSegwit);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    public WalletConfig setNumConnectionsForBtc(int numConnectionsForBtc) {
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:        this.numConnectionsForBtc = numConnectionsForBtc;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            String btcPrefix = "_RADC";
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWalletFile = new File(directory, filePrefix + btcPrefix + ".wallet");
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            boolean shouldReplayWallet = (vBtcWalletFile.exists() && !chainFileExists) || restoreFromSeed != null;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWallet = createOrLoadWallet(shouldReplayWallet, vBtcWalletFile, false);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWallet.allowSpendingUnconfirmedTransactions();
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWallet.setRiskAnalyzer(new BisqRiskAnalysis.Analyzer());
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                        time = vBtcWallet.getEarliestKeyCreationTime();
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                int maxConnections = Math.min(numConnectionsForBtc, peerAddresses.length);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vChain.addWallet(vBtcWallet);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vPeerGroup.addWallet(vBtcWallet);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                // btc wallet uses a new random seed.
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                // bsq wallet uses btc wallet's seed created a few milliseconds ago.
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                kcgBuilder.fromSeed(vBtcWallet.getKeyChainSeed(), preferredOutputScriptType);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWallet.saveToFile(vBtcWalletFile);
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            vBtcWallet = null;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            log.info("BtcWallet saved to file");
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:    public Wallet btcWallet() {
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:        return vBtcWallet;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                : BisqKeyChainGroupStructure.BIP44_RADC_NON_SEGWIT_ACCOUNT_PATH;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:                : WalletsSetup.PRE_SEGWIT_RADC_WALLET_BACKUP;
core/src/main/java/bisq/core/btc/setup/WalletConfig.java:            migratedWalletToBtcSegwit.set(true);
core/src/main/java/bisq/core/btc/Balances.java:package bisq.core.btc;
core/src/main/java/bisq/core/btc/Balances.java:import bisq.core.btc.listeners.BalanceListener;
core/src/main/java/bisq/core/btc/Balances.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/btc/Balances.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/btc/Balances.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/btc/Balances.java:                    BtcWalletService btcWalletService,
core/src/main/java/bisq/core/btc/Balances.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/btc/Balances.java:        btcWalletService.addBalanceListener(new BalanceListener() {
core/src/main/java/bisq/core/btc/Balances.java:        btcWalletService.addNewBestBlockListener(storedBlock -> updateBalance());
core/src/main/java/bisq/core/btc/Balances.java:        long sum = btcWalletService.getAddressEntriesForAvailableBalanceStream()
core/src/main/java/bisq/core/btc/Balances.java:                .mapToLong(addressEntry -> btcWalletService.getBalanceForAddress(addressEntry.getAddress()).value)
core/src/main/java/bisq/core/btc/Balances.java:                .map(openOffer -> btcWalletService.getAddressEntry(openOffer.getId(), AddressEntry.Context.RESERVED_FOR_TRADE)
core/src/main/java/bisq/core/btc/Balances.java:                .mapToLong(addressEntry -> btcWalletService.getBalanceForAddress(addressEntry.getAddress()).value)
core/src/main/java/bisq/core/btc/Balances.java:        long sum = lockedTrades.map(trade -> btcWalletService.getAddressEntry(trade.getId(), AddressEntry.Context.MULTI_SIG)
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:package bisq.core.btc;
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java://  legacy fee tx with 1 input, maker/taker fee paid in btc size/vsize = 258
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java://  segwit fee tx with 1 input, maker/taker fee paid in btc vsize = 173
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                                  BtcWalletService btcWalletService,
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                btcWalletService,
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                btcWalletService,
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                                                            BtcWalletService btcWalletService,
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:            estimatedTxVsize = getEstimatedTxVsize(List.of(tradeFee, amount), estimatedTxVsize, txFeePerVbyte, btcWalletService);
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:        if (!preferences.isPayFeeInBtc()) {
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                                                           BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:        Coin txFeePerVbyte = btcWalletService.getTxFeeForWithdrawalPerVbyte();
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:            estimatedTxVsize = getEstimatedTxVsize(List.of(amount), estimatedTxVsize, txFeePerVbyte, btcWalletService);
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:                                   BtcWalletService btcWalletService)
core/src/main/java/bisq/core/btc/TxFeeEstimationService.java:            realTxVsize = btcWalletService.getEstimatedFeeTxVsize(outputValues, txFee);
core/src/main/java/bisq/core/provider/price/PriceProvider.java:        tsMap.put("btcAverageTs", ((Double) map.get("btcAverageTs")).longValue());
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:        tsMap.put(Config.RADC_FEES_TS, ((Double) linkedTreeMap.get(Config.RADC_FEES_TS)).longValue());
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:            Long btcTxFee = ((Double) dataMap.get(Config.RADC_TX_FEE)).longValue();
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:            Long btcMinTxFee = dataMap.get(Config.RADC_MIN_TX_FEE) != null ?
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:                    ((Double) dataMap.get(Config.RADC_MIN_TX_FEE)).longValue() : Config.baseCurrencyNetwork().getDefaultMinFeePerVbyte();
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:            map.put(Config.RADC_TX_FEE, btcTxFee);
core/src/main/java/bisq/core/provider/fee/FeeProvider.java:            map.put(Config.RADC_MIN_TX_FEE, btcMinTxFee);
core/src/main/java/bisq/core/provider/fee/FeeService.java:    // Miner fees are between 1-600 sat/vbyte. We try to stay on the safe side. RADC_DEFAULT_TX_FEE is only used if our
core/src/main/java/bisq/core/provider/fee/FeeService.java:    private static final long RADC_DEFAULT_TX_FEE = 50;
core/src/main/java/bisq/core/provider/fee/FeeService.java:            if (param == Param.DEFAULT_MAKER_FEE_RADC) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:                filterVal = Coin.valueOf(filterManager.getFilter().getMakerFeeBtc());
core/src/main/java/bisq/core/provider/fee/FeeService.java:            } else if (param == Param.DEFAULT_TAKER_FEE_RADC) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:                filterVal = Coin.valueOf(filterManager.getFilter().getTakerFeeBtc());
core/src/main/java/bisq/core/provider/fee/FeeService.java:    public static Coin getMakerFeePerBtc(boolean currencyForFeeIsBtc) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:        return currencyForFeeIsBtc ? getFeeFromParamAsCoin(Param.DEFAULT_MAKER_FEE_RADC) : getFeeFromParamAsCoin(Param.DEFAULT_MAKER_FEE_BSQ);
core/src/main/java/bisq/core/provider/fee/FeeService.java:    public static Coin getMinMakerFee(boolean currencyForFeeIsBtc) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:        return currencyForFeeIsBtc ? getFeeFromParamAsCoin(Param.MIN_MAKER_FEE_RADC) : getFeeFromParamAsCoin(Param.MIN_MAKER_FEE_BSQ);
core/src/main/java/bisq/core/provider/fee/FeeService.java:    public static Coin getTakerFeePerBtc(boolean currencyForFeeIsBtc) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:        return currencyForFeeIsBtc ? getFeeFromParamAsCoin(Param.DEFAULT_TAKER_FEE_RADC) : getFeeFromParamAsCoin(Param.DEFAULT_TAKER_FEE_BSQ);
core/src/main/java/bisq/core/provider/fee/FeeService.java:    public static Coin getMinTakerFee(boolean currencyForFeeIsBtc) {
core/src/main/java/bisq/core/provider/fee/FeeService.java:        return currencyForFeeIsBtc ? getFeeFromParamAsCoin(Param.MIN_TAKER_FEE_RADC) : getFeeFromParamAsCoin(Param.MIN_TAKER_FEE_BSQ);
core/src/main/java/bisq/core/provider/fee/FeeService.java:    private long txFeePerVbyte = RADC_DEFAULT_TX_FEE;
core/src/main/java/bisq/core/provider/fee/FeeService.java:                    epochInSecondAtLastRequest = timeStampMap.get(Config.RADC_FEES_TS);
core/src/main/java/bisq/core/provider/fee/FeeService.java:                    txFeePerVbyte = map.get(Config.RADC_TX_FEE);
core/src/main/java/bisq/core/provider/fee/FeeService.java:                    minFeePerVByte = map.get(Config.RADC_MIN_TX_FEE);
core/src/main/java/bisq/core/provider/fee/FeeService.java:                    log.info("RADC tx fee: txFeePerVbyte={} minFeePerVbyte={}", txFeePerVbyte, minFeePerVByte);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private Boolean isFeeCurrencyBtc = null;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                       @Nullable Boolean isFeeCurrencyBtc,
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        this.isFeeCurrencyBtc = isFeeCurrencyBtc;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                       @Nullable Boolean isFeeCurrencyBtc,
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        this.isFeeCurrencyBtc = isFeeCurrencyBtc;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    public TxValidator parseJsonValidateMakerFeeTx(String jsonTxt, List<String> btcFeeReceivers) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                if (checkNotNull(isFeeCurrencyBtc)) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                    status = checkFeeAddressRADC(jsonTxt, btcFeeReceivers)
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                            && checkFeeAmountRADC(jsonTxt, amount, true, getBlockHeightForFeeCalculation(jsonTxt));
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    public TxValidator parseJsonValidateTakerFeeTx(String jsonTxt, List<String> btcFeeReceivers) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                if (isFeeCurrencyBtc == null) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                    isFeeCurrencyBtc = checkFeeAddressRADC(jsonTxt, btcFeeReceivers);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                if (isFeeCurrencyBtc) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                    status = checkFeeAddressRADC(jsonTxt, btcFeeReceivers)
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                            && checkFeeAmountRADC(jsonTxt, amount, false, getBlockHeightForFeeCalculation(jsonTxt));
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private boolean checkFeeAddressRADC(String jsonTxt, List<String> btcFeeReceivers) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:            if (btcFeeReceivers.contains(jsonFeeAddress.getAsString())) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                String error = "fee address: " + jsonFeeAddress.getAsString() + " was not a known RADC fee receiver";
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private boolean checkFeeAmountRADC(String jsonTxt, Coin tradeAmount, boolean isMaker, long blockHeight) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        log.debug("RADC fee: {}", feeValue);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        Param minFeeParam = isMaker ? Param.MIN_MAKER_FEE_RADC : Param.MIN_TAKER_FEE_RADC;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                isMaker ? getMakerFeeRateBtc(blockHeight) : getTakerFeeRateBtc(blockHeight),
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        String description = "Expected RADC fee: " + expectedFee + " sats , actual fee paid: " +
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        Param defaultFeeParam = isMaker ? Param.DEFAULT_MAKER_FEE_RADC : Param.DEFAULT_TAKER_FEE_RADC;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private Coin calculateFee(Coin amount, Coin feeRatePerBtc, Param minFeeParam) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        double feePerBtcAsDouble = (double) feeRatePerBtc.value;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        double btcAsDouble = (double) Coin.COIN.value;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        double fact = amountAsDouble / btcAsDouble;
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        Coin feePerBtc = Coin.valueOf(Math.round(feePerBtcAsDouble * fact));
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        return maxCoin(feePerBtc, minFee);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private Coin getMakerFeeRateBtc(long blockHeight) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        return daoStateService.getParamValueAsCoin(Param.DEFAULT_MAKER_FEE_RADC, (int) blockHeight);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private Coin getTakerFeeRateBtc(long blockHeight) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        return daoStateService.getParamValueAsCoin(Param.DEFAULT_TAKER_FEE_RADC, (int) blockHeight);
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                                                             boolean isBtcFee,
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:        return getFeeFromFilter(isMaker, isBtcFee)
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:    private Optional<Coin> getFeeFromFilter(boolean isMaker, boolean isBtcFee) {
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                        value = isBtcFee ?
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                                Coin.valueOf(filter.getMakerFeeBtc()) :
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                        value = isBtcFee ?
core/src/main/java/bisq/core/provider/mempool/TxValidator.java:                                Coin.valueOf(filter.getTakerFeeBtc()) :
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:    private final List<String> btcFeeReceivers = new ArrayList<>();
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:        btcFeeReceivers.addAll(getAllBtcFeeReceivers());
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                offerPayload.isCurrencyForMakerFeeBtc(), offerPayload.getBlockHeightAtOfferCreation(), filterManager), resultHandler);
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                trade.isCurrencyForTakerFeeBtc(), filterManager), resultHandler);
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                    resultHandler.accept(txValidator.parseJsonValidateMakerFeeTx(jsonTxt, btcFeeReceivers));
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                    resultHandler.accept(txValidator.parseJsonValidateTakerFeeTx(jsonTxt, btcFeeReceivers));
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:    private List<String> getAllBtcFeeReceivers() {
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:        List<String> btcFeeReceivers = new ArrayList<>();
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                .flatMap(f -> Optional.ofNullable(f.getBtcFeeReceiverAddresses()))
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:                btcFeeReceivers.add(e.split("#")[0]); // victim's receiver address
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:        btcFeeReceivers.addAll(daoFacade.getAllDonationAddresses());
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:        log.info("Known RADC fee receivers: {}", btcFeeReceivers.toString());
core/src/main/java/bisq/core/provider/mempool/MempoolService.java:        return btcFeeReceivers;
core/src/main/java/bisq/core/offer/OfferUtil.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/OfferUtil.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/OfferUtil.java:import static bisq.core.btc.wallet.Restrictions.getMaxBuyerSecurityDepositAsPercent;
core/src/main/java/bisq/core/offer/OfferUtil.java:import static bisq.core.btc.wallet.Restrictions.getMinBuyerSecurityDepositAsPercent;
core/src/main/java/bisq/core/offer/OfferUtil.java:import static bisq.core.btc.wallet.Restrictions.getMinNonDustOutput;
core/src/main/java/bisq/core/offer/OfferUtil.java:import static bisq.core.btc.wallet.Restrictions.isDust;
core/src/main/java/bisq/core/offer/OfferUtil.java:            if (feeCurrencyCode.equalsIgnoreCase("BSQ") && preferences.isPayFeeInBtc())
core/src/main/java/bisq/core/offer/OfferUtil.java:                preferences.setPayFeeInBtc(false);
core/src/main/java/bisq/core/offer/OfferUtil.java:            else if (feeCurrencyCode.equalsIgnoreCase("RADC") && !preferences.isPayFeeInBtc())
core/src/main/java/bisq/core/offer/OfferUtil.java:                preferences.setPayFeeInBtc(true);
core/src/main/java/bisq/core/offer/OfferUtil.java:     * @return {@code true} for an offer to buy RADC from the taker, {@code false} for an
core/src/main/java/bisq/core/offer/OfferUtil.java:     * offer to sell RADC to the taker
core/src/main/java/bisq/core/offer/OfferUtil.java:     * Returns the makerFee as Coin, this can be priced in RADC or BSQ.
core/src/main/java/bisq/core/offer/OfferUtil.java:     * @param amount           the amount of RADC to trade
core/src/main/java/bisq/core/offer/OfferUtil.java:        boolean isCurrencyForMakerFeeBtc = isCurrencyForMakerFeeBtc(amount);
core/src/main/java/bisq/core/offer/OfferUtil.java:        return CoinUtil.getMakerFee(isCurrencyForMakerFeeBtc, amount);
core/src/main/java/bisq/core/offer/OfferUtil.java:     * Checks if the maker fee should be paid in RADC, this can be the case due to user
core/src/main/java/bisq/core/offer/OfferUtil.java:     * @param amount           the amount of RADC to trade
core/src/main/java/bisq/core/offer/OfferUtil.java:     * @return {@code true} if RADC is preferred or the trade amount is nonnull and there
core/src/main/java/bisq/core/offer/OfferUtil.java:    public boolean isCurrencyForMakerFeeBtc(@Nullable Coin amount) {
core/src/main/java/bisq/core/offer/OfferUtil.java:        boolean payFeeInBtc = preferences.getPayFeeInBtc();
core/src/main/java/bisq/core/offer/OfferUtil.java:        return payFeeInBtc || !bsqForFeeAvailable;
core/src/main/java/bisq/core/offer/OfferUtil.java:     * @param amount           the amount of RADC to trade
core/src/main/java/bisq/core/offer/OfferUtil.java:    public Coin getTakerFee(boolean isCurrencyForTakerFeeBtc, @Nullable Coin amount) {
core/src/main/java/bisq/core/offer/OfferUtil.java:            Coin feePerBtc = CoinUtil.getFeePerBtc(FeeService.getTakerFeePerBtc(isCurrencyForTakerFeeBtc), amount);
core/src/main/java/bisq/core/offer/OfferUtil.java:            return CoinUtil.maxCoin(feePerBtc, FeeService.getMinTakerFee(isCurrencyForTakerFeeBtc));
core/src/main/java/bisq/core/offer/OfferUtil.java:    public boolean isCurrencyForTakerFeeBtc(Coin amount) {
core/src/main/java/bisq/core/offer/OfferUtil.java:        boolean payFeeInBtc = preferences.getPayFeeInBtc();
core/src/main/java/bisq/core/offer/OfferUtil.java:        return payFeeInBtc || !bsqForFeeAvailable;
core/src/main/java/bisq/core/offer/OfferUtil.java:                                                     boolean isCurrencyForMakerFeeBtc,
core/src/main/java/bisq/core/offer/OfferUtil.java:                isCurrencyForMakerFeeBtc,
core/src/main/java/bisq/core/offer/OfferUtil.java:                original.isCurrencyForMakerFeeBtc(),
core/src/main/java/bisq/core/offer/OfferUtil.java:                                                      boolean isCurrencyForMakerFeeBtc,
core/src/main/java/bisq/core/offer/OfferUtil.java:            if (isCurrencyForMakerFeeBtc) {
core/src/main/java/bisq/core/offer/OfferUtil.java:                    Coin requiredBtc = bsqPrice.getAmountByVolume(makerFeeAsVolume);
core/src/main/java/bisq/core/offer/OfferUtil.java:                    Volume volumeByAmount = userCurrencyPrice.getVolumeByAmount(requiredBtc);
core/src/main/java/bisq/core/offer/OfferUtil.java:    public static Optional<String> getInvalidMakerFeeTxErrorMessage(Offer offer, BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/offer/OfferUtil.java:        Transaction makerFeeTx = btcWalletService.getTransaction(offerFeePaymentTxId);
core/src/main/java/bisq/core/offer/OfferPayloadBase.java:    // For fiat offer the baseCurrencyCode is RADC and the counterCurrencyCode is the fiat currency
core/src/main/java/bisq/core/offer/OfferPayloadBase.java:    // For altcoin offers it is the opposite. baseCurrencyCode is the altcoin and the counterCurrencyCode is RADC.
core/src/main/java/bisq/core/offer/OfferPayloadBase.java:    // Fiat offers have base currency RADC and counterCurrency Fiat
core/src/main/java/bisq/core/offer/OfferPayloadBase.java:    // Altcoins have base currency Altcoin and counterCurrency RADC
core/src/main/java/bisq/core/offer/Offer.java:    public boolean isCurrencyForMakerFeeBtc() {
core/src/main/java/bisq/core/offer/Offer.java:        return getOfferPayload().map(OfferPayload::isCurrencyForMakerFeeBtc).orElse(false);
core/src/main/java/bisq/core/offer/Offer.java:        currencyCode = getBaseCurrencyCode().equals("RADC") ?
core/src/main/java/bisq/core/offer/OpenOfferManager.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/OpenOfferManager.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/OpenOfferManager.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/offer/OpenOfferManager.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/OpenOfferManager.java:                            BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/OpenOfferManager.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/OpenOfferManager.java:                        OfferUtil.getInvalidMakerFeeTxErrorMessage(openOffer.getOffer(), btcWalletService)
core/src/main/java/bisq/core/offer/OpenOfferManager.java:        btcWalletService.getAddressEntriesForOpenOffer().stream()
core/src/main/java/bisq/core/offer/OpenOfferManager.java:                    btcWalletService.resetAddressEntriesForOpenOffer(e.getOfferId());
core/src/main/java/bisq/core/offer/OpenOfferManager.java:                btcWalletService,
core/src/main/java/bisq/core/offer/OpenOfferManager.java:            btcWalletService.resetAddressEntriesForOpenOffer(offer.getId());
core/src/main/java/bisq/core/offer/OpenOfferManager.java:        if (!btcWalletService.isChainHeightSyncedWithinTolerance()) {
core/src/main/java/bisq/core/offer/OpenOfferManager.java:            if (btcWalletService.isUnconfirmedTransactionsLimitHit() || bsqWalletService.isUnconfirmedTransactionsLimitHit()) {
core/src/main/java/bisq/core/offer/OpenOfferManager.java:                        original.isCurrencyForMakerFeeBtc(),
core/src/main/java/bisq/core/offer/OfferForJson.java:    // primaryMarket fields are based on industry standard where primaryMarket is always in the focus (in the app RADC is always in the focus - will be changed in a larger refactoring once)
core/src/main/java/bisq/core/offer/OfferForJson.java:    transient private final MonetaryFormat coinFormat = MonetaryFormat.RADC;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:                                   BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOfferService.java:                                btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:                                 BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:        super(offerUtil, btcWalletService, bsqWalletService, feeService);
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:        setBtcAmount(Coin.valueOf(Math.min(amount.value, getMaxTradeLimit())));
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapTakeOfferModel.java:                    getBtcAmount().get(),
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:import bisq.core.btc.listeners.BsqBalanceListener;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:    private final WalletChangeEventListener btcWalletChangeEventListener;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:    private final Coin btcAmount;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                            BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcWalletChangeEventListener = null;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcAmount = null;
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcAmount = offer.getAmount();
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            walletBalance = btcWalletService.getSavingWalletBalance();
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcWalletChangeEventListener = wallet -> {
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                Coin newBalance = btcWalletService.getSavingWalletBalance();
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                    log.info("Updated because of RADC wallet balance change. walletBalance={}, hasMissingFunds={}",
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcWalletService.addChangeEventListener(btcWalletChangeEventListener);
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:            btcWalletService.removeChangeEventListener(btcWalletChangeEventListener);
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                Coin requiredInput = BsqSwapCalculation.getSellersBtcInputValue(btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                        btcAmount,
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:                btcAmount.equals(that.btcAmount) && requiredBsqInput.equals(that.requiredBsqInput);
core/src/main/java/bisq/core/offer/bsq_swap/OpenBsqSwapOffer.java:        return Objects.hash(openOffer, tradeFee, isBuyOffer, btcAmount, requiredBsqInput);
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferPayload.java:                "RADC",
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.exceptions.InsufficientBsqException;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.listeners.BalanceListener;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.listeners.BsqBalanceListener;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.model.RawTransactionInput;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:    private final ObjectProperty<Coin> btcAmount = new SimpleObjectProperty<>();
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:    private BalanceListener btcBalanceListener;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                             BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            setBtcAmount(Coin.valueOf(Math.min(offer.getAmount().value, getMaxTradeLimit())));
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            calculateVolumeForAmount(getBtcAmount());
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        btcBalanceListener = new BalanceListener() {
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        btcWalletService.addBalanceListener(btcBalanceListener);
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        btcWalletService.removeBalanceListener(btcBalanceListener);
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        if (isNonZeroPrice.test(price) && isNonZeroAmount.test(btcAmount)) {
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                setVolume(calculateVolumeForAmount(btcAmount));
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                btcAmount.set(reduceTo4DecimalsFunction.apply(amount));
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        Coin btcTradeAmountAsCoin = btcAmount.get();
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        if (bsqTradeAmountAsCoin == null || btcTradeAmountAsCoin == null || tradeFeeAsCoin == null) {
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                payoutAmountAsCoin.set(BsqSwapCalculation.getBuyersBtcPayoutValue(bsqWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                        btcTradeAmountAsCoin,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                payoutAmountAsCoin.set(BsqSwapCalculation.getEstimatedBuyersBtcPayoutValue(btcTradeAmountAsCoin,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                inputAmountAsCoin.set(BsqSwapCalculation.getSellersBtcInputValue(btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                        btcTradeAmountAsCoin,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                inputAmountAsCoin.set(BsqSwapCalculation.getEstimatedSellersBtcInputValue(btcTradeAmountAsCoin, txFeePerVbyte, tradeFee));
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                btcWalletService.getSavingWalletBalance();
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:    public void setBtcAmount(Coin btcAmount) {
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        this.btcAmount.set(btcAmount);
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            if (btcAmount.get() == null || tradeFeeAsCoin == null) {
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            Tuple2<List<RawTransactionInput>, Coin> btcInputsAndChange;
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                btcInputsAndChange = BsqSwapCalculation.getBuyersBsqInputsAndChange(bsqWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                btcInputsAndChange = BsqSwapCalculation.getSellersBtcInputsAndChange(btcWalletService,
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:                        btcAmount.get().getValue(),
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            int vBytes = BsqSwapCalculation.getVBytesSize(btcInputsAndChange.first, btcInputsAndChange.second.getValue());
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        return CoinUtil.getTakerFee(false, btcAmount.get());
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        return CoinUtil.getMakerFee(false, btcAmount.get());
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:        if (minAmount.get() != null && btcAmount.get() != null)
core/src/main/java/bisq/core/offer/bsq_swap/BsqSwapOfferModel.java:            return !minAmount.get().isGreaterThan(btcAmount.get());
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/PlaceOfferModel.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/PlaceOfferModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/PlaceOfferModel.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/PlaceOfferModel.java:    private final BtcWalletService walletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/PlaceOfferModel.java:                           BtcWalletService walletService,
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/ValidateOffer.java:            /*checkArgument(offer.getMakerFee().value >= FeeService.getMinMakerFee(offer.isCurrencyForMakerFeeBtc()).value,
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/ValidateOffer.java:                "createOfferFee must not be less than FeeService.MIN_CREATE_OFFER_FEE_IN_RADC. " +
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.exceptions.TxBroadcastException;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.wallet.TradeWalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:import bisq.core.btc.wallet.WalletService;
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:            BtcWalletService walletService = model.getWalletService();
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:            if (offer.isCurrencyForMakerFeeBtc()) {
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:                tradeWalletService.createBtcTradingFeeTx(
core/src/main/java/bisq/core/offer/placeoffer/bisq_v1/tasks/CreateMakerFeeTx.java:                        "disabled due technical problems. Please use the RADC fee option until the issues are resolved. " +
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:    private final boolean isCurrencyForMakerFeeBtc;
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:                        boolean isCurrencyForMakerFeeBtc,
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:        this.isCurrencyForMakerFeeBtc = isCurrencyForMakerFeeBtc;
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:                .setIsCurrencyForMakerFeeBtc(isCurrencyForMakerFeeBtc)
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:                proto.getIsCurrencyForMakerFeeBtc(),
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:                ",\r\n     isCurrencyForMakerFeeBtc=" + isCurrencyForMakerFeeBtc +
core/src/main/java/bisq/core/offer/bisq_v1/OfferPayload.java:            object.add("isCurrencyForMakerFeeBtc", context.serialize(offerPayload.isCurrencyForMakerFeeBtc()));
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:import static bisq.core.btc.model.AddressEntry.Context.OFFER_FUNDING;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:    private boolean isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:    private boolean isBtcWalletFunded;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:                          BtcWalletService btcWalletService,
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.addressEntry = btcWalletService.getOrCreateAddressEntry(offer.getId(), OFFER_FUNDING);
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.isCurrencyForTakerFeeBtc = offerUtil.isCurrencyForTakerFeeBtc(amount);
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.takerFee = offerUtil.getTakerFee(isCurrencyForTakerFeeBtc, amount);
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        if (isCurrencyForTakerFeeBtc)
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        Coin tradeWalletBalance = btcWalletService.getBalanceForAddress(addressEntry.getAddress());
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:            Coin savingWalletBalance = btcWalletService.getSavingWalletBalance();
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        isBtcWalletFunded = offerUtil.isBalanceSufficient(totalToPayAsCoin, balance);
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        if (isCurrencyForTakerFeeBtc)
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.isBtcWalletFunded = false;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:        this.isCurrencyForTakerFeeBtc = false;
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:                ", isCurrencyForTakerFeeBtc=" + isCurrencyForTakerFeeBtc + "\n" +
core/src/main/java/bisq/core/offer/bisq_v1/TakeOfferModel.java:                ", isBtcWalletFunded=" + isBtcWalletFunded + "\n" +
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:import bisq.core.btc.TxFeeEstimationService;
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:import bisq.core.btc.wallet.Restrictions;
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:                              BtcWalletService btcWalletService) {
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:        boolean isCurrencyForMakerFeeBtc = offerUtil.isCurrencyForMakerFeeBtc(amount);
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:                btcWalletService.getLastBlockSeenHeight(),
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:                isCurrencyForMakerFeeBtc,
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:        // We need to ensure that for small amount values we don't get a too low RADC amount. We limit it with using the
core/src/main/java/bisq/core/offer/bisq_v1/CreateOfferService.java:        // We need to ensure that for small amount values we don't get a too low RADC amount. We limit it with using the
core/src/main/java/bisq/core/api/CoreOffersService.java:            // In fiat offers, the baseCurrencyCode=RADC, counterCurrencyCode=FiatCode.
core/src/main/java/bisq/core/api/CoreOffersService.java:            // In altcoin offers, baseCurrencyCode=AltcoinCode, counterCurrencyCode=RADC.
core/src/main/java/bisq/core/api/CoreOffersService.java:            // This forces an extra filtering step below:  get all RADC offers,
core/src/main/java/bisq/core/api/CoreOffersService.java:            // In fiat offers, the baseCurrencyCode=RADC, counterCurrencyCode=FiatCode.
core/src/main/java/bisq/core/api/CoreOffersService.java:            // In altcoin offers, baseCurrencyCode=AltcoinCode, counterCurrencyCode=RADC.
core/src/main/java/bisq/core/api/CoreOffersService.java:            // This forces an extra filtering step below:  get all RADC offers,
core/src/main/java/bisq/core/api/CoreApi.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/api/CoreApi.java:    public void sendBtc(String address,
core/src/main/java/bisq/core/api/CoreApi.java:        walletsService.sendBtc(address, amount, txFeeRate, memo, callback);
core/src/main/java/bisq/core/api/model/TradeInfo.java:    private final boolean isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/api/model/TradeInfo.java:        this.isCurrencyForTakerFeeBtc = builder.isCurrencyForTakerFeeBtc();
core/src/main/java/bisq/core/api/model/TradeInfo.java:        // A BSQ Swap miner tx fee is paid in full by the RADC seller (buying BSQ).
core/src/main/java/bisq/core/api/model/TradeInfo.java:        // The RADC buyer's payout = tradeamount minus his share of miner fee.
core/src/main/java/bisq/core/api/model/TradeInfo.java:        var isBtcSeller = (isMyOffer && bsqSwapTrade.getOffer().getDirection().equals(SELL))
core/src/main/java/bisq/core/api/model/TradeInfo.java:        var txFeeInBtc = isBtcSeller ? bsqSwapTrade.getTxFee().value : 0L;
core/src/main/java/bisq/core/api/model/TradeInfo.java:        // A BSQ Swap trade fee is paid in full by the RADC buyer (selling BSQ).
core/src/main/java/bisq/core/api/model/TradeInfo.java:                .withIsCurrencyForTakerFeeBtc(false) // BSQ Swap fee is always paid in BSQ.
core/src/main/java/bisq/core/api/model/TradeInfo.java:                .withTxFeeAsLong(txFeeInBtc)
core/src/main/java/bisq/core/api/model/TradeInfo.java:                .withIsCurrencyForTakerFeeBtc(trade.isCurrencyForTakerFeeBtc())
core/src/main/java/bisq/core/api/model/TradeInfo.java:                        .setIsCurrencyForTakerFeeBtc(isCurrencyForTakerFeeBtc)
core/src/main/java/bisq/core/api/model/TradeInfo.java:                .withIsCurrencyForTakerFeeBtc(proto.getIsCurrencyForTakerFeeBtc())
core/src/main/java/bisq/core/api/model/TradeInfo.java:                ", isCurrencyForTakerFeeBtc='" + isCurrencyForTakerFeeBtc + '\'' + "\n" +
core/src/main/java/bisq/core/api/model/OfferInfo.java:    private final boolean isCurrencyForMakerFeeBtc;
core/src/main/java/bisq/core/api/model/OfferInfo.java:    // Fiat offer:  baseCurrencyCode = RADC, counterCurrencyCode = fiat ccy code.
core/src/main/java/bisq/core/api/model/OfferInfo.java:    // Altcoin offer:  baseCurrencyCode = altcoin ccy code, counterCurrencyCode = RADC.
core/src/main/java/bisq/core/api/model/OfferInfo.java:        this.isCurrencyForMakerFeeBtc = builder.isCurrencyForMakerFeeBtc();
core/src/main/java/bisq/core/api/model/OfferInfo.java:                .withIsCurrencyForMakerFeeBtc(offer.isCurrencyForMakerFeeBtc())
core/src/main/java/bisq/core/api/model/OfferInfo.java:                .setIsCurrencyForMakerFeeBtc(isCurrencyForMakerFeeBtc)
core/src/main/java/bisq/core/api/model/OfferInfo.java:                .withIsCurrencyForMakerFeeBtc(proto.getIsCurrencyForMakerFeeBtc())
core/src/main/java/bisq/core/api/model/CanceledTradeInfo.java:                .withIsCurrencyForTakerFeeBtc(offer.isCurrencyForMakerFeeBtc())
core/src/main/java/bisq/core/api/model/BalancesInfo.java:    // balancesInfo.getBtc().getAvailableBalance() is cleaner than
core/src/main/java/bisq/core/api/model/BalancesInfo.java:    // balancesInfo.getBtcBalanceInfo().getAvailableBalance().
core/src/main/java/bisq/core/api/model/BalancesInfo.java:    private final BtcBalanceInfo btc;
core/src/main/java/bisq/core/api/model/BalancesInfo.java:    public BalancesInfo(BsqBalanceInfo bsq, BtcBalanceInfo btc) {
core/src/main/java/bisq/core/api/model/BalancesInfo.java:        this.btc = btc;
core/src/main/java/bisq/core/api/model/BalancesInfo.java:                .setBtc(btc.toProtoMessage())
core/src/main/java/bisq/core/api/model/BalancesInfo.java:                BtcBalanceInfo.fromProto(proto.getBtc()));
core/src/main/java/bisq/core/api/model/BalancesInfo.java:                ", " + btc.toString() + "\n" +
core/src/main/java/bisq/core/api/model/builder/OfferInfoBuilder.java:    private boolean isCurrencyForMakerFeeBtc;
core/src/main/java/bisq/core/api/model/builder/OfferInfoBuilder.java:    public OfferInfoBuilder withIsCurrencyForMakerFeeBtc(boolean isCurrencyForMakerFeeBtc) {
core/src/main/java/bisq/core/api/model/builder/OfferInfoBuilder.java:        this.isCurrencyForMakerFeeBtc = isCurrencyForMakerFeeBtc;
core/src/main/java/bisq/core/api/model/builder/TradeInfoV1Builder.java:    private boolean isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/api/model/builder/TradeInfoV1Builder.java:    public TradeInfoV1Builder withIsCurrencyForTakerFeeBtc(boolean isCurrencyForTakerFeeBtc) {
core/src/main/java/bisq/core/api/model/builder/TradeInfoV1Builder.java:        this.isCurrencyForTakerFeeBtc = isCurrencyForTakerFeeBtc;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    private long btcTradeAmount;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    private String makerBtcAddress;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    private String takerBtcAddress;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    public BsqSwapTradeInfoBuilder withBtcTradeAmount(long btcTradeAmount) {
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:        this.btcTradeAmount = btcTradeAmount;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    public BsqSwapTradeInfoBuilder withMakerBtcAddress(String makerBtcAddress) {
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:        this.makerBtcAddress = makerBtcAddress;
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:    public BsqSwapTradeInfoBuilder withTakerBtcAddress(String takerBtcAddress) {
core/src/main/java/bisq/core/api/model/builder/BsqSwapTradeInfoBuilder.java:        this.takerBtcAddress = takerBtcAddress;
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:public class BtcBalanceInfo implements Payload {
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    public static final BtcBalanceInfo EMPTY = new BtcBalanceInfo(-1,
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    // All balances are in RADC satoshis.
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    public BtcBalanceInfo(long availableBalance,
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    public static BtcBalanceInfo valueOf(long availableBalance,
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:        return new BtcBalanceInfo(availableBalance,
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    public bisq.proto.grpc.BtcBalanceInfo toProtoMessage() {
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:        return bisq.proto.grpc.BtcBalanceInfo.newBuilder()
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:    public static BtcBalanceInfo fromProto(bisq.proto.grpc.BtcBalanceInfo proto) {
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:        return new BtcBalanceInfo(proto.getAvailableBalance(),
core/src/main/java/bisq/core/api/model/BtcBalanceInfo.java:        return "BtcBalanceInfo{" +
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:    private final long btcTradeAmount;
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:    private final String makerBtcAddress;
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:    private final String takerBtcAddress;
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        this.btcTradeAmount = builder.getBtcTradeAmount();
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        this.makerBtcAddress = builder.getMakerBtcAddress();
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        this.takerBtcAddress = builder.getTakerBtcAddress();
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        var makerBtcAddress = wasMyOffer ? protocolModel.getBtcAddress() : swapPeer.getBtcAddress();
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        var takerBtcAddress = wasMyOffer ? swapPeer.getBtcAddress() : protocolModel.getBtcAddress();
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:        // A BSQ Swap trade fee is paid in full by the RADC buyer (selling BSQ).
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withBtcTradeAmount(trade.getAmountAsLong())
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withMakerBtcAddress(makerBtcAddress)
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withTakerBtcAddress(takerBtcAddress)
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .setBtcTradeAmount(btcTradeAmount)
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .setMakerBtcAddress(makerBtcAddress != null ? makerBtcAddress : "")
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .setTakerBtcAddress(takerBtcAddress != null ? takerBtcAddress : "")
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .setTakerBtcAddress(takerBtcAddress != null ? takerBtcAddress : "")
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withBtcTradeAmount(proto.getBtcTradeAmount())
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withMakerBtcAddress(proto.getMakerBtcAddress())
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                .withTakerBtcAddress(proto.getTakerBtcAddress())
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                ", btcTradeAmount=" + btcTradeAmount +
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                ", makerBtcAddress='" + makerBtcAddress + '\'' +
core/src/main/java/bisq/core/api/model/BsqSwapTradeInfo.java:                ", takerBtcAddress='" + takerBtcAddress + '\'' +
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.api.model.BtcBalanceInfo;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.Balances;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.exceptions.AddressEntryException;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.exceptions.BsqChangeBelowDustException;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.exceptions.InsufficientFundsException;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.exceptions.TransactionVerificationException;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.exceptions.WalletException;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.model.BsqTransferModel;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.wallet.BsqTransferService;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.wallet.BsqWalletService;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.wallet.TxBroadcaster;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import bisq.core.btc.wallet.WalletsManager;
core/src/main/java/bisq/core/api/CoreWalletsService.java:import static bisq.core.btc.wallet.Restrictions.getMinNonDustOutput;
core/src/main/java/bisq/core/api/CoreWalletsService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/api/CoreWalletsService.java:    private final CoinFormatter btcFormatter;
core/src/main/java/bisq/core/api/CoreWalletsService.java:                              BtcWalletService btcWalletService,
core/src/main/java/bisq/core/api/CoreWalletsService.java:                              @Named(FormattingUtils.RADC_FORMATTER_KEY) CoinFormatter btcFormatter,
core/src/main/java/bisq/core/api/CoreWalletsService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/api/CoreWalletsService.java:        this.btcFormatter = btcFormatter;
core/src/main/java/bisq/core/api/CoreWalletsService.java:        return btcWalletService.getWallet().getContext().getParams();
core/src/main/java/bisq/core/api/CoreWalletsService.java:                return new BalancesInfo(getBsqBalances(), BtcBalanceInfo.EMPTY);
core/src/main/java/bisq/core/api/CoreWalletsService.java:            case "RADC":
core/src/main/java/bisq/core/api/CoreWalletsService.java:                return new BalancesInfo(BsqBalanceInfo.EMPTY, getBtcBalances());
core/src/main/java/bisq/core/api/CoreWalletsService.java:                return new BalancesInfo(getBsqBalances(), getBtcBalances());
core/src/main/java/bisq/core/api/CoreWalletsService.java:        return btcWalletService.getBalanceForAddress(address).value;
core/src/main/java/bisq/core/api/CoreWalletsService.java:                btcWalletService.isAddressUnused(address));
core/src/main/java/bisq/core/api/CoreWalletsService.java:        boolean unusedAddressExists = btcWalletService.getAvailableAddressEntries()
core/src/main/java/bisq/core/api/CoreWalletsService.java:                .anyMatch(a -> btcWalletService.isAddressUnused(a.getAddress()));
core/src/main/java/bisq/core/api/CoreWalletsService.java:            btcWalletService.getFreshAddressEntry();
core/src/main/java/bisq/core/api/CoreWalletsService.java:        List<String> addressStrings = btcWalletService
core/src/main/java/bisq/core/api/CoreWalletsService.java:            var newZeroBalanceAddress = btcWalletService.getFreshAddressEntry();
core/src/main/java/bisq/core/api/CoreWalletsService.java:                                btcWalletService.isAddressUnused(getAddressEntry(address).getAddress())))
core/src/main/java/bisq/core/api/CoreWalletsService.java:    void sendBtc(String address,
core/src/main/java/bisq/core/api/CoreWalletsService.java:            Set<String> fromAddresses = btcWalletService.getAddressEntriesForAvailableBalanceStream()
core/src/main/java/bisq/core/api/CoreWalletsService.java:            Coin receiverAmount = getValidTransferAmount(amount, btcFormatter);
core/src/main/java/bisq/core/api/CoreWalletsService.java:                    btcWalletService.getFeeEstimationTransactionForMultipleAddresses(fromAddresses,
core/src/main/java/bisq/core/api/CoreWalletsService.java:            Coin dust = btcWalletService.getDust(feeEstimationTransaction);
core/src/main/java/bisq/core/api/CoreWalletsService.java:            log.info("Sending {} RADC to {} with tx fee of {} sats (fee rate {} sats/byte).",
core/src/main/java/bisq/core/api/CoreWalletsService.java:            btcWalletService.sendFundsForMultipleAddresses(fromAddresses,
core/src/main/java/bisq/core/api/CoreWalletsService.java:            throw new IllegalStateException("cannot send btc from any addresses in wallet", ex);
core/src/main/java/bisq/core/api/CoreWalletsService.java:            throw new NotAvailableException("cannot send btc due to insufficient funds", ex);
core/src/main/java/bisq/core/api/CoreWalletsService.java:        TransactionConfidence confidence = btcWalletService.getConfidenceForAddress(address);
core/src/main/java/bisq/core/api/CoreWalletsService.java:    // Throws a RuntimeException if wallet currency code is not BSQ or RADC.
core/src/main/java/bisq/core/api/CoreWalletsService.java:                && !currencyCode.equalsIgnoreCase("RADC"))
core/src/main/java/bisq/core/api/CoreWalletsService.java:        if (btcWalletService.getAesKey() == null || bsqWalletService.getAesKey() == null) {
core/src/main/java/bisq/core/api/CoreWalletsService.java:    private BtcBalanceInfo getBtcBalances() {
core/src/main/java/bisq/core/api/CoreWalletsService.java:        return new BtcBalanceInfo(availableBalance.value,
core/src/main/java/bisq/core/api/CoreWalletsService.java:                ? btcWalletService.getTxFeeForWithdrawalPerVbyte()
core/src/main/java/bisq/core/api/CoreWalletsService.java:                btcWalletService.getAddressEntryListAsImmutableList().stream()
core/src/main/java/bisq/core/api/CoreWalletsService.java:            Transaction tx = btcWalletService.getTransaction(txId);
core/src/main/java/bisq/core/api/CoreTradesService.java:import bisq.core.btc.model.AddressEntry;
core/src/main/java/bisq/core/api/CoreTradesService.java:import bisq.core.btc.wallet.BtcWalletService;
core/src/main/java/bisq/core/api/CoreTradesService.java:import bisq.core.util.validation.BtcAddressValidator;
core/src/main/java/bisq/core/api/CoreTradesService.java:import static bisq.core.btc.model.AddressEntry.Context.TRADE_PAYOUT;
core/src/main/java/bisq/core/api/CoreTradesService.java:    private final BtcWalletService btcWalletService;
core/src/main/java/bisq/core/api/CoreTradesService.java:                             BtcWalletService btcWalletService,
core/src/main/java/bisq/core/api/CoreTradesService.java:        this.btcWalletService = btcWalletService;
core/src/main/java/bisq/core/api/CoreTradesService.java:                takeOfferModel.isCurrencyForTakerFeeBtc(),
core/src/main/java/bisq/core/api/CoreTradesService.java:        verifyIsValidRADCAddress(toAddress);
core/src/main/java/bisq/core/api/CoreTradesService.java:        var fromAddressEntry = btcWalletService.getOrCreateAddressEntry(trade.getId(), TRADE_PAYOUT);
core/src/main/java/bisq/core/api/CoreTradesService.java:            return btcWalletService.getFeeEstimationTransaction(fromAddress,
core/src/main/java/bisq/core/api/CoreTradesService.java:    private void verifyIsValidRADCAddress(String address) {
core/src/main/java/bisq/core/api/CoreTradesService.java:            new BtcAddressValidator().validate(address);
core/src/main/java/bisq/core/api/CoreTradesService.java:            throw new IllegalArgumentException(format("'%s' is not a valid btc address", address));
core/src/main/java/bisq/core/api/CoreTradesService.java:        Coin fromAddressBalance = btcWalletService.getBalanceForAddress(fromAddressEntry.getAddress());
core/src/main/java/bisq/core/payment/payload/PaymentMethod.java:        // Hack for SF as the smallest unit is 1 SF ;-( and price is about 3 RADC!
core/src/main/java/bisq/core/payment/payload/PaymentMethod.java:    // Includes any non btc asset, not limited to blockchain payment methods
core/src/main/java/bisq/core/payment/TradeLimits.java:     * @return Rounded trade limit for first month to avoid RADC value with precision < 4.
core/src/main/java/bisq/core/payment/TradeLimits.java:        // We want to avoid more than 4 decimal places (100000000 / 32 = 3125000 or 1 RADC / 32 = 0.03125 RADC).
core/src/main/java/bisq/core/payment/TradeLimits.java:        // We want rounding to 0.0313 RADC
core/src/main/resources/wallet/checkpoints.testnet.txt:AAAAAADxiQSIacWSAAHYgAIAAADfTsbtceXn5dhc6T4KbLq5rhHmAvJkIh/EYyEAAAAAALf6dN29NHyAmPbiAfUMcQ0sZrlFCgcNvJ5wrB8DOW4E5wlgUkzfABwyNx98
core/src/main/resources/wallet/checkpoints.testnet.txt:AAAAAAL3gLY0dDe3AAJWgAIAAACcPHftqN36iCglEyH1N9AmuCuu0vhXBMYUphAAAAAAAPncAh1bTcPAW2cGka4nHPyHrvhegr9txsvxgovEza5InganUkOxBRs2LLSU
core/src/main/resources/wallet/checkpoints.testnet.txt:AAAABJOvJbtcJxk5AAfn4AMAAADc9zqz1hE+SR2GugPJvM/b0mQaS0rCrXfxB4sAAAAAAF6Xn9iTpIaFIX+aCHJUU+J/BzCErYMigw9tm+QNUut9hYe9VafLABym+Nzo
core/src/main/resources/i18n/displayStrings_pt.properties:shared.buyingRADCWith=comprando RADC com {0}
core/src/main/resources/i18n/displayStrings_pt.properties:shared.sellingRADCFor=vendendo RADC por {0}
core/src/main/resources/i18n/displayStrings_pt.properties:shared.buyingCurrency=comprando {0} (vendendo RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:shared.sellingCurrency=vendendo {0} (comprando RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:shared.RADCMinMax=RADC (mín - máx)
core/src/main/resources/i18n/displayStrings_pt.properties:shared.TheRADCBuyer=O comprador de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:shared.paymentDetails=Detalhes do pagamento do {0} de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:shared.btcAmount=Quantia de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.menu.buyBtc=Comprar RADC
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.menu.sellBtc=Vender RADC
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo.initializing=Conectando à rede Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo.connectingTo=Conectando à
core/src/main/resources/i18n/displayStrings_pt.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings_pt.properties:market.spread.numberOfBuyOffersColumn=Comprar RADC ({0})
core/src/main/resources/i18n/displayStrings_pt.properties:market.spread.numberOfSellOffersColumn=Vender RADC ({0})
core/src/main/resources/i18n/displayStrings_pt.properties:market.spread.totalAmountColumn=Total de RADC ({0})
core/src/main/resources/i18n/displayStrings_pt.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_pt.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_pt.properties:createOffer.amount.prompt=Escreva a quantia em RADC
core/src/main/resources/i18n/displayStrings_pt.properties:createOffer.amountPriceBox.amountDescription=Quantia de RADC para {0}
core/src/main/resources/i18n/displayStrings_pt.properties:createOffer.amountPriceBox.minAmountDescription=Quantia mínima de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:createOffer.tradeFee.descriptionRADCOnly=taxa de negócio
core/src/main/resources/i18n/displayStrings_pt.properties:takeOffer.amount.prompt=Insira a quantia de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:takeOffer.amountPriceBox.buy.amountDescription=Quantia de RADC a vender
core/src/main/resources/i18n/displayStrings_pt.properties:takeOffer.amountPriceBox.sell.amountDescription=Quantia de RADC a comprar
core/src/main/resources/i18n/displayStrings_pt.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=A quantia introduzida excede o número de casas décimas permitido.\nA quantia foi ajustada para 4 casas decimais.
core/src/main/resources/i18n/displayStrings_pt.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Essa quantia inseria criaria troco poeira para o vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.cash=Por favor vá à um banco e pague{0} ao vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.cash.extra=REQUERIMENTO IMPORTANTE:\nDepois de ter feito o pagamento escreva no recibo de papel: SEM REEMBOLSOS.\nEm seguida, rasgue-o em 2 partes, tire uma foto e envie-a para o endereço de e-mail do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.moneyGram=Por favor pague {0} ao vendedor de RADC usando MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.moneyGram.extra=REQUERIMENTO IMPORTANTE:\nDepois de ter feito o pagamento envie o Número de autorização e uma foto do recibo por email para o vendedor de RADC\nO recibo deve mostrar claramente o nome completo do vendedor, o país, o estado e a quantia. O email do vendedor é: {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.westernUnion=Por favor pague {0} ao vendedor de RADC usando Western Union.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.westernUnion.extra=REQUISITO IMPORTANTE:\nDepois de ter feito o pagamento, envie o MTCN (número de rastreamento) e uma foto do recibo por e-mail para o vendedor de RADC.\nO recibo deve mostrar claramente o nome completo do vendedor, a cidade, o país e a quantia. O e-mail do vendedor é: {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.postal=Por favor envie {0} por \"US Postal Money Order\" para o vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.f2f=Por favor contacte o vendedor de RADC pelo contacto fornecido e marque um encontro para pagar {0}.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Você enviou o recibo de papel para o vendedor de RADC?
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Lembre-se:\nPrecisa escrever no recibo de papel: SEM REEMBOLSOS.\nEm seguida, rasgue-o em 2 partes, tire uma foto e envie-a para o endereço de e-mail do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Você precisa enviar o Número de Autorização e uma foto do recibo por e-mail para o vendedor de RADC.\nO recibo deve mostrar claramente o nome completo do vendedor, o país, o estado e a quantia. O e-mail do vendedor é: {0}.\n\nVocê enviou o Número de Autorização e o contrato para o vendedor?
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Você precisa enviar o MTCN (número de rastreamento) e uma foto do recibo por e-mail para o vendedor de RADC.\nO recibo deve mostrar claramente o nome completo do vendedor, a cidade, o país e a quantia. O e-mail do vendedor é: {0}.\n\nVocê enviou o MTCN e o contrato para o vendedor?
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Você precisa enviar uma mensagem de texto com o código HalCash, bem como o ID da negociação ({0}) para o vendedor RADC.\nO nº do telemóvel do vendedor é {1}.\n\nVocê enviou o código para o vendedor?
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_seller.waitPayment.msg=A transação de depósito tem pelo menos uma confirmação da blockchain.\nVocê precisa esperar até que o comprador de RADC inicie o pagamento {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_seller.warn=O comprador do RADC ainda não efetuou o pagamento de {0}.\nVocê precisa esperar até que eles tenham iniciado o pagamento.\nSe o negócio não for concluído em {1}, o árbitro irá investigar.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step2_seller.openForDispute=O comprador de RADC não iniciou o seu pagamento!\nO período máx. permitido para o negócio acabou.\nVocê pode esperar e dar mais tempo ao seu par de negociação ou entrar em contacto com o mediador para assistência.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_buyer.wait.headline=Aguarde confirmação de pagamento do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_buyer.wait.info=Aguardando confirmação do vendedor de RADC para o recibo do pagamento de {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_buyer.warn.part2=O vendedor de RADC ainda não confirmou o seu pagamento. Por favor confirme se o envio do pagamento de {0} foi bem-sucedido.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.cash=Como o pagamento é feito via Depósito em Dinheiro, o comprador do RADC deve escrever "SEM REEMBOLSO" no recibo de papel, rasgá-lo em 2 partes e enviar uma foto por e-mail.\n\nPara evitar o risco de estorno, confirme apenas se você recebeu o e-mail e se tiver certeza de que o recibo de papel é válido.\nSe você não tiver certeza, {0}
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.moneyGram=O comprador deve enviar o Número de Autorização e uma foto do recibo por e-mail.\nO recibo deve mostrar claramente o seu nome completo, país, estado e a quantia. Por favor verifique seu e-mail se recebeu o Número de Autorização.\n\nDepois de fechar esse pop-up, verá o nome e o endereço do comprador do RADC para levantar o dinheiro da MoneyGram.\n\nConfirme apenas o recebimento depois de ter conseguido o dinheiro com sucesso!
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.westernUnion=O comprador deve enviar-lhe o MTCN (número de rastreamento) e uma foto do recibo por e-mail.\nO recibo deve mostrar claramente seu nome completo, cidade, país e a quantia Por favor verifique no seu e-mail se você recebeu o MTCN.\n\nDepois de fechar esse pop-up, você verá o nome e endereço do comprador de RADC para levantar o dinheiro da Western Union.\n\nConfirme apenas o recebimento depois de ter conseguido o dinheiro com sucesso!
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.buyerStartedPayment=O comprador de RADC começou o pagamento de {0}.\n{1}
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Observe que, assim que você confirmar a recepção, o valor da transação bloqueada será liberado para o comprador de RADC e o depósito de segurança será reembolsado.\n\n
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.step5_buyer.withdrawRADC=Levantar seus bitcoins
core/src/main/resources/i18n/displayStrings_pt.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_pt.properties:funds.deposit.amount=Quantia em RADC (opcional)
core/src/main/resources/i18n/displayStrings_pt.properties:funds.tx.withdrawnFromBSQWallet=RADC levantado da carteira BSQ
core/src/main/resources/i18n/displayStrings_pt.properties:funds.tx.dustAttackTx.popup=Esta transação está enviando uma quantia muito pequena de RADC para a sua carteira e pode ser uma tentativa das empresas de análise da blockchain para espionar a sua carteira.\n\nSe você usar esse output em uma transação eles decobrirão que você provavelmente também é o proprietário de outros endereços (mistura de moedas).\n\nPara proteger sua privacidade a carteira Bisq ignora tais outputs de poeira para fins de consumo e no ecrã de saldo. Você pode definir a quantia limite a partir da qual um output é considerado poeira nas definições."
core/src/main/resources/i18n/displayStrings_pt.properties:support.buyerAddress=Endereço do comprador de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:support.sellerAddress=Endereço do vendedor de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:support.buyerOfferer=Comprador de RADC/Ofertante
core/src/main/resources/i18n/displayStrings_pt.properties:support.sellerOfferer=Vendedor de RADC/Ofertante
core/src/main/resources/i18n/displayStrings_pt.properties:support.buyerTaker=Comprador de RADC/Aceitador
core/src/main/resources/i18n/displayStrings_pt.properties:support.sellerTaker=Vendedor de RADC/Aceitador
core/src/main/resources/i18n/displayStrings_pt.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_pt.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.btcHeader=Rede Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.btcNodesLabel=Usar nós de Bitcoin Core personalizados
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.useTorForBtcJLabel=Usar Tor para a rede de Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.warn.invalidBtcConfig=A conexão à rede Bitcoin falhou porque sua configuração é inválida.\n\nA sua configuração foi redefinida para usar os nós de Bitcoin fornecidos. Você precisará reiniciar o programa.
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.localhostBtcNodeInfo=Background information: Bisq looks for a local Bitcoin node when starting. If it is found, Bisq will communicate with the Bitcoin network exclusively through it.
core/src/main/resources/i18n/displayStrings_pt.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_pt.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Abrir ferramenta e emergência da carteira para a carteira de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_pt.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_pt.properties:account.altcoin.popup.liquidbitcoin.msg=A negociação de L-RADC no Bisq exige que você entenda o seguinte:\n\nAo receber L-RADC para um negócio no Bisq, você não pode usar a aplicação  móvel Blockstream Green Wallet ou uma carteira de custódia / exchange. Você só deve receber o L-RADC na carteira Liquid Elements Core ou em outra carteira L-RADC que permita obter a chave ofuscante para o seu endereço L-RADC cego.\n\nNo caso de ser necessária mediação, ou se surgir uma disputa de negócio, você deve divulgar a chave ofuscante do seu endereço L-RADC de recebimento ao mediador ou agente de reembolso Bisq, para que eles possam verificar os detalhes da sua Transação Confidencial no seu próprio Elements Core full node.\n\nO não fornecimento das informações necessárias ao mediador ou ao agente de reembolso resultará na perda do caso de disputa. Em todos os casos de disputa, o recipiente de L-RADC suporta 100% da responsabilidade ao fornecer prova criptográfica ao mediador ou ao agente de reembolso.\n\nSe você não entender esses requerimentos, não negocie o L-RADC no Bisq.
core/src/main/resources/i18n/displayStrings_pt.properties:account.seed.info=Por favor, anote as palavras-semente da carteira e a data! Você pode recuperar sua carteira a qualquer momento com palavras-semente e a data.\nAs mesmas palavras-semente são usadas para a carteira RADC e BSQ.\n\nVocê deve anotar as palavras-semente numa folha de papel. Não as guarde no seu computador.\n\nPor favor, note que as palavras-semente não são um substituto para um backup.\nVocê precisa criar um backup de todo o diretório do programa a partir do ecrã \"Conta/Backup\" para recuperar o estado e os dados do programa.\nA importação de palavras-semente é recomendada apenas para casos de emergência. O programa não será funcional sem um backup adequado dos arquivos da base de dados e das chaves!
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.priceAlert.high.label=Notificar se o preço de RADC está acima de
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.priceAlert.low.label=Notificar se o preço de RADC está abaixo de
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.trade.message.msg.started=O comprador do RADC iniciou o pagamento para o negócio com o ID {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.marketAlert.offerType.buy=Ofertas de compra (Eu quero vender RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.marketAlert.offerType.sell=Ofertas de venda (eu quero comprar RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:account.notifications.marketAlert.trigger.info=Com uma distância de preço definida, você só receberá um alerta quando uma oferta que atenda (ou exceda) os seus requerimentos for publicada. Exemplo: você quer vender RADC, mas você só venderá à um ganho de 2% sobre o atual preço de mercado. Definir esse campo como 2% garantirá que você receba apenas alertas para ofertas com preços que estão 2% (ou mais) acima do atual preço de mercado.
core/src/main/resources/i18n/displayStrings_pt.properties:dao.availableNonBsqBalance=Balanço não-BSQ disponível (RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.DEFAULT_MAKER_FEE_RADC=taxa RADC do ofertante
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.DEFAULT_TAKER_FEE_RADC=taxa RADC do aceitador
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.MIN_MAKER_FEE_RADC=Mín. taxa RADC do ofertante
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.MIN_TAKER_FEE_RADC=Mín. taxa RADC do aceitador
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.RECIPIENT_RADC_ADDRESS=Endereço RADC do recipiente
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.ARBITRATOR_FEE=Taxa do árbitro em RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.param.MAX_TRADE_LIMIT=Máx. limite de negócio em RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin node operator
core/src/main/resources/i18n/displayStrings_pt.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Proprietário do endereço RADC de doação
core/src/main/resources/i18n/displayStrings_pt.properties:dao.wallet.send.sendBtcFunds=Enviar fundos não-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_pt.properties:dao.wallet.send.btcAmount=Quantia em RADC (fundos não-BSQ)
core/src/main/resources/i18n/displayStrings_pt.properties:dao.wallet.send.receiverBtcAddress=Endereço RADC do recipiente
core/src/main/resources/i18n/displayStrings_pt.properties:dao.wallet.send.sendBtc=Enviar fundos RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.tx.withdrawnFromWallet=RADC levantado da carteira
core/src/main/resources/i18n/displayStrings_pt.properties:dao.proposal.create.missingMinerFeeFunds=Você não tem suficientes fundos de RADC para criar a transação da proposta. Todas as transações de BSQ exigem uma taxa do mineiro em RADC.\nEm falta: {0}
core/src/main/resources/i18n/displayStrings_pt.properties:dao.proposal.create.missingIssuanceFunds=Você não tem suficientes fundos de RADC para criar a transação da proposta. Todas as transações de BSQ exigem uma taxa do mineiro em RADC, e as transações de emissão também exigem RADC pela quantia de BSQ solicitado ({0} satoshis/BSQ).\nEm falta: {1}
core/src/main/resources/i18n/displayStrings_pt.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.dashboard.avgPrice90=Média de 90 dias do preço de negócio de BSQ/RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.dashboard.avgPrice30=Média de 30 dias do preço de negócio de BSQ/RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_pt.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_pt.properties:contractWindow.btcAddresses=Endereço bitcoin comprador RADC / vendendor RADC
core/src/main/resources/i18n/displayStrings_pt.properties:contractWindow.onions=Endereço de rede comprador de RADC / vendendor de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:contractWindow.accountAge=Idade da conta do comprador de RADC / vendedor de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:contractWindow.numDisputes=Nº de disputas comprador de RADC / vendedor de RADC:
core/src/main/resources/i18n/displayStrings_pt.properties:disputeSummaryWindow.payout.getsTradeAmount={0} de RADC fica com o pagamento da quantia de negócio
core/src/main/resources/i18n/displayStrings_pt.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_pt.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_pt.properties:emptyWalletWindow.bsq.btcBalance=Saldo de satoshis não-BSQ
core/src/main/resources/i18n/displayStrings_pt.properties:filterWindow.btcNode=Nós de Bitcoin filtrados (endereços + portas sep. por vírgula)
core/src/main/resources/i18n/displayStrings_pt.properties:filterWindow.preventPublicBtcNetwork=Prevenir uso da rede de Bitcoin pública
core/src/main/resources/i18n/displayStrings_pt.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_pt.properties:offerDetailsWindow.minBtcAmount=Quantia mín. de RADC
core/src/main/resources/i18n/displayStrings_pt.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_pt.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_pt.properties:feeOptionWindow.info=Pode escolher pagar a taxa de negócio em BSQ ou em RADC. Se escolher BSQ tira proveito da taxa de negócio descontada.
core/src/main/resources/i18n/displayStrings_pt.properties:feeOptionWindow.useRADC=Usar RADC
core/src/main/resources/i18n/displayStrings_pt.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_pt.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Você precisa esperar até que você tenha pelo menos {0} conexões com a rede Bitcoin.
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.insufficientBtcFundsForBsqTx=Você não tem fundos RADC suficientes para pagar a taxa de mineração para essa transação.\nPor favor financie sua carteira RADC.\nFundos em falta: {0}
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.btcChangeBelowDustException=Esta transação cria um output de trocos que está abaixo do limite de poeira (546 satoshis) e seria rejeitada pela rede do bitcoin.\n\nVocê precisa adicionar a quantia de poeira ao seu montante à ser enviado para evitar gerar um output de poeira.\n\nO output de poeira é {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.noBsqFundsForBtcFeePayment=Sua carteira BSQ não possui fundos suficientes para pagar a taxa de negócio em BSQ.
core/src/main/resources/i18n/displayStrings_pt.properties:popup.warning.burnRADC=Esta transação não é possível, pois as taxas de mineração de {0} excederia o montante a transferir de {1}. Aguarde até que as taxas de mineração estejam novamente baixas ou até você ter acumulado mais RADC para transferir.
core/src/main/resources/i18n/displayStrings_pt.properties:notification.trade.accepted=Sua oferta foi aceite por um {0} de RADC.
core/src/main/resources/i18n/displayStrings_pt.properties:notification.trade.paymentStarted=O comprador de RADC iniciou o pagamento
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_MAINNET=Mainnet de Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_TESTNET=Testnet de Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_REGTEST=Regtest Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_DAO_TESTNET=Testnet da OAD do Bitcoin (discontinuada)
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_DAO_BETANET=Betanet da OAD do Bisq (Mainnet do Bitcoin)
core/src/main/resources/i18n/displayStrings_pt.properties:RADC_DAO_REGTEST=Regtest da OAD do Bitcoin
core/src/main/resources/i18n/displayStrings_pt.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pt.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pt.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.halCash.info=Ao usar o HalCash, o comprador de RADC precisa enviar ao vendedor de RADC o código HalCash através de uma mensagem de texto do seu telemóvel.\n\nPor favor, certifique-se de não exceder a quantia máxima que seu banco lhe permite enviar com o HalCash. A quantia mín. de levantamento é de 10 euros e a quantia máx. é de 600 EUR. Para levantamentos repetidos é de 3000 euros por recipiente por dia e 6000 euros por recipiente por mês. Por favor confirme esses limites com seu banco para ter certeza de que eles usam os mesmos limites mencionados aqui.\n\nA quantia de levantamento deve ser um múltiplo de 10 euros, pois você não pode levantar outras quantias de uma ATM. A interface do utilizador no ecrã para criar oferta e aceitar ofertas ajustará a quantia de RADC para que a quantia de EUR esteja correta. Você não pode usar o preço com base no mercado, pois o valor do EUR estaria mudando com a variação dos preços.\n\nEm caso de disputa, o comprador de RADC precisa fornecer a prova de que enviou o EUR.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_pt.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_pt.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.toLarge=O input maior que {0} não é permitido.
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.toSmall=Input menor que {0} não é permitido.
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.invalidAddress=O endereço está incorreto. Por favor verificar o formato do endereço.
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.exceedsMaxTradeLimit=O seu limite de negócio é de {0}.
core/src/main/resources/i18n/displayStrings_pt.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.buyingRADCWith=comprando RADC com {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.sellingRADCFor=vendendo RADC por {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.buyingCurrency=comprando {0} (vendendo RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.sellingCurrency=vendendo {0} (comprando RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.TheRADCBuyer=O comprador de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.paymentDetails=Detalhes de pagamento do {0} de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:shared.btcAmount=Quantidade de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.menu.buyBtc=Comprar RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.menu.sellBtc=Vender RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo.initializing=Conectando-se à rede Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo.connectingTo=Conectando-se a
core/src/main/resources/i18n/displayStrings_pt-br.properties:mainView.footer.btcInfo.connectionFailed=Falha na conexão à
core/src/main/resources/i18n/displayStrings_pt-br.properties:market.spread.numberOfBuyOffersColumn=Comprar RADC ({0})
core/src/main/resources/i18n/displayStrings_pt-br.properties:market.spread.numberOfSellOffersColumn=Vender RADC ({0})
core/src/main/resources/i18n/displayStrings_pt-br.properties:market.spread.totalAmountColumn=Total de RADC ({0})
core/src/main/resources/i18n/displayStrings_pt-br.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_pt-br.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_pt-br.properties:createOffer.amount.prompt=Insira o valor em RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:createOffer.amountPriceBox.amountDescription=Quantia em RADC para {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:createOffer.amountPriceBox.minAmountDescription=Quantia mínima de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:createOffer.tradeFee.descriptionRADCOnly=Taxa de negociação
core/src/main/resources/i18n/displayStrings_pt-br.properties:takeOffer.amount.prompt=Insira a quantia em RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:takeOffer.amountPriceBox.buy.amountDescription=Quantia de RADC para vender
core/src/main/resources/i18n/displayStrings_pt-br.properties:takeOffer.amountPriceBox.sell.amountDescription=Quantia de RADC para comprar
core/src/main/resources/i18n/displayStrings_pt-br.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=A quantia que você inseriu excede o número máximo de casas decimais permitida.\nA quantia foi ajustada para 4 casas decimais.
core/src/main/resources/i18n/displayStrings_pt-br.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Essa quantia inserida criaria um troco pequeno demais para o vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.altcoin=Transfira com a sua carteira {0} externa\n{1} para o vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.cash=Vá ao banco e pague {0} ao vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.cash.extra=IMPORTANTE:\nApós executar o pagamento, escreva no comprovante de depósito: SEM REEMBOLSO\nEntão rasgue-o em 2 partes, tire uma foto e envie-a para o e-mail do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.moneyGram=Pague {0} ao vendedor de RADC usando MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.moneyGram.extra=IMPORTANTE:\nApós ter feito o pagamento, envie o número de autorização e uma foto do comprovante por e-mail para o vendedor de RADC.\nO comprovante deve exibir claramente o nome completo, o país e o estado do vendedor, assim como a quantia. O e-mail do vendedor é: {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.westernUnion=Pague {0} ao vendedor de RADC usando Western Union.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.westernUnion.extra=IMPORTANTE:\nApós ter feito o pagamento, envie o número de rastreamento (MTCN) e uma foto do comprovante por e-mail para o vendedor de RADC.\nO comprovante deve exibir claramente o nome completo, o país e o estado do vendedor, assim como a quantia. O e-mail do vendedor é: {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.postal=Envie {0} através de \"US Postal Money Order\" para o vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.f2f=Por favor, entre em contato com o vendedor de RADC através do contato fornecido e combine um encontro para pagá-lo {0}.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Você enviou o comprovante de depósito para o vendedor de RADC?
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Lembre-se:\nVocê deve escrever no comprovante de depósito: SEM REEMBOLSO\nA seguir, rasgue-o em duas partes, tire uma foto e envie-a para o e-mail do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Você previsa enviar por-email para o vendedor RADC o número de autorização e uma foto com o comprovante de depósito.\nO comprovante deve mostrar claramente o nome completo, o país e o estado do vendedor, assim como a quantia. O e-mail do vendedor é: {0}.\n\nVocê enviou o número de autorização e o contrato ao vendedor?
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Você precisa enviar o MTCN (número de rastreamento) e uma foto do recibo por e-mail para o vendedor de RADC.\nO recibo deve mostrar claramente o nome completo do vendedor, a cidade, o país e a quantia. O e-mail do vendedor é: {0}.\n\nVocê enviou o MTCN e o contrato para o vendedor?
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Você precisa enviar uma mensagem de texto com o código HalCash, bem como o ID da negociação ({0}) para o vendedor RADC.\nO nº do telefone do vendedor é {1}.\n\nVocê enviou o código para o vendedor?
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_seller.waitPayment.msg=A transação de depósito tem pelo menos uma confirmação blockchain do protocolo.\nVocê precisa aguardar até que o comprador de RADC inicie o pagamento de {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_seller.warn=O comprador de RADC ainda não fez o pagamento de {0}.\nVocê precisa esperar até que ele inicie o pagamento.\nCaso a negociação não conclua em {1}, o árbitro irá investigar.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step2_seller.openForDispute=O comprador de RADC ainda não iniciou o pagamento!\nO período máximo permitido para a negociação expirou.\nVocê pode aguardar mais um pouco, dando mais tempo para o seu parceiro de negociação, ou você pode entrar em contato com o mediador para pedir assistência.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_buyer.wait.headline=Aguarde confirmação de pagamento do vendedor de RADC.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_buyer.wait.info=Aguardando o vendedor de RADC confirmar o recebimento do pagamento de {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_buyer.warn.part2=O vendedor de RADC ainda não confirmou o seu pagamento. Por favor, verifique em {0} se o pagamento foi enviado com sucesso.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_buyer.openForDispute=O vendedor de RADC não confirmou o seu pagamento! O período máximo para essa negociação expirou. Você pode aguardar mais um pouco, dando mais tempo para o seu parceiro de negociação, ou você pode pedir a assistência de um mediador.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.cash=Como o pagamento é realizado através de depósito de dinheiro em espécie, o comprador de RADC obrigatoriamente deve escrever \"SEM REEMBOLSO\" no comprovante de depósito, rasgá-lo em duas partes e enviar uma foto do comprovante para você por e-mail.\n\nPara reduzir a chance de um reembolso (restituição do valor depositado para o comprador), confirme apenas se você tiver recebido o e-mail e tiver certeza de que o comprovante de depósito é autêntico.\nSe você não tiver certeza, {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.moneyGram=O comprador deve enviar o Número de Autorização e uma foto do recibo por e-mail.\nO recibo deve mostrar claramente o seu nome completo, país, estado e a quantia. Por favor verifique seu e-mail se recebeu o Número de Autorização.\n\nDepois de fechar esse pop-up, verá o nome e o endereço do comprador do RADC para retirar o dinheiro da MoneyGram.\n\nConfirme apenas o recebimento depois de ter conseguido o dinheiro com sucesso!
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.westernUnion=O comprador deve enviar-lhe o MTCN (número de rastreamento) e uma foto do recibo por e-mail.\nO recibo deve mostrar claramente seu nome completo, cidade, país e a quantia Por favor verifique no seu e-mail se você recebeu o MTCN.\n\nDepois de fechar esse pop-up, você verá o nome e endereço do comprador de RADC para receber o dinheiro da Western Union.\n\nConfirme apenas o recebimento depois de ter conseguido o dinheiro com sucesso!
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.buyerStartedPayment=O comprador de RADC iniciou o pagamento {0}.\n{1}
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Assim que você confirmar o recebimento do pagamento, o valor da transação será liberado para o comprador de RADC e o depósito de segurança será devolvido.\n\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.step5_buyer.withdrawRADC=Retirar seus bitcoins
core/src/main/resources/i18n/displayStrings_pt-br.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_pt-br.properties:funds.deposit.amount=Quantia em RADC (opcional)
core/src/main/resources/i18n/displayStrings_pt-br.properties:funds.tx.withdrawnFromBSQWallet=RADC retirado da carteira BSQ
core/src/main/resources/i18n/displayStrings_pt-br.properties:funds.tx.dustAttackTx.popup=Esta transação está enviando uma quantia muito pequena de RADC para a sua carteira e pode ser uma tentativa das empresas de análise da blockchain para espionar a sua carteira.\n\nSe você usar esse output em uma transação eles decobrirão que você provavelmente também é o proprietário de outros endereços (mistura de moedas).\n\nPara proteger sua privacidade a carteira Bisq ignora tais outputs de poeira para fins de consumo e na tela de saldo. Você pode definir a quantia limite a partir da qual um output é considerado poeira nas configurações."
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.buyerAddress=Endereço do comprador de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.sellerAddress=Endereço do vendedor de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.buyerOfferer=Comprador de RADC / Ofetante
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.sellerOfferer=Vendedor de RADC / Ofertante
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.buyerTaker=Comprador de RADC / Aceitador da oferta
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.sellerTaker=Vendedor de RADC / Aceitador da oferta
core/src/main/resources/i18n/displayStrings_pt-br.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_pt-br.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.btcHeader=Rede Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.btcNodesLabel=Usar nodos personalizados do Bitcoin Core
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.useTorForBtcJLabel=Usar Tor na rede Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.warn.invalidBtcConfig=A conexão com a rede Bitcoin falhou porque suas configurações são inválidas.\n\nSuas configurações foram resetadas para utilizar os nós fornecidos da rede Bitcoin. É necessário reiniciar o aplicativo.
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.localhostBtcNodeInfo=Informações básicas: Bisq busca por um nó Bitcoin local na inicialização. Caso encontre, Bisq irá comunicar com a rede Bitcoin exclusivamente através deste nó.
core/src/main/resources/i18n/displayStrings_pt-br.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_pt-br.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Abrir ferramenta de emergência da carteira RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.altcoin.popup.liquidbitcoin.msg=Para negociar com L-RADC na Bisq é preciso entender o seguinte:\n\nQuando se recebe L-RADC de uma negociação na Bisq, você não pode usar a carteira móvel Blockstream Green ou uma carteira de exchange. Você só pode receber L-RADC numa carteira Liquid Elements Core, ou outra carteira L-RADC que lhe permita obter a blinding key para o seu endereço blinded de L-RADC.\n\nNo caso de mediação ou se uma disputa acontecer, você precisa divulgar ao mediador, ou agente de reembolsos, a blinding key do seu endereço receptor de L-RADC para que ele possa verificar os detalhes da sua Transação Confidencial no node próprio deles.\n\nCaso essa informação não seja fornecida ao mediador ou agente de reembolsos você corre o risco de perder a disputa. Em todos os casos de disputa o recebedor de L-RADC tem 100% de responsabilidade em fornecer a prova criptográfica ao mediador ou agente de reembolsos.\n\nSe você não entendeu esses requisitos, por favor não negocie L-RADC na Bisq.
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.seed.info=Por favor, anote em um papel a data e as palavras-semente da carteira! Com essas informações, você poderá recuperar sua carteira à qualquer momento.\nA semente exibida é usada tanto para a carteira RADC quanto para a carteira BSQ.\n\nVocê deve anotá-las em uma folha de papel. Jamais anote as palavras em um arquivo no seu computador ou em seu e-mail.\n\nNote que a semente da carteira NÃO substitui um backup.\nPara fazer isso, você precisa fazer backup da pasta do Bisq na seção \"Conta/Backup\".\nA importação da semente da carteira só é recomendada em casos de emergência. O programa não funcionará corretamente se você não recuperá-lo através de um backup!
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.priceAlert.high.label=Avisar se o preço do RADC estiver acima de
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.priceAlert.low.label=Avisar se o preço do RADC estiver abaixo de
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.trade.message.msg.started=O comprador de RADC iniciou o pagarmento para a negociação com o ID {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.marketAlert.offerType.buy=Ofertas de compra (eu quero vender RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.marketAlert.offerType.sell=Ofertas de venda (eu quero comprar RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:account.notifications.marketAlert.trigger.info=Ao definir uma distância de preço, você só irá receber um alerta quando alguém publicar uma oferta que atinge (ou excede) os seus critérios. Por exemplo: você quer vender RADC, mas você só irá vender a um prêmio de 2% sobre o preço de mercado atual. Ao definir esse campo para 2%, você só irá receber alertas de ofertas cujos preços estão 2% (ou mais) acima do preço de mercado atual.
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.availableNonBsqBalance=Saldo não-BSQ disponível (RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Taxa em RADC do ofertante
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Taxa em RADC do aceitador
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.MIN_MAKER_FEE_RADC=Taxa mínima em RADC do ofertante
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.MIN_TAKER_FEE_RADC=Taxa mínima em RADC do aceitador
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.RECIPIENT_RADC_ADDRESS=Endereço RADC do destinatário
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.ARBITRATOR_FEE=Taxa de arbitragem em RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.param.MAX_TRADE_LIMIT=Limite máximo de negociação em RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Operador do nó de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Proprietário do endereço RADC de doação
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.wallet.send.sendBtcFunds=Enviar fundos não-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.wallet.send.btcAmount=Quantia em RADC (fundos não-BSQ)
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.wallet.send.receiverBtcAddress=Endereço RADC do destinatário
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.wallet.send.sendBtc=Enviar fundos RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.tx.withdrawnFromWallet=RADC retirado da carteira
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.proposal.create.missingMinerFeeFunds=Você não tem RADC suficiente para criar a transação da proposta. Todas as transações de BSQ exigem uma taxa de mineração em RADC.\nEm falta: {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.proposal.create.missingIssuanceFunds=Você não tem RADC suficiente para criar a transação da proposta. Todas as transações de BSQ exigem uma taxa de mineração em RADC, e as transações de emissão também exigem RADC pela quantia de BSQ solicitado ({0} satoshis/BSQ).\nEm falta: {1}
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.dashboard.avgPrice90=Média de 90 dias BSQ/RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.dashboard.avgPrice30=Média de 30 dias BSQ/RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_pt-br.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_pt-br.properties:contractWindow.btcAddresses=Endereço bitcoin do comprador de RADC / vendedor de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:contractWindow.onions=Endereço de rede comprador de RADC / vendendor de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:contractWindow.accountAge=Idade da conta do comprador de RADC / vendedor de RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:contractWindow.numDisputes=Nº de disputas comprador de RADC / vendedor de RADC:
core/src/main/resources/i18n/displayStrings_pt-br.properties:disputeSummaryWindow.payout.getsTradeAmount={0} RADC fica com o pagamento da negociação
core/src/main/resources/i18n/displayStrings_pt-br.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_pt-br.properties:emptyWalletWindow.bsq.btcBalance=Saldo de satoshis não-BSQ
core/src/main/resources/i18n/displayStrings_pt-br.properties:filterWindow.btcNode=Nós de Bitcoin filtrados (endereços + portas sep. por vírgula)
core/src/main/resources/i18n/displayStrings_pt-br.properties:filterWindow.preventPublicBtcNetwork=Prevenir uso da rede de Bitcoin pública
core/src/main/resources/i18n/displayStrings_pt-br.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_pt-br.properties:offerDetailsWindow.minBtcAmount=Quantia mín. em RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_pt-br.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_pt-br.properties:feeOptionWindow.info=Você pode optar por pagar a taxa de negociação em BSQ ou RADC. As taxas de negociação são reduzidas quando pagas com BSQ.
core/src/main/resources/i18n/displayStrings_pt-br.properties:feeOptionWindow.useRADC=Usar RADC
core/src/main/resources/i18n/displayStrings_pt-br.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_pt-br.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Você precisa esperar até ter pelo menos {0} conexões à rede Bitcoin.
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.insufficientBtcFundsForBsqTx=Você não possui fundos RADC suficientes para pagar a taxa de mineração para essa transação.\nPor favor, deposite RADC em sua carteira.\nFundos faltando: {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.btcChangeBelowDustException=Esta transação cria um troco menor do que o limite poeira (546 Satoshi) e seria rejeitada pela rede Bitcoin.\nVocê precisa adicionar a quantia poeira ao montante de envio para evitar gerar uma saída de poeira.\nA saída de poeira é {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.noBsqFundsForBtcFeePayment=Sua carteira BSQ não possui fundos suficientes para pagar a taxa de transação em BSQ.
core/src/main/resources/i18n/displayStrings_pt-br.properties:popup.warning.burnRADC=Esta transação não é possível, pois as taxas de mineração de {0} excederiam o montante a transferir de {1}. Aguarde até que as taxas de mineração estejam novamente baixas ou até você ter acumulado mais RADC para transferir.
core/src/main/resources/i18n/displayStrings_pt-br.properties:notification.trade.paymentStarted=O comprador RADC iniciou o pagamento
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_MAINNET=Mainnet do Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_TESTNET=Testnet do Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_REGTEST=Regtest do Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_DAO_TESTNET=Testnet da DAO do Bitcoin (descontinuada)
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_pt-br.properties:RADC_DAO_REGTEST=Regtest da DAO do Bitcoin
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.halCash.info=Ao usar o HalCash, o comprador de RADC precisa enviar ao vendedor de RADC o código HalCash através de uma mensagem de texto do seu telefone.\n\nPor favor, certifique-se de não exceder a quantia máxima que seu banco lhe permite enviar com o HalCash. O valor mínimo de saque é de 10 euros e valor máximo é de 600 EUR. Para saques repetidos é de 3000 euros por destinatário por dia e 6000 euros por destinatário por mês. Por favor confirme esses limites com seu banco para ter certeza de que eles usam os mesmos limites mencionados aqui.\n\nO valor de saque deve ser um múltiplo de 10 euros, pois você não pode sacar notas diferentes de uma ATM. Esse valor em RADC será ajustado na telas de criar e aceitar ofertas para que a quantia de EUR esteja correta. Você não pode usar o preço com base no mercado, pois o valor do EUR estaria mudando com a variação dos preços.\n\nEm caso de disputa, o comprador de RADC precisa fornecer a prova de que enviou o EUR.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_pt-br.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.toLarge=Quantia máx. permitida: {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.toSmall=Quantia mín. permitida: {0}
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.invalidAddress=O endereço está incorreto. Por favor, verifique o formato do endereço.
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.exceedsMaxTradeLimit=Seu limite de negociação é {0}.
core/src/main/resources/i18n/displayStrings_pt-br.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_fr.properties:shared.buyingRADCWith=achat RADC avec {0}
core/src/main/resources/i18n/displayStrings_fr.properties:shared.sellingRADCFor=vendre RADC pour {0}
core/src/main/resources/i18n/displayStrings_fr.properties:shared.buyingCurrency=achat {0} (vente RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:shared.sellingCurrency=vente {0} (achat RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_fr.properties:shared.TheRADCBuyer=L'acheteur de RADC
core/src/main/resources/i18n/displayStrings_fr.properties:shared.paymentDetails=RADC {0} détails du paiement
core/src/main/resources/i18n/displayStrings_fr.properties:shared.btcAmount=Montant en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.menu.buyBtc=Achat RADC
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.menu.sellBtc=Vendre des RADC
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcFeeRate=/ Taux des frais: {0} sat/vB
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo.initializing=Connexion au réseau Bitcoin en cours
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo.synchronizingWith=Synchronisation avec {0} au block: {1}/ {2}
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo.synchronizedWith=Synchronisé avec {0} au block {1}
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo.connectingTo=Se connecte à
core/src/main/resources/i18n/displayStrings_fr.properties:mainView.footer.btcInfo.connectionFailed=Échec de la connexion à
core/src/main/resources/i18n/displayStrings_fr.properties:market.spread.numberOfBuyOffersColumn=Achat RADC ({0})
core/src/main/resources/i18n/displayStrings_fr.properties:market.spread.numberOfSellOffersColumn=Vente RADC ({0})
core/src/main/resources/i18n/displayStrings_fr.properties:market.spread.totalAmountColumn=Total RADC ({0})
core/src/main/resources/i18n/displayStrings_fr.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_fr.properties:offerbook.deposit=Déposer RADC (%)
core/src/main/resources/i18n/displayStrings_fr.properties:createOffer.amount.prompt=Entrer le montant en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:createOffer.amountPriceBox.minAmountDescription=Montant minimum de RADC
core/src/main/resources/i18n/displayStrings_fr.properties:createOffer.tradeFee.descriptionRADCOnly=Frais de transaction
core/src/main/resources/i18n/displayStrings_fr.properties:takeOffer.amount.prompt=Entrez le montant en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:takeOffer.amountPriceBox.buy.amountDescription=Montant en RADC à vendre
core/src/main/resources/i18n/displayStrings_fr.properties:takeOffer.amountPriceBox.sell.amountDescription=Montant de RADC à acheter
core/src/main/resources/i18n/displayStrings_fr.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Le montant que vous avez saisi dépasse le nombre maximum de décimales  autorisées.\nLe montant a été défini à 4 décimales près.
core/src/main/resources/i18n/displayStrings_fr.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=La somme saisie va créer des dusts résultantes de la transaction pour le vendeur de RADC.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.refTextWarn=Important: Quand vous effectuez le paiement, laissez le champ \"raison du paiement\" vide. NE METTEZ PAS l'ID du trade ou n'importe quel autre texte, par exemple 'bitcoin', 'RADC' ou 'Bisq'. Vous êtes autorisé à discuter via le chat des trader si un autre \"raison du paiement\" est préférable pour vous deux.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.altcoin=Veuillez transférer à partir de votre portefeuille externe {0}.\n{1} au vendeur de RADC.\n\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.cash=Veuillez vous rendre dans une banque et payer {0} au vendeur de RADC.\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.cash.extra=CONDITIONS REQUISES: \nAprès avoir effectué le paiement veuillez écrire sur le reçu papier : PAS DE REMBOURSEMENT.\nPuis déchirer le en 2, prenez en une photo et envoyer le à l'adresse email du vendeur de RADC.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.moneyGram=Veuillez s''il vous plaît payer {0} au vendeur de RADC en utilisant MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.moneyGram.extra=CONDITIONS REQUISES:\nAprès avoir effectué le paiement envoyez le numéro d''autorisation et une photo du reçu par e-mail au vendeur de RADC.\nLe reçu doit faire clairement figurer le nom complet du vendeur, son pays, l''état et le montant. Le mail du vendeur est: {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.westernUnion=Veuillez s''il vous plaît payer {0} au vendeur de RADC en utilisant Western Union.\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.westernUnion.extra=CONDITIONS REQUISES:\nAprès avoir effectué le paiement envoyez le MTCN (numéro de suivi) et une photo du reçu par e-mail au vendeur de RADC.\nLe reçu doit faire clairement figurer le nom complet du vendeur, son pays, l''état et le montant. Le mail du vendeur est: {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.postal=Merci d''envoyer {0} par \"US Postal Money Order\" au vendeur de RADC.\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.cashByMail=Veuillez envoyer {0} en utilisant \"Cash by Mail\" au vendeur de RADC. Les instructions spécifiques sont dans le contrat du trade, ou si ce n'est pas clair, vous pouvez poser des questions via le chat des traders. Pour plus de détails sur Cash by Mail sur le Wiki de Bisq [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.pay=Veuillez payer {0} via la méthode de paiement spécifiée par le vendeur de RADC. Vous trouverez les informations du compte du vendeur sur l'écran suivant.\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.f2f=Veuillez s''il vous plaît contacter le vendeur de RADC via le contact fourni, et planifiez un rendez-vous pour effectuer le paiement {0}.\n\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Avez-vous envoyé le reçu papier au vendeur de RADC?
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Vous devez envoyez le numéro d''autorisation et une photo du reçu par email au vendeur de RADC.\nLe reçu doit faire clairement figurer le nom complet du vendeur, son pays, l''état, et le montant. Le mail du vendeur est: {0}.\n\nAvez-vous envoyé le numéro d''autorisation et le contrat au vendeur ?
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Vous devez envoyez le MTCN (numéro de suivi) et une photo du reçu par email au vendeur de RADC.\nLe reçu doit clairement faire figurer le nom complet du vendeur, son pays, l''état et le montant. Le mail du vendeur est: {0}.\n\nAvez-vous envoyé le MTCN et le contrat au vendeur ?
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Vous devez envoyez un message au format texte SMS avec le code HalCash ainsi que l''ID de la transaction ({0}) au vendeur de RADC.\nLe numéro de mobile du vendeur est {1}.\n\nAvez-vous envoyé le code au vendeur ?
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=Vous n'avez pas saisi l'ID de transaction et la clé de transaction.\n\nEn ne fournissant pas ces données le pair ne peut pas utiliser la fonctionnalité d'auto-confirmation pour envoyer le RADC dès que le XMR a été reçu.\nEn dehors de cela, Bisq requiert que l’émetteur de la transaction XMR soit capable de fournir cette information au médiateur ou à l'arbitre dans le cas d'un litige.\nPour plus de détails, consultez le wiki Bisq [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_seller.waitPayment.msg=La transaction de dépôt a été vérifiée au moins une fois sur la blockchain\nVous devez attendre que l''acheteur de RADC lance le {0} payment.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_seller.warn=L''acheteur de RADC n''a toujours pas effectué le paiement {0}.\nVeuillez attendre qu''il effectue celui-ci.\nSi la transaction n''est pas effectuée le {1}, un arbitre enquêtera.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step2_seller.openForDispute=L'acheteur de RADC n'a pas initié son paiement !\nLa période maximale autorisée pour ce trade est écoulée.\nVous pouvez attendre plus longtemps et accorder plus de temps à votre pair de trading ou contacter le médiateur pour obtenir de l'aide.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_buyer.wait.headline=Attendre la confirmation de paiement du vendeur RADC
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_buyer.wait.info=En attente de la confirmation du vendeur RADC pour la réception du paiement {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_buyer.warn.part2=Le vendeur de RADC n''a toujours pas confirmé votre paiement. . Veuillez vérifier {0} si l''envoi du paiement a bien fonctionné.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_buyer.openForDispute=Le vendeur de RADC n'a pas confirmé votre paiement! Le délai maximal alloué pour ce trade est écoulé. Vous pouvez attendre plus longtemps et accorder plus de temps à votre pair de trading ou effectuer une demande auprès du médiateur pour obtenir de l'aide.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.postal={0}Veuillez vérifier si vous avez reçu {1} avec \"US Postal Money Order\" de la part de l'acheteur de RADC.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.cashByMail={0}Veuillez vérifier si vous avez reçu {1} avec \"Cash by Mail\" de la part de l'acheteur de RADC
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.bank=Votre pair de trading a confirmé l'initialisation du {0} paiement.\n\nVeuillez vous rendre sur votre banque en ligne et vérifier si vous avez reçu {1} de la part de l'acheteur de RADC.
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.cash=Du fait que le paiement est réalisé via Cash Deposit l''acheteur de RADC doit inscrire \"NO REFUND\" sur le reçu papier, le déchirer en 2 et vous envoyer une photo par email.\n\nPour éviter un risque de rétrofacturation, ne confirmez que si vous recevez le mail et que vous êtes sûr que le reçu papier est valide.\nSi vous n''êtes pas sûr, {0}
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.moneyGram=L'acheteur doit vous envoyer le numéro d'autorisation et une photo du reçu par e-mail .\nLe reçu doit faire clairement figurer votre nom complet, votre pays, l'état et le montant. Veuillez s'il vous plaît vérifier que vous avez bien reçu par e-mail le numéro d'autorisation.\n\nAprès avoir fermé ce popup vous verrez le nom de l'acheteur de RADC et l'adresse où retirer l'argent depuis MoneyGram.\n\nN'accusez réception qu'après avoir retiré l'argent avec succès!
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.westernUnion=L'acheteur doit vous envoyer le MTCN (numéro de suivi) et une photo du reçu par e-mail .\nLe reçu doit faire clairement figurer votre nom complet, votre pays, l'état et le montant. Veuillez s'il vous plaît vérifier si vous avez reçu par e-mail le MTCN.\n\nAprès avoir fermé ce popup vous verrez le nom de l'acheteur de RADC et l'adresse où retirer l'argent depuis Western Union.\n\nN'accusez réception qu'après avoir retiré l'argent avec succès!
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.buyerStartedPayment=L''acheteur RADC a commencé le {0} paiement.\n{1}
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Veuillez noter que dès que vous aurez confirmé la réception, le montant verrouillé pour l'échange sera remis à l'acheteur de RADC et le dépôt de garantie vous sera remboursé.\n
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.step5_buyer.withdrawRADC=Retirer vos Bitcoins
core/src/main/resources/i18n/displayStrings_fr.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_fr.properties:funds.deposit.amount=Montant en RADC (optionnel)
core/src/main/resources/i18n/displayStrings_fr.properties:funds.tx.withdrawnFromBSQWallet=RADC retiré depuis le portefeuille BSQ
core/src/main/resources/i18n/displayStrings_fr.properties:funds.tx.dustAttackTx.popup=Cette transaction va envoyer un faible montant en RADC sur votre portefeuille ce qui pourrait constituer une tentative d'espionnage de la part de sociétés qui analyse la chaine.\n\nSi vous utilisez cette transaction de sortie des données dans le cadre d'une transaction représentant une dépense il sera alors possible de comprendre que vous êtes probablement aussi le propriétaire de l'autre adresse (coin merge).\n\nAfin de protéger votre vie privée, le portefeuille Bisq ne tient pas compte de ces "dust outputs" dans le cadre des transactions de vente et dans l'affichage de la balance. Vous pouvez définir une quantité seuil lorsqu'une "output" est considérée comme poussière dans les réglages.
core/src/main/resources/i18n/displayStrings_fr.properties:support.buyerAddress=Adresse de l'acheteur RADC
core/src/main/resources/i18n/displayStrings_fr.properties:support.sellerAddress=Adresse du vendeur RADC
core/src/main/resources/i18n/displayStrings_fr.properties:support.buyerOfferer=Acheteur RADC/Maker
core/src/main/resources/i18n/displayStrings_fr.properties:support.sellerOfferer=Vendeur RADC/Maker
core/src/main/resources/i18n/displayStrings_fr.properties:support.buyerTaker=Acheteur RADC/Taker
core/src/main/resources/i18n/displayStrings_fr.properties:support.sellerTaker=Vendeur RADC/Taker
core/src/main/resources/i18n/displayStrings_fr.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_fr.properties:setting.preferences.autoConfirmMaxTradeSize=Montant maximal du trade (RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.btcHeader=Réseau Bitcoin
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.btcNodesLabel=Utiliser des nœuds Bitcoin Core personnalisés
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.useTorForBtcJLabel=Utiliser Tor pour le réseau Bitcoin
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.warn.invalidBtcConfig=La connexion au réseau Bitcoin a échoué car votre configuration est invalide.\n\nVotre configuration a été réinitialisée afin d'utiliser les nœuds Bitcoin fournis à la place. Vous allez devoir relancer l'application.
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.localhostBtcNodeInfo=Informations complémentaires: Bisq cherche un noeud Bitcoin local au démarrage. S'il est trouvé, Bisq communiquera avec le réseau Bitcoin uniquement à travers ce nœud.
core/src/main/resources/i18n/displayStrings_fr.properties:settings.net.chainHeightLabel=Hauteur du dernier block RADC
core/src/main/resources/i18n/displayStrings_fr.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Ouvrir l'outil de portefeuille d'urgence pour RADC
core/src/main/resources/i18n/displayStrings_fr.properties:setting.info.msg=Lorsque vous vendez des RADC contre des XMR, vous pouvez utiliser la fonction de confirmation automatique pour vérifier que le montant correct de XMR a été envoyé à votre portefeuille afin que Bisq puisse automatiquement marquer l'échange comme terminé, ce qui rend les échanges plus rapides pour tout le monde.\n\nLa fonction de confirmation automatique vérifie que la transaction XMR  a été vérifiée par au moins 2 explorateur XMR en utilisant la clé de transaction privée fournie par l'expéditeur XMR. Par défaut, Bisq utilise des explorateur de nœuds gérés par des contributeurs Bisq, mais nous vous recommandons de gérer votre propre explorateur de nœud XMR pour une confidentialité et une sécurité maximale.\n\nVous pouvez également définir le montant maximum de RADC par transaction à confirmer automatiquement ainsi que le nombre de confirmations requises dans les paramètres.\n\nVous trouverez plus de détails (y compris la façon de configurer votre propre explorateur de nœud) sur le wiki Bisq [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_fr.properties:account.menu.walletInfo.balance.info=Ceci montre le solde du portefeuille interne en incluant les transactions non-confirmées.\nPour le RADC, le solde du portefeuille interne affiché ci-dessous devrait correspondre à la somme des soldes 'Disponibles' et 'Réservés' affichés en haut à droite de cette fenêtre.
core/src/main/resources/i18n/displayStrings_fr.properties:account.altcoin.popup.liquidbitcoin.msg=Le trading de L-RADC sur Bisq requière que vous comprenez les éléments suivants: \n\nLorsque vous recevez des L-RADC pour une transaction sur Bisq, vous ne pouvez pas utiliser l'application mobile Blockstream Green Wallet ou un portefeuille custodial/d'une plateforme d'échange. Vous devez uniquement recevoir des L-RADC dans le porte-monnaie Liquid Elements Core, ou dans un autre porte-monnaie L-RADC qui vous permet d'obtenir la blinding clé pour votre blinded adresse L-RADC .\n\nSi les informations requises ne sont pas fournies au médiateur ou au médiateur, le litige sera perdu. Dans tous les cas de litige, le destinataire du L-RADC  assume 100% de la charge de la responsabilité de fournir la preuve cryptographique au médiateur ou à l'agent de remboursement.\n\nSi vous ne comprenez pas ces exigences, n'échangez pas de L-RADC sur Bisq.
core/src/main/resources/i18n/displayStrings_fr.properties:account.seed.info=Veuillez noter les mots de la seed du portefeuille ainsi que la date! Vous pouvez récupérer votre portefeuille à tout moment avec les mots de la seed et la date.\nLes mêmes mots-clés de la seed sont utilisés pour les portefeuilles RADC et BSQ.\n\nVous devriez écrire les mots de la seed sur une feuille de papier. Ne les enregistrez pas sur votre ordinateur.\n\nVeuillez noter que les mots de la seed ne remplacent PAS une sauvegarde.\nVous devez créer une sauvegarde de l'intégralité du répertoire de l'application à partir de l'écran \"Compte/Sauvergarde\" pour restaurer correctement les données de l'application.\nL'importation de mots de la seed n'est recommandée qu'en cas d'urgence. L'application ne sera pas fonctionnelle sans une sauvegarde adéquate des fichiers et des clés de la base de données !
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.priceAlert.high.label=Me prévenir si le prix du RADC est supérieur à
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.priceAlert.low.label=Me prévenir si le prix du RADC est inférieur à
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.trade.message.msg.started=L''acheteur de RADC a initié le paiement pour la transaction avec ID {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.marketAlert.offerType.buy=Ordres d'achat (je veux vendre des RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.marketAlert.offerType.sell=Ordres de vente (je veux acheter des RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:account.notifications.marketAlert.trigger.info=Avec la définition d'une distance par rapport au prix, vous ne recevrez une alerte que lorsqu'un odre qui répondra (ou dépassera) vos exigences sera publié. Exemple : vous voulez vendre des RADC, mais vous ne vendrez qu'avec une prime de 2% par rapport au prix actuel du marché. En réglant ce champ à 2%, vous ne recevrez que des alertes pour les ordres dont les prix sont de 2% (ou plus) au dessus du prix actuel du marché.
core/src/main/resources/i18n/displayStrings_fr.properties:dao.availableNonBsqBalance=Solde disponible non-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADC maker fee
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADC taker fee
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.MIN_MAKER_FEE_RADC=Min. RADC maker fee
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.MIN_TAKER_FEE_RADC=Min. RADC taker fee
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.RECIPIENT_RADC_ADDRESS=Adresse de réception RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.ARBITRATOR_FEE=Frais d'arbitrage en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.param.MAX_TRADE_LIMIT=Montant d'échange max. en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Opérateur du nœud Bitcoin
core/src/main/resources/i18n/displayStrings_fr.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Propriétaire de l'adresse RADC de donation
core/src/main/resources/i18n/displayStrings_fr.properties:dao.wallet.send.sendBtcFunds=Envoyer des fonds non-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_fr.properties:dao.wallet.send.btcAmount=Montant en RADC (fonds non-BSQ)
core/src/main/resources/i18n/displayStrings_fr.properties:dao.wallet.send.receiverBtcAddress=Adresse RADC du destinataire
core/src/main/resources/i18n/displayStrings_fr.properties:dao.wallet.send.sendBtc=Envoyer des fonds en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.tx.withdrawnFromWallet=RADC prélevé sur le portefeuille
core/src/main/resources/i18n/displayStrings_fr.properties:dao.proposal.create.missingMinerFeeFunds=Vous ne disposez pas des fonds en RADC suffisants pour créer  cette demande de transaction. Toutes les transactions BSQ requièrent le paiement des frais RADC pour le minage.\nManquant: {0}
core/src/main/resources/i18n/displayStrings_fr.properties:dao.proposal.create.missingIssuanceFunds=Vous ne disposez pas de fonds RADC suffisants pour créer cette demande de transaction. Toutes les transactions BSQ exigent des frais pour le mineur en RADC, et la création d''une transaction exige également des frais en RADC d''un montant de ({0} Satoshis/BSQ).\nManquant: {1}
core/src/main/resources/i18n/displayStrings_fr.properties:dao.feeTx.issuanceProposal.confirm.details={0}frais: {1}\nRADC nécessaire pour l'émission des BSQ: {2} ({3} Satoshis/BSQ)\nFrais de minage: {4} ({5} Satoshis/byte)\nTransaction vsize: {6} vKb\n\nSi votre demande est approuvée, vous recevrez le montant que vous avez demandé, net des frais de proposition de 2 BSQ.\n\nÊtes-vous sûr de vouloir publier la transaction {7}?
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.dashboard.avgPrice90=Moyenne sur 90 jours du prix d'échange BSQ/RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.dashboard.avgPrice30=Moyenne sur 30 jours du prix d'échange BSQ/RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.dashboard.volumeBtc=Volume total de trade en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Prix moyen des transactions BSQ/RADC sur la période sélectionnée dans le graphique.
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Volume de trade en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.supply.bsqBtcPrice=Prix BSQ/RADC
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.supply.btcUsdPrice=Prix RADC/USD
core/src/main/resources/i18n/displayStrings_fr.properties:dao.factsAndFigures.supply.btcTradeFee=Frais de transaction RADC
core/src/main/resources/i18n/displayStrings_fr.properties:contractWindow.btcAddresses=Adresse Bitcoin RADC acheteur / vendeur RADC
core/src/main/resources/i18n/displayStrings_fr.properties:contractWindow.onions=Adresse réseau de l'acheteur de RADC / du vendeur de RADC
core/src/main/resources/i18n/displayStrings_fr.properties:contractWindow.accountAge=Âge du compte acheteur RADC / vendeur RADC
core/src/main/resources/i18n/displayStrings_fr.properties:contractWindow.numDisputes=Nombre de litiges de l'acheteur de RADC / du vendeur de RADC
core/src/main/resources/i18n/displayStrings_fr.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} obtient le montant du versement de la transaction
core/src/main/resources/i18n/displayStrings_fr.properties:disputeSummaryWindow.payout.getsAll=Paiement maximum en RADC {0}
core/src/main/resources/i18n/displayStrings_fr.properties:disputeSummaryWindow.close.msg=Le ticket a été fermé le {0}\n{1} Adresse du nœud: {2} \n\nRésumé:  \nID de transaction: {3} \nDevise: {4} \nMontant de la transaction: {5} \nMontant du paiement de l'acheteur RADC: {6} \nMontant du paiement du vendeur RADC: {7} \n\nRaison du litige: {8} \n\nSynthèse: {9} \n\n
core/src/main/resources/i18n/displayStrings_fr.properties:emptyWalletWindow.bsq.btcBalance=Solde en Satoshis non-BSQ
core/src/main/resources/i18n/displayStrings_fr.properties:filterWindow.btcNode=Nœuds Bitcoin filtrés (adresses séparées par une virgule + port)
core/src/main/resources/i18n/displayStrings_fr.properties:filterWindow.preventPublicBtcNetwork=Empêcher l'utilisation du réseau public Bitcoin
core/src/main/resources/i18n/displayStrings_fr.properties:filterWindow.btcFeeReceiverAddresses=Adresse de réception des frais RADC
core/src/main/resources/i18n/displayStrings_fr.properties:offerDetailsWindow.minBtcAmount=Montant RADC min.
core/src/main/resources/i18n/displayStrings_fr.properties:txDetailsWindow.btc.note=Vous avez envoyé du RADC.
core/src/main/resources/i18n/displayStrings_fr.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Somme de tous les frais de trade payés en RADC
core/src/main/resources/i18n/displayStrings_fr.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} du montant total du trade)
core/src/main/resources/i18n/displayStrings_fr.properties:feeOptionWindow.info=Vous pouvez choisir de payer les frais de transaction en BSQ ou en RADC. Si vous choisissez BSQ, vous bénéficierez de frais de transaction réduits.
core/src/main/resources/i18n/displayStrings_fr.properties:feeOptionWindow.useRADC=Utiliser RADC
core/src/main/resources/i18n/displayStrings_fr.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_fr.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Vous devez attendre d''avoir au minimum {0} connexions au réseau Bitcoin.
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.insufficientBtcFundsForBsqTx=Vous ne disposez pas de suffisamment de fonds RADC pour payer les frais du minage de cette transaction.\nVeuillez approvisionner votre portefeuille RADC.\nFonds manquants: {0}
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.btcChangeBelowDustException=Cette transaction crée une change output qui est inférieure à la dust limit (546 Satoshi) et serait rejetée par le réseau Bitcoin.\n\nVous devez ajouter la quantité de dust à votre montant envoyé pour éviter de générer une dust output.\n\nLa dust output est {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=Vous avez besoin de plus de BSQ pour effectuer cette transaction - les 5,46 BSQ restant dans le portefeuille ne seront pas utilisés pour payer les frais de transaction en raison des limites de dust   du protocole RADC.\n\nVous pouvez acheter plus de BSQ ou utiliser RADC pour payer les frais de transaction\n\nManque de fonds BSQ: {0}
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.noBsqFundsForBtcFeePayment=Votre portefeuille BSQ ne dispose pas de suffisamment de fonds pour payer les frais de transaction en BSQ.
core/src/main/resources/i18n/displayStrings_fr.properties:popup.warning.burnRADC=Cette transaction n''est pas possible, car les frais de minage de {0} dépasseraient le montant à transférer de {1}. Veuillez patienter jusqu''à ce que les frais de minage soient de nouveau bas ou jusqu''à ce que vous ayez accumulé plus de RADC à transférer.
core/src/main/resources/i18n/displayStrings_fr.properties:notification.trade.accepted=Votre ordre a été accepté par un RADC {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:notification.trade.paymentStarted=L'acheteur de RADC a initié le paiement.
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_MAINNET=Bitcoin Mainnet
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_TESTNET=Bitcoin Testnet
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_REGTEST=Bitcoin Regtest
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_DAO_TESTNET=Bitcoin DAO Testnet (obsolète)
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_fr.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_fr.properties:payment.makeOfferToUnsignedAccount.warning=Avec la récente montée du prix du RADC, soyez attentif au fait que vendre 0.01 RADC ou moins cause un risque plus élevé qu'avant.\n\nIl est hautement recommandé de:\n- faire des offres supérieures à 0.01 RADC, ainsi vous ne traiterez uniquement qu'avec des acheteurs signés/de confiance\n- Conserver toutes les offres de vente inférieure à 0.01 RADC avec une valeur d'environ 100 USD, car ce montant à (historiquement) découragé les scammers\n\nLes développeurs de Bisq travaillent sur des meilleurs moyens pour sécuriser le modèle de compte de paiement pour des trades inférieurs. Rejoignez la discussion ici: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_fr.properties:payment.takeOfferFromUnsignedAccount.warning=Avec la récente montée du prix du RADC, soyez attentif au fait que vendre 0.01 RADC ou moins cause un risque plus élevé qu'avant.\n\nIl est hautement recommandé de:\n- Accepter uniquement des offres d'acheteurs signés\n- Conserver toutes les offres de vente inférieure à 0.01 RADC avec une valeur d'environ 100 USD, car ce montant à (historiquement) découragé les scammers\n\nLes développeurs de Bisq travaillent sur des meilleurs moyens pour sécuriser le modèle de compte de paiement pour des trades inférieurs. Rejoignez la discussion ici: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_fr.properties:payment.moneyGram.info=Lors de l'utilisation de MoneyGram, l'acheteur de RADC doit envoyer le numéro d'autorisation et une photo du reçu par e-mail au vendeur de RADC. Le reçu doit clairement mentionner le nom complet du vendeur, le pays, la région et le montant. L’e-mail du vendeur sera donné à l'acheteur pendant le processus de transaction.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.westernUnion.info=Lors de l'utilisation de Western Union, l'acheteur RADC doit envoyer le MTCN (numéro de suivi) et une photo du reçu par e-mail au vendeur de RADC. Le reçu doit indiquer clairement le nom complet du vendeur, la ville, le pays et le montant. L'acheteur verra ensuite s'afficher l'email du vendeur pendant le processus de transaction.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.halCash.info=Lors de l'utilisation de HalCash, l'acheteur de RADC doit envoyer au vendeur de RADC le code HalCash par SMS depuis son téléphone portable.\n\nVeuillez vous assurer de ne pas dépasser le montant maximum que votre banque vous permet d'envoyer avec HalCash. Le montant minimum par retrait est de 10 EUR et le montant maximum est de 600 EUR. Pour les retraits récurrents, il est de 3000 EUR par destinataire par jour et 6000 EUR par destinataire par mois. Veuillez vérifier ces limites auprès de votre banque pour vous assurer qu'elles utilisent les mêmes limites que celles indiquées ici.\n\nLe montant du retrait doit être un multiple de 10 EUR car vous ne pouvez pas retirer d'autres montants à un distributeur automatique. Pendant les phases de create-offer et take-offer l'affichage de l'interface utilisateur ajustera le montant en RADC afin que le montant en euros soit correct. Vous ne pouvez pas utiliser le prix basé sur le marché, car le montant en euros varierait en fonction de l'évolution des prix.\n\nEn cas de litige, l'acheteur de RADC doit fournir la preuve qu'il a envoyé la somme en EUR.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.usPostalMoneyOrder.info=Pour échanger US Postal Money Orders (USPMO) sur Bisq, vous devez comprendre les termes suivants: \n\n- L'acheteur RADC doit écrire le nom du vendeur RADC dans les champs expéditeur et bénéficiaire, et prendre une photo à haute résolution de USPMO et de l'enveloppe avec une preuve de suivi avant l'envoi. \n\n- L'acheteur RADC doit envoyer USPMO avec la confirmation de livraison au vendeur RADC. \n\nSi une médiation est nécessaire, ou s'il y a un différend de transaction, vous devrez envoyer la photo avec le numéro USPMO, le numéro du bureau de poste et le montant de la transaction au médiateur Bisq ou à l'agent de remboursement afin qu'il puisse vérifier les détails sur le site web de la poste américaine. \n\nSi vous ne fournissez pas les données de transaction requises, vous perdrez directement le litige\n\nDans tous les cas de litige, l'expéditeur de l'USPMO assume à 100% la responsabilité lors de la fourniture de preuves / certification au médiateur ou à l'arbitre. \n\nSi vous ne comprenez pas ces exigences, veuillez ne pas échanger USPMO sur Bisq.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.cashByMail.info=Le trading en cash-by-mail (CBM) sur Bisq nécessite que vous compreniez ce qui suit:\n\n● L'acheteur de RADC doit emballer l'argent liquide dans un sac d'argent inviolable.\n● L'acheteur de RADC doit filmer ou prendre des photos haute résolution du processus d'emballage en espèces avec l'adresse et le numéro de suivi déjà apposé sur l'emballage.\n● L'acheteur de RADC doit envoyer le colis en espèces au vendeur RADC avec une confirmation de livraison et une assurance appropriée.\n● Le vendeur de RADC doit filmer l'ouverture du colis, en s'assurant que le numéro de suivi fourni par l'expéditeur est visible dans la vidéo.\n● Le maker de l'offre doit indiquer toutes les conditions particulières dans le champ «Informations supplémentaires» du compte de paiement.\n● Le preneur de l'offre accepte les conditions générales du maker en acceptant l'offre.\n\nLes transactions CBM imposent la responsabilité d'agir honnêtement pour les deux pairs.\n\n● Les transactions CBM ont des actions moins vérifiables que les autres transactions Fiat. Cela rend la gestion des litiges beaucoup plus difficile.\n● Essayez de résoudre les litiges directement avec votre pair en utilisant le chat de trade. C'est la voie la plus prometteuse pour résoudre tout litige CBM.\n● Les médiateurs peuvent examiner votre cas et faire une suggestion, mais il n'est PAS garanti qu'ils puissent vous aider.\n● Si un médiateur est engagé et si un des pair rejette la suggestion du médiateur, les fonds des deux pairs seront envoyés à une adresse de «don» Bisq [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], et le trade sera effectivement terminé.\n● Si un trader rejette une suggestion de médiation et ouvre un arbitrage, cela pourrait entraîner une perte à la fois des fonds de négociation et du dépôt.\n● Les arbitres prendront une décision sur la base des preuves qui leur auront été fournies. Par conséquent, veuillez suivre et rédiger un document sur les processus ci-dessus pour avoir des preuves en cas de litige. Pour les transactions Cash by Mail, la décision des arbitres est définitive.\n● Les demandes de remboursement de fonds perdus résultant de transactions Cash By Mail avec le Bisq DAO ne seront PAS prises en compte.\n\nPour être sûr de bien comprendre les exigences des transactions en espèces par courrier, veuillez consulter: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nSi vous ne comprenez pas ces exigences, n'échangez pas en utilisant CBM sur Bisq.
core/src/main/resources/i18n/displayStrings_fr.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_fr.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.fraction=L'entrée impliquera une valeur en bitcoin inférieure à 1 satoshi
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.toLarge=La saisie d''une valeur supérieure à {0} n''est pas autorisée.
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.toSmall=La saisie d''une valeur inférieure à {0} n''est pas autorisée.
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.invalidAddress=L''adresse n''est pas correcte. Veuillez vérifier le format de l''adresse.
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.exceedsMaxTradeLimit=Votre seuil maximum d''échange est {0}.
core/src/main/resources/i18n/displayStrings_fr.properties:validation.btc.invalidFormat=Format invalide pour une addresse Bitcoin.
core/src/main/resources/i18n/displayStrings_pl.properties:shared.buyingRADCWith=zakup RADC za {0}
core/src/main/resources/i18n/displayStrings_pl.properties:shared.sellingRADCFor=sprzedaż RADC za {0}
core/src/main/resources/i18n/displayStrings_pl.properties:shared.buyingCurrency=kupienie {0} (sprzedanie RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:shared.sellingCurrency=sprzedanie {0} (kupienie RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_pl.properties:shared.TheRADCBuyer=Kupiec RADC
core/src/main/resources/i18n/displayStrings_pl.properties:shared.paymentDetails=RADC {0} szczegóły płatności
core/src/main/resources/i18n/displayStrings_pl.properties:shared.btcAmount=Ilość RADC
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.menu.buyBtc=Kup RADC
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.menu.sellBtc=Sprzedaj RADC
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcFeeRate=Opłata transakcyjna: {0} sat/vB 
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo.initializing=Łączenie z siecią Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizacja z {0} blok: {1} / {2}
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo.synchronizedWith=Zsynchronizowane z {0} blok {1}
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo.connectingTo=Łączenie z
core/src/main/resources/i18n/displayStrings_pl.properties:mainView.footer.btcInfo.connectionFailed=Połączenie nie powiodło się z 
core/src/main/resources/i18n/displayStrings_pl.properties:market.spread.numberOfBuyOffersColumn=Kup RADC ({0})
core/src/main/resources/i18n/displayStrings_pl.properties:market.spread.numberOfSellOffersColumn=Sprzedaj RADC ({0})
core/src/main/resources/i18n/displayStrings_pl.properties:market.spread.totalAmountColumn=RADC w sumie ({0})
core/src/main/resources/i18n/displayStrings_pl.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_pl.properties:offerbook.deposit=Depozyt RADC(%)
core/src/main/resources/i18n/displayStrings_pl.properties:createOffer.amount.prompt=Wprowadź ilość w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:createOffer.amountPriceBox.amountDescription=Kwota RADC w {0}
core/src/main/resources/i18n/displayStrings_pl.properties:createOffer.amountPriceBox.minAmountDescription=Minimalna ilość RADC
core/src/main/resources/i18n/displayStrings_pl.properties:createOffer.tradeFee.descriptionRADCOnly=Opłata za dokonanie transakcji
core/src/main/resources/i18n/displayStrings_pl.properties:createOffer.buyBsq.popupMessage=Trading fees are paid to fund the Bisq DAO. Fees can be paid in BSQ or RADC.\n\nBSQ fees directly help fund Bisq's development, so Bisq encourages traders to use BSQ by offering a 50% discount on trading fees. This discount varies as the BSQ/RADC rate fluctuates. To maintain the 50% discount target, trading fees are updated every cycle as necessary.\n\nFor more about fees, see [HYPERLINK:https://bisq.wiki/Trading_fees]. For more about trading BSQ, see [HYPERLINK:https://bisq.wiki/Trading_BSQ]. For more about the Bisq DAO, see [HYPERLINK:https://bisq.wiki/Introduction_to_the_DAO#The_Bisq_DAO].
core/src/main/resources/i18n/displayStrings_pl.properties:takeOffer.amount.prompt=Wprowadź ilość w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:takeOffer.amountPriceBox.buy.amountDescription=Kwota RADC do sprzedaży
core/src/main/resources/i18n/displayStrings_pl.properties:takeOffer.amountPriceBox.sell.amountDescription=Kwota RADC do kupna
core/src/main/resources/i18n/displayStrings_pl.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Kwota jaką wprowadzono przekroczyła liczbę miejsc dziesiętnych.\nIlość została dostosowana do 4 miejsc po przecinku. 
core/src/main/resources/i18n/displayStrings_pl.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Ta kwota stworzyłaby resztę dust dla sprzedawcy RADC.
core/src/main/resources/i18n/displayStrings_pl.properties:bsqSwapOffer.feeHandling=Fee handling for BSQ swaps is different from normal Bisq trades.\nTo avoid additional transaction inputs for the trade fee or for the miner fee, we subtract the relevant fee from the expected transaction output. This is different for buyers and sellers:\n- RADC buyers have only BSQ inputs which include the BSQ trade fee and receive the RADC trade amount with the miner fee subtracted.\n- RADC sellers have only RADC inputs which include the RADC miner fee and receive the BSQ trade amount with the BSQ trade fee subtracted.\n\nTo learn more about BSQ swaps please see documentation [HYPERLINK:https://bisq.wiki/BSQ_swaps].
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.refTextWarn=Ważne: podczas dokonywania transakcji, zostaw pole \"powód płatności\" puste. NIE wpisuj ID transakcji lub cokolwiek związanego jak 'bitcoin', 'RADC' czy 'Bisq'. Możesz przedyskutować z partnerem w transakcji na czacie czy zastępczy \"powód płatności\" odpowiada wam obu. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.altcoin=Przenieś ze swojego zewnętrzenego portfela {0} \n{1} dla sprzedawcy RADC.\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.cash=Wpłać w banku {0} dla sprzedawcy RADC.\n\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.cash.extra=WAŻNY WARUNEK:\nPo zakończeniu transakcji napisz na pokwitowaniu rachunku: BRAK REFUNDACJI.\nPotem rozerwij dokument na 2 części, zrób zdjęcie i wyślij to na adres email sprzedawcy RADC. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.moneyGram=Zapłać {0} sprzedawcy RADC używając MoneyGram.\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.moneyGram.extra=WAŻNY WARUNEK:\nPo zakończeniu transakcji wyślij numer potwierdzenia i zdjęcie pokwitowania sprzedawcy RADC na email.\nPokwitowanie musi wyraźnie pokazać pełne imię i nazwisko sprzedawcy, kraj, stan i kwotę. Adres email sprzedawcy to: {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.westernUnion=Zapłać {0} sprzedawcy RADC używając Western Union. \n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.westernUnion.extra=WAŻNY WARUNEK:\nPo zakończeniu transakcji wyślij MTCN(numer referencyjny) oraz zdjęcie pokwitowania na email sprzedawcy RADC.\nPokwitowanie musi wyraźnie pokazać pełne imię i nazwisko sprzedawcy, kraj, stan i kwotę. Adres email sprzedawcy to: {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.postal=Wyślij {0} przez \"US przekaz pocztowy\" sprzedawcy RADC.\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.cashByMail=Wyślij {0} przez \"Cash by Mail\" sprzedawcy RADC. Szczegóły instrukcji są w kontrakcie transakcji, jeśli jest coś niejasne możesz zadać pytania poprzez czat. Więcej szczegółów na temat Cash by Mail na wiki Bisq [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.pay=Zapłać {0} przez wyszczególnioną metodę płatności sprzedawcy RADC. Szczegóły konta sprzedawcy znajdziesz w następnym oknie.\n\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.f2f=Skontaktuj się ze sprzedawcą RADC poprzez zapewnione dane i zaaranżuj spotkanie aby zapłacić {0}.\n\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Czy wysłałeś pokwitowanie do sprzedawcy RADC ?
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Pamiętaj:\nMusisz napisać na pokwitowaniu: BRAK REFUNDACJI.\nNastępnie rozerwij je na 2 części, zrób zdjęcie i wyślij je do sprzedawcy RADC na adres email.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Musisz wysłać numer potwierdzenia i zdjęcie pokwitowania na email sprzedawcy RADC.\nPokwitowanie musi wyraźnie pokazać pełne imię i nazwisko sprzedawcy, kraj, stan i kwotę. Adres email sprzedawcy to: {0}.\n\nCzy wysłałeś numer potwierdzenie i kontrakt sprzedawcy ?
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Musisz wysłać MTCN (numer śledzący) i zdjęcie potwierdzenia na email do sprzedawcy RADC.\nPotwierdzenie musi wyraźnie pokazywać pełne imię sprzedającego, miasto, kraj i kwotę. Email sprzedawcy to: {0}.\n\nCzy wysłałeś MTCN i skontaktowałeś się z sprzedawcą ?
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Musisz wysłać wiadmość tekstową z kodem HalCash jak również ID transakcji ({0}) sprzedawcy RADC.\nNumer telefonu komórkowy sprzedawcy to {1}.\n\nCzy wysłałeś kod sprzedawcy ?
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=Nie wpisałeś ID ani klucza transakcji.\n\nPoprzez niedostarczenie tych danych druga strona transakcji nie może automatycznie potwierdzić funkcji aby wysłać RADC jak tylko XMR zostanie otrzymany.\nPoza tym, Bisq wymaga aby wysyłający XMR był w stanie zapewnić tą informację dla mediatora lub arbitera w przypadku sporu.\nSprawdź więcej szczegółów na wiki Bisq [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_seller.waitPayment.msg=Transakcja z depozytem ma przynajmniej jedno potwierdzenie na blockchainie.\nMusisz zaczekać aż nabywca RADC rozpocznie {0} płatność.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_seller.warn=Nabywca RADC wciąż nie dokonał {0} płatności.\nMusisz zaczekać aż druga strona rozpocznie płatność.\nJeśli handel nie zostanie ukończony do {1} , wtedy rozjemca będzie to sprawdzał.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step2_seller.openForDispute=Nabywca RADC wciż nie rozpoczął płatności. \nMaksymalny czas na tą transakcję upłynął.\nMożesz zaczekać dłużej i dać drugiej stronie więcej czasu lub skontaktować się z mediatorem po pomoc.
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_buyer.wait.headline=Zaczekaj aż sprzedawca RADC potwierdzi płatność. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_buyer.wait.info=Oczekiwanie na potwierdzenie otrzymania płatności {0} przez sprzedawcę RADC 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_buyer.warn.part2=Sprzedawca RADC nie potwierdził płatności. Sprawdź {0} czy płatność została wysłana. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_buyer.openForDispute=Sprzedawca RADC nie potwierdził płatności. Maksymalny okres czasu transakcji upłynął. Możesz zaczekać dłużej i dać drugiej stronie więcej czasu lub skontaktować się z mediatorem po pomoc. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.postal={0}  Sprawdź czy otrzymałeś {1} z \"US przekaz pocztowy\" od kupującego RADC. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.cashByMail={0} Sprawdź czy otrzymałeś {1} z \"Pieniądze przez email\" od kupującego RADC. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.bank=Twój partner w transakcji potwierdził, że rozpoczął {0} płatność. \n\nSprawdź na stronie banku czy otrzymałeś {1} od kupującego RADC. 
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.cash=Ponieważ płatność jest wykonywana przez Depozyt Gotówkowy kupujący RADC musi napisać \"BRAK REFUNDACJI\" na pokwitowaniu, rozerwać to na 2 części i wysłać zdjęcie na Twój email.\n\nAby uniknąć obciążenia zwrotnego, potwierdź tylko jeśli otrzymałeś email i jeśli jesteś pewien że pokwitowanie jest prawidłowe. \nJeśli nie jesteś pewien, {0}
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.moneyGram=Kupujący musi Ci wysłać numer autoryzacyjny i zdjęcie pokwitowania na email.\nPokwitowanie musi wyraźnie pokazywać Twoje imię i nazwisko, kraj, stan i kwotę. Sprawdź Twój email czy otrzymałeś numer autoryzacyjny.\n\nPo zamknięciu tego okna zobaczysz nazwę sprzedawcy RADC i adres do odebrania pieniędzy z MoneyGram.\n\nPotwierdź tylko jeśli z sukcesem odebrałeś pieniądze !
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.westernUnion=Kupujący wysłał Ci MTCN(numer śledzący) i zdjęcie potwierdzenia na email.\nPotwierdzenie musi wyraźnie pokazywać Twoje pełne imię, miasto, kraj i kwotę. Prosimy o sprawdzenie emaila czy otrzymałeś MTCN.\n\nPo zamknięciu tego okna zobaczysz imię kupującego RADC i adres do odebrana od Western Union.\n\nPotwierdź tylko jeśli z sukcesem odebrałeś pieniądze!
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Zwróć uwagę, że jak tylko potwierdzisz otrzymanie płatności, zablokowana kwota transakcji będzie wydana kupującemu RADC i depozyt bezpieczeństwa zostanie zwrócony. \n\n
core/src/main/resources/i18n/displayStrings_pl.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_pl.properties:funds.deposit.amount=Kwota w RADC (opcjonalnie)
core/src/main/resources/i18n/displayStrings_pl.properties:funds.tx.withdrawnFromBSQWallet=RADC wypłacony z portfela BSQ
core/src/main/resources/i18n/displayStrings_pl.properties:funds.tx.dustAttackTx.popup=Ta transakcja wysyła bardzo małą ilość RADC do Twojego portfela i może być próbą ze strony firm analizujących blockchain aby szpiegować Twój portfel.\n\nJeśli użyjesz tego UTXO te firmy mogą dowiedzieć się że jesteś właścicielem drugiego UTXO (coin merge).\n\nAby chronić Twoją prywatność portfel Bisq ignoruje dust. Możesz zobaczyć kwotę progową kiedy dane UTXO jest uważane za dust w ustawieniach.
core/src/main/resources/i18n/displayStrings_pl.properties:funds.tx.bsqSwapBuy=Bought RADC:
core/src/main/resources/i18n/displayStrings_pl.properties:funds.tx.bsqSwapSell=Sold RADC:
core/src/main/resources/i18n/displayStrings_pl.properties:support.buyerAddress=Adres RADC kupującego
core/src/main/resources/i18n/displayStrings_pl.properties:support.sellerAddress=Adres RADC sprzedawcy
core/src/main/resources/i18n/displayStrings_pl.properties:support.buyerOfferer=Kupujący RADC
core/src/main/resources/i18n/displayStrings_pl.properties:support.sellerOfferer=Sprzedający RADC
core/src/main/resources/i18n/displayStrings_pl.properties:support.buyerTaker=Kupujący RADC
core/src/main/resources/i18n/displayStrings_pl.properties:support.sellerTaker=Sprzedający RADC
core/src/main/resources/i18n/displayStrings_pl.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_pl.properties:setting.preferences.autoConfirmMaxTradeSize=Maksymalna kwota transakcji (RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.btcHeader=Sieć Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.btcNodesLabel=Użyj indywidualnych węzłów Bitcoin Core
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.useTorForBtcJLabel=Użyj Tor do sieci Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.warn.invalidBtcConfig=Łączenie się z siecią Bitcoin nie powiodło się gdyż Twoja konfiguracja nie jest poprawna.\n\nTwoja konfiguracja została zresetowana aby użyć zapewnionych węzłów Bitcoin. Musisz zrestartować aplikację.
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.localhostBtcNodeInfo=Informacja wprowadzająca: Bisq szuka lokalnego węzła podczas startu aplikacji. Jeśli jest on znaleziony, Bisq komunikuje się z siecią Bitcoin wyłącznie przez ten węzeł.
core/src/main/resources/i18n/displayStrings_pl.properties:settings.net.chainHeightLabel=Ostatnia wysokość bloków RADC
core/src/main/resources/i18n/displayStrings_pl.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Otwórz narzędzie portfela w sytuacjach nadzwyczajnych dla RADC
core/src/main/resources/i18n/displayStrings_pl.properties:setting.info.msg=Podczas sprzedaży RADC za XMR może użyć funkcji automatycznego potwierdzenia aby zweryfikować czy odpowiednia ilość XMR została wysłana do Twojego portfela tak aby Bisq mógł automatycznie potwierdzić że transakcja została ukończona pomyślnie, tak że wszystkie transakcje XMR będą szybsze.\n\nAutomatyczne potwierdzenie sprawdza transakcję XMR na przynajmniej 2 przeglądarkach węzłów używając prywatnego klucza transakcji dostarczonego przez sprzedawcę XMR. Domyślnie Bisq używa przeglądarki węzłów dostarczonych przez twórców Bisq, ale zalecamy otworzenie własnej przeglądarki węzłów XMR aby zmaksymalizować prywatności i bezpieczeństwa. \n\nMożesz również ustalić maksymalną ilość RADC na jedną transakcję do automatycznego potwierdzenia jak też liczbę wymaganych potwierdzeń w zakładce Ustawienia.\n\nDowiedz się więcej ( wliczając to jak przygotować swoją własną przeglądarkę węzłów ) z dokumentacji Bisq [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_pl.properties:account.menu.walletInfo.balance.info=Pokazuje to saldo portfela wewnętrzego wliczając transakcje niepotwierdzone.\nDla RADC saldo portfela wewnętrzego pokazane poniżej powinno się równać sumie 'Dostępe" i 'Zarezerwowane' pokazane w prawym górnym rogu okna.
core/src/main/resources/i18n/displayStrings_pl.properties:account.altcoin.popup.liquidbitcoin.msg=Aby dokonać transakcji L-RADC na Bisq musisz potwierdzić i zgodzić się na następujące warunki:\n\nPodczas otrzymywania L-RADC w transakcji na Bisq nie możesz użyć aplikacji mobilnej portfela Blockstream Green lub portfel na giełdzie. Możesz otrzymać L-RADC jedynie w portfelu Liquid Elements Core lub innym portfelu L-RADC który pozwala abyś otrzymał ślepy klucz dla Twojego ślepego adresu L-RADC.\n\nW przypadku kiedy konieczna jest mediacja lub jeśli nastąpi spór musisz ujawnić ślepy klucz do Twojego adresu odbiorczego L-RADC mediatorowi Bisq lub agentowi refundacji tak aby mogli oni zweryfikować szczegóły poufności transakcji i ich własnym węźle Elements Core.\n\nNie stosując się do powyższych informacji oraz do zapewnienia odpowiednich danych mediatorowi lub agentowi refundacji będzie skutowało przegraniem sporu. W przypadku wszystkich spraw sporu otrzymujący L-RADC ponowsi 100 % odpowiedzialności w zapewnieniu kryptograficznego dowodu mediatorowi lub agentowi refundacji.\n\nJeśli nie rozumiesz tych wymagań nie handluj L-RADC na Bisq. 
core/src/main/resources/i18n/displayStrings_pl.properties:account.password.info=Z hasłem ochronnym będziesz potrzebował wpisać hasło przy starcie aplikacji, podczas wypłaty RADC z portfela oraz przy odzyskiwaniu portfela z seed.
core/src/main/resources/i18n/displayStrings_pl.properties:account.seed.info=Prosimy o zapisanie zarówno seed jak i daty! Możesz odzyskać swój portfel w każdym momencie z tymi słowami i datą.\nTe same seed są użyte do portfela RADC i BSQ. \n\nPowinieneś zapisać seed na kartce papieru. Nie zapisuj ich na komputerze.\n\nZwróć uwagę że seed NIE są zamiennikiem kopii bezpieczeństwa. \nMusisz stworzyć kopię bezpieczeństwa dla całego katalogu aplikacji z okna \"Konto/Kopia zapasowa\" aby odzyskać dane aplikacji. \nImportowanie seed jest zalecane jedynie w nagłych przypadkach. Aplikacja nie będzie funkcjonować poprawnie bez odpowiedniej kopii zapasowej danych i kluczy!
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.priceAlert.high.label=Powiadom jeśli cena RADC jest powyżej
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.priceAlert.low.label=Powiadom jeśli cena RADC jest poniżej
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.trade.message.msg.started=Kupujący RADC rozpoczął płatność dla transakcji ID {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.marketAlert.offerType.buy=Oferty kupna ( Chcę sprzedać RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.marketAlert.offerType.sell=Oferty sprzedaży ( Chcę kupić RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:account.notifications.marketAlert.trigger.info=Z ustawieniem różnicy cen w ofertach, otrzymasz jedynie powiadomienia gdy oferta która spełnia (lub przekracza) Twoje kryteria jest opublikowana. Przykład: Chcesz sprzedać RADC, ale chcesz tylko sprzedać gdy cena jest wyższa o 2% do obecnej ceny rynkowej. Ustawienie 2% zapewni że otrzymasz powiadomienia o ofertach z ceną która jest 2% (lub więcej) większa niż obecna cena rynkowa.
core/src/main/resources/i18n/displayStrings_pl.properties:dao.availableNonBsqBalance=Dostępne w saldzie poza BSQ (RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Opłata sprzedającego RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Opłata kupującego RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.MIN_MAKER_FEE_RADC=Minimalna opłata sprzedającego RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.MIN_TAKER_FEE_RADC=Minimalna opłata kupującego RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.RECIPIENT_RADC_ADDRESS=Adres odbiorcy RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.ARBITRATOR_FEE=Opłata arbitera w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.param.MAX_TRADE_LIMIT=Maksymalna wartość transakcji w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Operator węzła Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Właściciel adresu darowizny RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.wallet.send.sendBtcFunds=Wyślij fundusze które nie są BSQ(RADC)
core/src/main/resources/i18n/displayStrings_pl.properties:dao.wallet.send.btcAmount=Kwota w BSQ (fundusze nie będące BSQ)
core/src/main/resources/i18n/displayStrings_pl.properties:dao.wallet.send.receiverBtcAddress=Adres RADC odbiorcy
core/src/main/resources/i18n/displayStrings_pl.properties:dao.wallet.send.sendBtc=Wyślij fundusze RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.tx.withdrawnFromWallet=RADC wypłacone z portfela
core/src/main/resources/i18n/displayStrings_pl.properties:dao.proposal.create.missingMinerFeeFunds=Nie masz wystarczających funduszy RADC do stworzenia transakcji propozycji. Wszystkie transakcje BSQ wymagają opłaty eksploatacyjnej w RADC. \nBrakujące: {0}
core/src/main/resources/i18n/displayStrings_pl.properties:dao.proposal.create.missingIssuanceFunds=Nie masz wystarczających funduszy RADC do stworzenia transakcji propozycji. Wszystkie transakcje BSQ wymagają opłaty eksploatacyjnej w RADC, transakcje emisji wymagają RADC dla wymaganych kwot BSQ ({0} Satoshi/BSQ).\nBrakujące: {1}
core/src/main/resources/i18n/displayStrings_pl.properties:dao.feeTx.issuanceProposal.confirm.details={0} opłata: {1}\nWymagane RADC do emisji BSQ: {2} ({3} Satoshi/BSQ)\nOpłata eksploatacyjna: {4} ({5} Satoshi/vbyte)\nWielkość opłaty: {6} vKb\n\nJeśli Twój wniosek zostanie zatwierdzony, otrzymasz kwotę o którą prosiłeś w sieci 2 opłat propozycji BSQ. \n\nCzy jesteś pewien że chcesz opublikować {7} transakcję ?
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.dashboard.avgPrice90=Średnia cena rynkowa BSQ/RADC przez okres 90 dni
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.dashboard.avgPrice30=Średnia cena rynkowa BSQ/RADC przez okres 30 dni
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.dashboard.volumeBtc=Całkowity wolumen transakcji w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Średnia cena rynkowa BSQ/RADC z wybranego na wykresie okresu czasowego
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Wolumen transakcji w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.supply.bsqBtcPrice=Cena BSQ/RADC
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.supply.btcUsdPrice=Cena RADC/USD
core/src/main/resources/i18n/displayStrings_pl.properties:dao.factsAndFigures.supply.btcTradeFee=Opłata za dokonanie transakcji RADC
core/src/main/resources/i18n/displayStrings_pl.properties:contractWindow.btcAddresses=Adres kupującego RADC / Sprzedawcy RADC
core/src/main/resources/i18n/displayStrings_pl.properties:contractWindow.onions=Adres sieci kupującego RADC / Sprzedawcy RADC
core/src/main/resources/i18n/displayStrings_pl.properties:contractWindow.accountAge=Wiek konta kupującego RADC / Sprzedawcy RADC
core/src/main/resources/i18n/displayStrings_pl.properties:contractWindow.numDisputes=Liczba sporów kupującego RADC / Sprzedawcy RADC
core/src/main/resources/i18n/displayStrings_pl.properties:disputeSummaryWindow.payout.getsCompensation=RADC {0} gets trade amount plus compensation
core/src/main/resources/i18n/displayStrings_pl.properties:disputeSummaryWindow.payout.getsPenalty=RADC {0} gets trade amount minus penalty
core/src/main/resources/i18n/displayStrings_pl.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} otrzyma wypłatę w transakcji
core/src/main/resources/i18n/displayStrings_pl.properties:disputeSummaryWindow.payout.getsAll=Maksymalna wypłata RADC {0}
core/src/main/resources/i18n/displayStrings_pl.properties:disputeSummaryWindow.close.msg=Sprawa zamknięta {0}\n{1} adres węzła: {2}\n\nPodsumowanie:\nID transakcji: {3}\nWaluta: {4}\nKwota transakcji: {5}\nKwota wypłaty kupującemu RADC: {6}\nKwota wypłaty sprzedawcy RADC: {7}\n\nPowód sporu: {8}\n\nNotatki podsumowujące:\n{9}\n
core/src/main/resources/i18n/displayStrings_pl.properties:emptyWalletWindow.bsq.btcBalance=Saldo środków które nie są BSQ
core/src/main/resources/i18n/displayStrings_pl.properties:filterWindow.btcNode=Przefiltrowane po węzłach Bitcoin ( z przecinkiem jako separatorem adresów + port)
core/src/main/resources/i18n/displayStrings_pl.properties:filterWindow.preventPublicBtcNetwork=Zapobiegnij użyciu publicznej sieci Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:filterWindow.btcFeeReceiverAddresses=Adresy odbiorców opłaty RADC
core/src/main/resources/i18n/displayStrings_pl.properties:filterWindow.makerFeeBtc=Min. RADC maker fee (e.g. 0.001)
core/src/main/resources/i18n/displayStrings_pl.properties:filterWindow.takerFeeBtc=Min. RADC taker fee (e.g. 0.007)
core/src/main/resources/i18n/displayStrings_pl.properties:offerDetailsWindow.minBtcAmount=Minimalna kwota RADC
core/src/main/resources/i18n/displayStrings_pl.properties:txDetailsWindow.btc.note=Wysłałeś RADC.
core/src/main/resources/i18n/displayStrings_pl.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Podsumowanie wszystkich opłat za dokonanie transakcji w RADC
core/src/main/resources/i18n/displayStrings_pl.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} całkowitej kwoty transakcji)
core/src/main/resources/i18n/displayStrings_pl.properties:feeOptionWindow.useRADC=Użyj RADC
core/src/main/resources/i18n/displayStrings_pl.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_pl.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Musisz zaczekać aż będziesz mieć przynajmniej {0} połączeń z siecią Bitcoin.
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.insufficientBtcFundsForBsqTx=Nie masz wystarczających środków RADC aby zapłacić opłatę eksploatacyjną dla tej transakcji. \nProsimy o zasilenie Twojego portfela RADC.\nBrakujące fundusze: {0}
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.btcChangeBelowDustException=Ta transakcja tworzy resztę która jest poniżej limitu dust (546 Satoshi) i zostanie odrzucona przez sieć Bitcoin.\n\nMusisz dodać kwotę dust do kwoty którą wysyłasz aby uniknąć tworzenia dust.\n\nDust {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=Będziesz potrzebował więcej BSQ aby dokonać tej transakcji -- ostatnie 5.46 BSQ w twoim portfelu nie mogą być użyte aby opłacić dokoanie transakcji z powodu limitu dust w protokole Bitcoin.\n\nMożesz albo kupić więcej BSQ albo zapłacić za transakcję w RADC.\n\nBrakujące fundusze: {0}
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.noBsqFundsForBtcFeePayment=Twój portfel BSQ nie ma wystarczających funduszy aby dokonać opłaty za transakcję w BSQ.
core/src/main/resources/i18n/displayStrings_pl.properties:popup.warning.burnRADC=Ta transakcja nie jest możliwa do zrealizowania, gdyż opłaty eksploatacyjne {0} przekroczyły by kwotę transakcji {1}. Prosimy zaczekać aż opłaty eksploatacyjne zmniejszą się lub do czasu gdy będziesz miał więcej RADC do dokonania transakcji.
core/src/main/resources/i18n/displayStrings_pl.properties:notification.trade.accepted=Twoja oferta została zaakceptowana przez RADC {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:notification.trade.paymentStarted=Kupujący RADC rozpoczął płatność.
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_MAINNET=główną siecią Bitcoin 
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_TESTNET=Sieć testowa Bitcoin
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_REGTEST=Sieć Bitcoina Regtest
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_DAO_TESTNET=Sieć testowa DAO Bitconia (schyłkowa)
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_DAO_BETANET=Sieć DAO Betanet (główna sieć Bitcoina)
core/src/main/resources/i18n/displayStrings_pl.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_pl.properties:payment.makeOfferToUnsignedAccount.warning=Z powodu ostatniego wzrostu ceny RADC, bądź ostrożny podczas sprzedawania 0.01 RADC lub mniej, stwarza to większe ryzyko niż wcześniej.\n\nJest wysoce rekomendowane aby:\n-tworzyć oferty >0.01 RADC, tak że masz do czynienia jedynie z podpisanymi/zaufanymi kupcami\n-Twórz oferty aby sprzedać <0.01 RADC około ~100 USD w wartości, jako że ta wartość (historycznie) zniechęcała oszustów\n\nTwórcy Bisq pracują nad lepszymi sposobami aby zabezpieczyć transakcje dla małych kwot. Dołącz do dyskusji tutaj:\n[HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pl.properties:payment.takeOfferFromUnsignedAccount.warning=Z powodu ostatniego wzrostu ceny RADC, bądź ostrożny podczas sprzedawania 0.01 RADC lub mniej, stwarza to większe ryzyko niż wcześniej.\n\nJest wysoce rekomendowane aby:\n-Zgadzać się na oferty jedynie od podpisanych kupców\n-Z niezaufanymi kupcami handlować jedynie na około ~100 USD w wartości, jako że ta wartość (historycznie) zniechęcała oszustów\n\nTwórcy Bisq pracują nad lepszymi sposobami aby zabezpieczyć transakcje dla małych kwot. Dołącz do dyskusji tutaj:\n[HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_pl.properties:payment.moneyGram.info=Podczas używania MoneyGram kupujący RADC musi wysłać numer autoryzacyjny i zdjęcie recepty na email sprzedającego RADC. Potwierdzenie musi wyraźnie pokazywać pełne imię sprzedającego, kraj, stan i kwotę. Email sprzedawcy zostanie wyświetlony kupującemu podczas procesu transakcji.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.westernUnion.info=Podczas używania Western Union kupujący RADC musi wysłać MTCN (numer naprowadzający) i zdjęcie recepty na email sprzedawcy RADC. Potwierdzenie musi wyraźnie pokazywać pełnę imię sprzedającego, miasto, kraj i kwotę. Email sprzedawcy zostanie wyświetlony kupującego podczas procesu transakcji.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.halCash.info=Podczas używania HalCash kupujący RADC musi wysłać sprzedawcy RADC kod HalCash poprzez wiadomość z telefonu.\n\nProsimy o upewnienie się aby nie przekraczać maksymalnej kwoty na która pozwala wysłać bank z HalCash. Minimalna kwota wypłaty to 10 EUR i maksymalna kwota to 600 EUR. Dla powtarzalnych wypłat jest to 3000 EUR na odbiorcę na dzień i 6000 EUR na odbiorcę na miesiąc. Prosimy o sprawdzenie tych limitów z Twoim bankiem aby być pewnym że te same limity są wskazane tutaj.\n\nKwota wypłaty musi być wielokrotnością 10 EUR jako że innych kwot nie możesz wypłacić z bankomatu. Interfejs użytkownika w oknie stworzenia oferty i wzięcia oferty dostosuje kwotę RADC tak że kwota w EUR jest poprawna. Nie możesz użyć ceny rynkowej jako że kwota w EUR będzie się zmieniać wraz ze zmianą ceny.\n\nW razie sporu kupujący RADC musi zapewnić dowód że wysłał on EUR.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Users should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Users should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.tikkie.info.buyer=Please request a payment link from the RADC Seller in trader chat. Once the RADC Seller has sent you a payment link that matches the correct amount for the trade please proceed to payment.\n\nWhen the RADC Seller requests a Tikkie payment the maximum they can ask to receive is €750 per Tikkie request. If the trade is over that amount the RADC Seller will have to sent multiple requests to total the trade amount. The maximum you can request in a day is €2,500.\n\nEach bank however may establish its own limits, within these limits, for its clients.\n\nUsers should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.tikkie.info.seller=Please send a payment link to the RADC Seller in trader chat. Once the RADC Buyer has sent you payment please check their IBAN detail match the details they have in Bisq.\n\nWhen the RADC Seller requests a Tikkie payment the maximum they can ask to receive is €750 per Tikkie request. If the trade is over that amount the RADC Seller will have to sent multiple requests to total the trade amount. The maximum you can request in a day is €2,500.\n\nEach bank however may establish its own limits, within these limits, for its clients.\n\nUsers should also be aware of account limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.achTransfer.info.buyer=Please ensure you are aware of what it will cost you to send an ACH transfer.\n\nWhen paying, send only to the payment details provided in the RADC Seller's account using ACH transfer.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.achTransfer.info.seller=Please ensure you are aware of what it will cost you to receive an ACH transfer.\n\nWhen receiving payment, please check that it is received from the RADC Buyer's account as an ACH transfer.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.domesticWire.info.buyer=Please ensure you are aware of what it will cost you to send a wire transfer.\n\nWhen paying, send only to the payment details provided in the RADC Seller's account.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.domesticWire.info.seller=Please ensure you are aware of what it will cost you to receive a wire transfer.\n\nWhen receiving payment, please check that it is received from the RADC Buyer's account.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.transferwiseUsd.info.account=Due US banking regulation, sending and receiving USD payments has more restrictions than most other currencies. For this reason USD was not added to Bisq TransferWise payment method.\n\nThe TransferWise-USD payment method allows Bisq users to trade in USD.\n\nAnyone with a Wise, formally TransferWise account, can add TransferWise-USD as a payment method in Bisq. This will allow them to buy and sell RADC with USD.\n\nWhen trading on Bisq RADC Buyers should not use any reference for reason for payment. If reason for payment is required they should only use the full name of the TransferWise-USD account owner.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.transferwiseUsd.info.buyer=Please send payment only to the email address in the RADC Seller's Bisq TransferWise-USD account.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.transferwiseUsd.info.seller=Please check that the payment received matches the RADC Buyer's name of the TransferWise-USD account in Bisq.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.usPostalMoneyOrder.info=Transakcje z użyciem zamówień przekazów pocztowych US(USPMO) na Bisq wymagają zrozumienia tego co następuje:\n\n-Kupujący RADC musi napisać imię sprzedawcy RADC na zarówno Sprzedawcy i Kupującego polach & zrobić wysokiej jakości zdjęcie z USPMO i kopertą z dowodem śledzenia przed wysłaniem.\n-Kupujący TC musi wysłać USPMO sprzedawcy RADC z potwierdzeniem dostarczenia.\n\nW przypadku jeśli mediacja jest konieczna, lub jeśli jest spór transakcyjny, musisz wysłać zdjęcie do mediatora Bisq lub agenta refundacyjnego, razem z numerem seryjnym USPMO, numerem oddziału pocztowego, kwotą w USD, tak że mogą oni zweryfikować szczegóły na stronie oddziału pocztowego.\n\nNieprzekazanie wymaganych informacji dla mediatora lub arbitera może skutkować utratą sporu.\n\nWe wszystkich sprawach sporów wysyłający USPMO przyjmuje 100 % odpowiedzialności w zapewnieniu dowodu/potwierdzenia dla mediatora lub arbitera.\n\nJeśli nie rozumiesz tych wymagań, nie dokonuj transakcji z użyciem USPMO na Bisq.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.cashByMail.info=Transakcje z użyciem gotówka-przez-email (CBM) na Bisq wymagają zrozumienia tego co następuje:\n\n● Kupujący RADC powinien umieścić gotówkę w torbie zabezpieczającej, umożliwiającej łatwe stwierdzenie naruszenia.\n● Kupujący RADC powinien sfilmować lub zrobić wysokiej jakości zdjęcia gotówki podczas procesu pakowania z adresem & numerem śledzącym już przypisanym do paczki.\n● Kupujący RADC powinien wysłać pieniądze w kopercie do sprzedawcy RADC wraz z potwierdzeniem dostarczenia i odpowiednim ubezpieczeniem.\n● Sprzedawca RADC powinien sfilmować otworzenie paczki, upewniając się że numer śledzący zapewniony przez wysyłającego jest widoczny na video.\n● Twórca oferty musi dodać wszystkie specjalne warunki w polu 'Dodatkowe informacje' na koncie płatności.\n● Osoba kupująca ofertę zgadza się tym samym na warunki ustalone przez sprzedającego. \n\nTransakcja CBM daje równy ciężar obu stronom transakcji aby działały uczciwie.\n\n● Transakcje CBM mają mniejsze możliwości weryfikacyjne niż inne transakcje. Sprawia to że rozwiązania sporów są znacznie trudniejsze.\n● Staraj sie rozwiązać spór bezpośrednio z z drugą stroną transakcji używając czatu. Jest to najbardziej obiecująca droga aby rozwiązać problemy z CBM.\n● Mediatorzy mogą rozważyć sprawę i dać sugęstię, ale NIE ma gwarancji że uda się im pomóc.\n● Jeśli mediator jest zaangażowany, jeśli obie strony odrzucą propozycję mediatora, obu stron transakcji fundusze zostaną wysłane na adres 'darowizn' Bisq [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], i transakcja zostanie uznana za zakończoną.\n● Jeśli jedna strona transakcji odrzuci propozycję mediatora i poprosi o arbitera, może to skutować utratą zarówno kwoty transakcji jak i depozytu.\n● Arbiter podejmie decyzję na podstawie zgromadzonych dowodów. Dlatego prosimy o przestrzeganie zasad i udokumentowanie procesu aby mieć dowód w przypadku sporu. Dla CBM decyzja arbitera jest ostateczna.\n● Prośba o zwrot jakichkolwiek zagubionych funduszy z powodu CBM do DAO Bisq NIE zostanie uznana.\n\nAby upewnić się że rozumiesz zasady transakcji cash-by-mail sprawdź: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nJeśli nie rozumiesz tych wymagań, nie dokonuj transakcji z użyciem CBM na Bisq.
core/src/main/resources/i18n/displayStrings_pl.properties:payment.f2f.info=Transakcje 'Face to Face' mają inne zasady i inne ryzyka niż transakcje online.\n\nGłówne różnice to:\n●Obie strony transakcji musza wymienić informacje na temat miejsca spotkania i czasu używając dostępnych danych kontaktowych.\n●Obie strony muszą przynieść swoje laptopy i potwierdzić wysłanie transakcji i jej otrzymanie na miejscu spotkania.\n●Jeśli twórca ma specjalne warunki i zasady musi je wpisać w polu konta 'Dodatkowe informacje'/\n●Zgadzając się na tą ofertę odbiorca zgadza się na warunki i zasady zapisane przez Twórcę oferty.\n●W przypadku sporu mediator lub arbiter nie mogą za bardzo pomóc jako że zwykle jest trudno znaleść bezsporny dowód tego co się stało podczas spotkania. W takich przypadkach fundusze RADC mogą zostać zablokowane na zawsze lub do czasu aż obie strony transakcji dojdą do porozumienia.\n\nAby być pewnym że rozumiesz różnice transakcji 'Face to Face' prosimy o przeczytanie instrukcji i zaleceń na: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_pl.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.fraction=Dana wejściowa będzie skutkowała wartością bitcoina mniejszą niż 1 satoshi
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.toLarge=Wejście większe niż {0} nie jest dozwolone.
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.toSmall=Wejście mniejsze niż {0} nie jest dozwolone.
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.invalidAddress=Adres nie jest poprawny. Prosimy o sprawdzenie formatu adresu.
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.exceedsMaxTradeLimit=Twój limit transakcji to {0}.
core/src/main/resources/i18n/displayStrings_pl.properties:validation.btc.invalidFormat=Nieprawidłowy format dla adresu Bitcoin.
core/src/main/resources/i18n/displayStrings_pl.properties:news.bsqSwap.description=BSQ swaps is a new trade protocol for atomically swapping BSQ and RADC in a single transaction.\n\nThis saves miner fees, allows instant trades, removes counterparty risk, and does not require mediation or arbitration support. No account setup is required either.\n\nSee more about BSQ swaps in documentation [HYPERLINK:https://bisq.wiki/BSQ_swaps].
core/src/main/resources/i18n/displayStrings_it.properties:shared.buyingRADCWith=acquistando RADC con {0}
core/src/main/resources/i18n/displayStrings_it.properties:shared.sellingRADCFor=vendendo RADC per {0}
core/src/main/resources/i18n/displayStrings_it.properties:shared.buyingCurrency=comprando {0} (vendendo RADC)
core/src/main/resources/i18n/displayStrings_it.properties:shared.sellingCurrency=vendendo {0} (comprando RADC)
core/src/main/resources/i18n/displayStrings_it.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_it.properties:shared.TheRADCBuyer=L'acquirente di RADC
core/src/main/resources/i18n/displayStrings_it.properties:shared.paymentDetails=Dettagli pagamento RADC {0}:
core/src/main/resources/i18n/displayStrings_it.properties:shared.btcAmount=Importo RADC
core/src/main/resources/i18n/displayStrings_it.properties:mainView.menu.buyBtc=Compra RADC
core/src/main/resources/i18n/displayStrings_it.properties:mainView.menu.sellBtc=Vendi RADC
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo.initializing=Connessione alla rete Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo.connectingTo=Connessione a
core/src/main/resources/i18n/displayStrings_it.properties:mainView.footer.btcInfo.connectionFailed=Connessione fallita
core/src/main/resources/i18n/displayStrings_it.properties:market.spread.numberOfBuyOffersColumn=Acquista RADC ({0})
core/src/main/resources/i18n/displayStrings_it.properties:market.spread.numberOfSellOffersColumn=Vendi RADC ({0})
core/src/main/resources/i18n/displayStrings_it.properties:market.spread.totalAmountColumn=Totale RADC ({0})
core/src/main/resources/i18n/displayStrings_it.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_it.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_it.properties:createOffer.amount.prompt=Inserisci quantità in RADC
core/src/main/resources/i18n/displayStrings_it.properties:createOffer.amountPriceBox.amountDescription=Quantità di RADC a {0}
core/src/main/resources/i18n/displayStrings_it.properties:createOffer.amountPriceBox.minAmountDescription=Quantità minima di RADC
core/src/main/resources/i18n/displayStrings_it.properties:createOffer.tradeFee.descriptionRADCOnly=Commissione di scambio
core/src/main/resources/i18n/displayStrings_it.properties:takeOffer.amount.prompt=Inserisci importo in RADC
core/src/main/resources/i18n/displayStrings_it.properties:takeOffer.amountPriceBox.buy.amountDescription=Importo di RADC da vendere
core/src/main/resources/i18n/displayStrings_it.properties:takeOffer.amountPriceBox.sell.amountDescription=Importo di RADC da acquistare
core/src/main/resources/i18n/displayStrings_it.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=L'importo che hai inserito supera il numero di decimali permessi.\nL'importo è stato regolato a 4 decimali.
core/src/main/resources/i18n/displayStrings_it.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Questo importo inserito andrà a creare un resto di basso valore per il venditore di RADC.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.altcoin=Trasferisci dal tuo portafoglio esterno {0}\n{1} al venditore RADC.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.cash=Vai in banca e paga {0} al venditore RADC.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.cash.extra=REQUISITI IMPORTANTI:\nDopo aver effettuato il pagamento scrivi sulla ricevuta cartacea: NESSUN RIMBORSO.\nQuindi strappalo in 2 parti, fai una foto e inviala all'indirizzo e-mail del venditore RADC.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.moneyGram=Si prega di pagare {0} al venditore RADC utilizzando MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.moneyGram.extra=REQUISITO IMPORTANTE:\nDopo aver effettuato il pagamento, invia il numero di autorizzazione e una foto della ricevuta via e-mail al venditore RADC.\nLa ricevuta deve mostrare chiaramente il nome completo, il paese, lo stato e l'importo del venditore. L'email del venditore è: {0}.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.westernUnion=Si prega di pagare {0} al venditore RADC utilizzando Western Union.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.westernUnion.extra=REQUISITO IMPORTANTE:\nDopo aver effettuato il pagamento, invia l'MTCN (numero di tracciamento) e una foto della ricevuta via e-mail al venditore RADC.\nLa ricevuta deve mostrare chiaramente il nome completo, la città, il paese e l'importo del venditore. L'email del venditore è: {0}.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.postal=Invia {0} tramite \"Vaglia Postale Statunitense\" al venditore RADC.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.f2f=Contatta il venditore RADC tramite il contatto fornito e organizza un incontro per pagare {0}.\n\n
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Hai inviato la ricevuta cartacea al venditore RADC?
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Ricorda:\nDevi scrivere sulla ricevuta cartacea: NESSUN RIMBORSO.\nQuindi strappala in 2 parti, fai una foto e inviala all'indirizzo e-mail del venditore RADC.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=È necessario inviare il numero di Autorizzazione e una foto della ricevuta via e-mail al venditore RADC.\nLa ricevuta deve indicare chiaramente il nome completo, il paese, lo stato e l'importo del venditore. L'email del venditore è: {0}.\n\nHai inviato il numero di Autorizzazione e il contratto al venditore?
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Devi inviare l'MTCN (numero di tracciamento) e una foto della ricevuta via e-mail al venditore RADC.\nLa ricevuta deve indicare chiaramente il nome completo, la città, il paese e l'importo del venditore. L'email del venditore è: {0}.\n\nHai inviato l'MTCN e la ricevuta al venditore?
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.halCashInfo.msg=È necessario inviare un messaggio di testo con il codice HalCash e l'ID dello scambio ({0}) al venditore RADC.\nIl numero di cellulare del venditore è {1}.\n\nHai inviato il codice al venditore?
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_seller.waitPayment.msg=La transazione di deposito necessita di almeno una conferma blockchain.\nDevi attendere fino a quando l'acquirente RADC invia il pagamento {0}.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_seller.warn=L'acquirente RADC non ha ancora effettuato il pagamento {0}.\nDevi aspettare fino a quando non invia il pagamento.\nSe lo scambio non sarà completato il {1}, l'arbitro comincierà ad indagare.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step2_seller.openForDispute=L'acquirente RADC non ha ancora inviato il pagamento!\nIl periodo massimo consentito per lo scambio è trascorso.\nPuoi aspettare più a lungo e dare più tempo al partner di scambio oppure puoi contattare il mediatore per ricevere assistenza.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_buyer.wait.headline=Attendi la conferma del pagamento del venditore RADC
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_buyer.wait.info=In attesa della conferma del venditore RADC per la ricezione del pagamento {0}.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_buyer.warn.part2=Il venditore RADC non ha ancora confermato il pagamento. Controlla {0} se l'invio del pagamento è andato a buon fine.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_buyer.openForDispute=Il venditore RADC non ha confermato il tuo pagamento! Il max. periodo per lo scambio è trascorso. Puoi aspettare più a lungo e dare più tempo al peer di trading o richiedere assistenza al mediatore.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.cash=Poiché il pagamento viene effettuato tramite deposito in contanti, l'acquirente RADC deve scrivere \"NESSUN RIMBORSO\" sulla ricevuta cartacea, strapparlo in 2 parti e inviarti una foto via e-mail.\n\nPer evitare il rischio di storno, conferma solamente se hai ricevuto l'e-mail e se sei sicuro che la ricevuta cartacea sia valida.\nSe non sei sicuro, {0}
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.moneyGram=L'acquirente deve inviarti il numero di autorizzazione e una foto della ricevuta via e-mail.\nLa ricevuta deve mostrare chiaramente il tuo nome completo, il paese, lo stato e l'importo. Controlla nella tua e-mail se hai ricevuto il numero di autorizzazione.\n\nDopo aver chiuso il popup, vedrai il nome e l'indirizzo dell'acquirente RADC per effettuare il ritiro dell'importo da MoneyGram.\n\nConferma la ricevuta solo dopo aver ricevuto con successo i soldi!
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.westernUnion=L'acquirente deve inviarti l'MTCN (numero di tracciamento) e una foto della ricevuta via e-mail.\nLa ricevuta deve mostrare chiaramente il tuo nome completo, la città, il paese e l'importo. Controlla nella tua e-mail se hai ricevuto l'MTCN.\n\nDopo aver chiuso il popup, vedrai il nome e l'indirizzo dell'acquirente RADC per effettuare il ritiro dell'importo da Western Union.\n\nConferma la ricevuta solo dopo aver ricevuto con successo i soldi!
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.buyerStartedPayment=L'acquirente RADC ha avviato il pagamento {0}.\n{1}
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Tieni presente che non appena avrai confermato la ricevuta, l'importo commerciale bloccato verrà rilasciato all'acquirente RADC e il deposito cauzionale verrà rimborsato.
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.step5_buyer.withdrawRADC=Preleva i tuoi bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_it.properties:funds.deposit.amount=Importo in RADC (facoltativo)
core/src/main/resources/i18n/displayStrings_it.properties:funds.tx.withdrawnFromBSQWallet=RADC prelevati dal portafoglio BSQ
core/src/main/resources/i18n/displayStrings_it.properties:funds.tx.dustAttackTx.popup=Questa transazione sta inviando un importo RADC molto piccolo al tuo portafoglio e potrebbe essere un tentativo da parte delle società di chain analysis per spiare il tuo portafoglio.\n\nSe usi quell'output della transazione in una transazione di spesa, scopriranno che probabilmente sei anche il proprietario dell'altro indirizzo (combinazione di monete).\n\nPer proteggere la tua privacy, il portafoglio Bisq ignora tali output di polvere a fini di spesa e nella visualizzazione del saldo. È possibile impostare la soglia al di sotto della quale un output è considerato polvere.\n 
core/src/main/resources/i18n/displayStrings_it.properties:support.buyerAddress=Indirizzo RADC dell'acquirente
core/src/main/resources/i18n/displayStrings_it.properties:support.sellerAddress=Indirizzo RADC del venditore
core/src/main/resources/i18n/displayStrings_it.properties:support.buyerOfferer=Acquirente/Maker RADC
core/src/main/resources/i18n/displayStrings_it.properties:support.sellerOfferer=Venditore/Maker RADC
core/src/main/resources/i18n/displayStrings_it.properties:support.buyerTaker=Acquirente/Taker RADC
core/src/main/resources/i18n/displayStrings_it.properties:support.sellerTaker=Venditore/Taker RADC
core/src/main/resources/i18n/displayStrings_it.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_it.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.btcHeader=Network Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.btcNodesLabel=Usa nodi Bitcoin Core personalizzati
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.useTorForBtcJLabel=Usa Tor per la rete Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.warn.invalidBtcConfig=Connessione alla rete Bitcoin non riuscita perché la configurazione non è valida.\n\nLa tua configurazione è stata ripristinata per utilizzare invece i nodi Bitcoin forniti. Dovrai riavviare l'applicazione.
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.localhostBtcNodeInfo=Informazioni di base: Bisq cerca un nodo Bitcoin locale all'avvio. Se viene trovato, Bisq comunicherà con la rete Bitcoin esclusivamente attraverso di esso.
core/src/main/resources/i18n/displayStrings_it.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_it.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Apri lo strumento portafoglio di emergenza per il portafoglio RADC
core/src/main/resources/i18n/displayStrings_it.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_it.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_it.properties:account.altcoin.popup.liquidbitcoin.msg=Il trading di L-RADC su Bisq richiede la comprensione di quanto segue:\n\nQuando ricevi L-RADC per uno scambio su Bisq, non puoi utilizzare l'applicazione mobile Blockstream Green Wallet o un portafoglio di custodia/scambio. Devi ricevere L-RADC solo nel portafoglio Liquid Elements Core o in un altro portafoglio L-RADC che ti consenta di ottenere la chiave per il tuo indirizzo L-RADC.\n\nNel caso in cui sia necessaria la mediazione o in caso di disputa nello scambio, è necessario divulgare la chiave di ricezione per il proprio indirizzo L-RADC al mediatore Bisq o all'agente di rimborso in modo che possano verificare i dettagli della propria Transazione riservata sul proprio full node Elements Core.\n\nLa mancata fornitura delle informazioni richieste dal mediatore o dall'agente di rimborso comporterà la perdita della disputa. In tutti i casi di disputa, il ricevente L-RADC si assume al 100% l'onere della responsabilità nel fornire prove crittografiche al mediatore o all'agente di rimborso.\n\nSe non comprendi i sopracitati requisiti, non scambiare L-RADC su Bisq.
core/src/main/resources/i18n/displayStrings_it.properties:account.seed.info=Si prega di scrivere sia le parole del seed del portafoglio che la data! Puoi recuperare il tuo portafoglio in qualsiasi momento con le parole del seed e la data.\nLe stesse parole del seed vengono utilizzate per il portafoglio RADC e BSQ.\n\nDovresti scrivere le parole del seed su un foglio di carta. Non salvarli sul tuo computer.\n\nSi noti che le parole del seed NON sostituiscono un backup.\nÈ necessario creare un backup dell'intera directory dell'applicazione dalla schermata \"Account/Backup\" per ripristinare lo stato e i dati dell'applicazione.\nL'importazione delle parole del seed è consigliata solo in casi di emergenza. L'applicazione non funzionerà senza un corretto backup dei file del database e delle chiavi del seed!
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.priceAlert.high.label=Notifica se il prezzo RADC è superiore
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.priceAlert.low.label=Notifica se il prezzo RADC è inferiore
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.trade.message.msg.started=L'acquirente RADC ha avviato il pagamento per lo scambio con ID {0}.
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.marketAlert.offerType.buy=Acquista offerte (voglio vendere RADC)
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.marketAlert.offerType.sell=Offerte di vendita (Voglio comprare RADC)
core/src/main/resources/i18n/displayStrings_it.properties:account.notifications.marketAlert.trigger.info=Con una distanza di prezzo impostata, riceverai un avviso solo quando viene pubblicata un'offerta che soddisfa (o supera) i tuoi requisiti. Esempio: vuoi vendere RADC, ma venderai solo con un premio del 2% dal prezzo di mercato attuale. Se si imposta questo campo su 2%, si riceveranno avvisi solo per offerte con prezzi superiori del 2% (o più) dal prezzo di mercato corrente.\n 
core/src/main/resources/i18n/displayStrings_it.properties:dao.availableNonBsqBalance=Saldo disponibile non-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Commissione maker RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Commissione taker RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.MIN_MAKER_FEE_RADC=Commissione in RADC minima per il maker
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.MIN_TAKER_FEE_RADC=Commissione in BSQ minima per il taker
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.RECIPIENT_RADC_ADDRESS=Indirizzo RADC del destinatario
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.ARBITRATOR_FEE=Commissione arbitrale in RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.param.MAX_TRADE_LIMIT=Limite di scambio massimo in RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Operatore nodo Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Proprietario dell'indirizzo di donazione RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.wallet.send.sendBtcFunds=Invia fondi non BSQ (RADC)
core/src/main/resources/i18n/displayStrings_it.properties:dao.wallet.send.btcAmount=Importo in RADC (fondi non BSQ)
core/src/main/resources/i18n/displayStrings_it.properties:dao.wallet.send.receiverBtcAddress=Indirizzo RADC del destinatario
core/src/main/resources/i18n/displayStrings_it.properties:dao.wallet.send.sendBtc=Invia fondi RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.tx.withdrawnFromWallet=RADC prelevati dal portafoglio
core/src/main/resources/i18n/displayStrings_it.properties:dao.proposal.create.missingMinerFeeFunds=Non hai fondi RADC sufficienti per creare la transazione di proposta. Tutte le transazioni BSQ richiedono una commissione di mining in RADC.\nMancante: {0}
core/src/main/resources/i18n/displayStrings_it.properties:dao.proposal.create.missingIssuanceFunds=Non hai fondi RADC sufficienti per creare la transazione di proposta. Tutte le transazioni BSQ richiedono una commissione di mining in RADC e anche le transazioni di emissione richiedono RADC per l'importo BSQ richiesto ({0} Satoshi/BSQ).\nMancante: {1}
core/src/main/resources/i18n/displayStrings_it.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.dashboard.avgPrice90=Prezzo di scambio medio BSQ/RADC di 90 giorni
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.dashboard.avgPrice30=Prezzo di scambio medio BSQ/RADC di 30 giorni
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_it.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_it.properties:contractWindow.btcAddresses=Indirizzo Bitcoin acquirente RADC / venditore RADC
core/src/main/resources/i18n/displayStrings_it.properties:contractWindow.onions=Indirizzo di rete acquirente RADC / venditore RADC
core/src/main/resources/i18n/displayStrings_it.properties:contractWindow.accountAge=Età account acquirente RADC / venditore RADC
core/src/main/resources/i18n/displayStrings_it.properties:contractWindow.numDisputes=Numero di controversie acquirente RADC / venditore RADC
core/src/main/resources/i18n/displayStrings_it.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} ottiene il pagamento dell'importo commerciale
core/src/main/resources/i18n/displayStrings_it.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_it.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_it.properties:emptyWalletWindow.bsq.btcBalance=Saldo di satoshi non-BSQ
core/src/main/resources/i18n/displayStrings_it.properties:filterWindow.btcNode=Nodi Bitcoin filtrati (indirizzo + porta separati con una virgola)
core/src/main/resources/i18n/displayStrings_it.properties:filterWindow.preventPublicBtcNetwork=Impedisci l'utilizzo della rete pubblica Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_it.properties:offerDetailsWindow.minBtcAmount=Importo RADC minimo
core/src/main/resources/i18n/displayStrings_it.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_it.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_it.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_it.properties:feeOptionWindow.info=Puoi scegliere di pagare la commissione commerciale in BSQ o in RADC. Se scegli BSQ approfitti della commissione commerciale scontata.
core/src/main/resources/i18n/displayStrings_it.properties:feeOptionWindow.useRADC=Usa RADC
core/src/main/resources/i18n/displayStrings_it.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_it.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Devi aspettare fino a quando non hai almeno {0} connessioni alla rete Bitcoin.
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.insufficientBtcFundsForBsqTx=Non hai fondi RADC sufficienti per pagare la commissione di mining per quella transazione.\nPer favore finanzia il tuo portafoglio RADC.\nFondi mancanti: {0}
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.btcChangeBelowDustException=Questa transazione crea un output di cambio che è al di sotto del limite di polvere (546 Satoshi) e verrebbe rifiutato dalla rete Bitcoin.\n\nÈ necessario aggiungere la quantità di polvere alla quantità di invio per evitare di generare un output di polvere.\n\nL'output della polvere è {0}.
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.noBsqFundsForBtcFeePayment=Il tuo portafoglio BSQ non ha fondi sufficienti per pagare la commissione commerciale in BSQ.
core/src/main/resources/i18n/displayStrings_it.properties:popup.warning.burnRADC=Questa transazione non è possibile, poiché le commissioni di mining di {0} supererebbero l'importo da trasferire di {1}. Attendi fino a quando le commissioni di mining non saranno nuovamente basse o fino a quando non avrai accumulato più RADC da trasferire.
core/src/main/resources/i18n/displayStrings_it.properties:notification.trade.accepted=La tua offerta è stata accettata da un RADC {0}.
core/src/main/resources/i18n/displayStrings_it.properties:notification.trade.paymentStarted=L'acquirente RADC ha avviato il pagamento.
core/src/main/resources/i18n/displayStrings_it.properties:RADC_MAINNET=Mainnet Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:RADC_TESTNET=Testnet Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:RADC_REGTEST=Regtest Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:RADC_DAO_TESTNET=Testnet DAO Bitcoin (deprecata)
core/src/main/resources/i18n/displayStrings_it.properties:RADC_DAO_BETANET=Betanet Bisq DAO (Mainnet Bitcoin)
core/src/main/resources/i18n/displayStrings_it.properties:RADC_DAO_REGTEST=Regtest DAO Bitcoin
core/src/main/resources/i18n/displayStrings_it.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_it.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_it.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_it.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_it.properties:payment.halCash.info=Quando utilizza HalCash, l'acquirente RADC deve inviare al venditore RADC il codice HalCash tramite un messaggio di testo dal proprio telefono cellulare.\n\nAssicurati di non superare l'importo massimo che la tua banca ti consente di inviare con HalCash. L'importo minimo per prelievo è di 10 EURO, l'importo massimo è di 600 EURO. Per prelievi ripetuti è di 3000 EURO per destinatario al giorno e 6000 EURO per destintario al mese. Verifica i limiti con la tua banca per accertarti che utilizzino gli stessi limiti indicati qui.\n\nL'importo del prelievo deve essere un multiplo di 10 EURO in quanto non è possibile prelevare altri importi da un bancomat. L'interfaccia utente nella schermata di creazione offerta e accettazione offerta modificherà l'importo RADC in modo che l'importo in EURO sia corretto. Non è possibile utilizzare il prezzo di mercato poiché l'importo in EURO cambierebbe al variare dei prezzi.\n\nIn caso di controversia, l'acquirente RADC deve fornire la prova di aver inviato gli EURO.
core/src/main/resources/i18n/displayStrings_it.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_it.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_it.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_it.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_it.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_it.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_it.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_it.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_it.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_it.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_it.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_it.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_it.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_it.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_it.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_it.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_it.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.toLarge=L'immissione maggiore di {0} non è consentita.
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.toSmall=L'immissione inferiore a {0} non è consentita.
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.invalidAddress=L'indirizzo non è corretto Si prega di controllare il formato dell'indirizzo.
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.exceedsMaxTradeLimit=Il tuo limite commerciale è {0}.
core/src/main/resources/i18n/displayStrings_it.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_fa.properties:shared.buyingRADCWith=خرید بیتکوین با {0}
core/src/main/resources/i18n/displayStrings_fa.properties:shared.sellingRADCFor=فروش بیتکوین با {0}
core/src/main/resources/i18n/displayStrings_fa.properties:shared.RADCMinMax=بیتکوین (حداقل - حداکثر)
core/src/main/resources/i18n/displayStrings_fa.properties:shared.TheRADCBuyer=خریدار بیتکوین
core/src/main/resources/i18n/displayStrings_fa.properties:shared.paymentDetails=جزئیات پرداخت RADC {0}
core/src/main/resources/i18n/displayStrings_fa.properties:shared.btcAmount=مقدار بیتکوین
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.menu.buyBtc=خرید بیتکوین
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.menu.sellBtc=فروش بیتکوین
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo.initializing=در حال ارتباط با شبکه بیت‌کوین
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo.connectingTo=در حال ایجاد ارتباط با
core/src/main/resources/i18n/displayStrings_fa.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings_fa.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_fa.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_fa.properties:createOffer.amountPriceBox.amountDescription=مقدار RADC برای {0}
core/src/main/resources/i18n/displayStrings_fa.properties:createOffer.tradeFee.descriptionRADCOnly=کارمزد معامله
core/src/main/resources/i18n/displayStrings_fa.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=مقداری که شما وارد کرده‌اید، از تعداد عددهای اعشاری مجاز فراتر رفته است.\nمقدار به 4 عدد اعشاری تنظیم شده است.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step2_seller.openForDispute=The RADC buyer has not started their payment!\nThe max. allowed period for the trade has elapsed.\nYou can wait longer and give the trading peer more time or contact the mediator for assistance.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_buyer.warn.part2=The RADC seller still has not confirmed your payment. Please check {0} if the payment sending was successful.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_buyer.openForDispute=The RADC seller has not confirmed your payment! The max. period for the trade has elapsed. You can wait longer and give the trading peer more time or request assistance from the mediator.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_seller.cash=چون پرداخت از طریق سپرده‌ی نقدی انجام شده است، خریدار RADC باید عبارت \"غیر قابل استرداد\" را روی رسید کاغذی بنویسد، آن را به 2 قسمت پاره کند و از طریق ایمیل به شما یک عکس ارسال کند.\n\nبه منظور اجتناب از استرداد وجه، تنها در صورتی تایید کنید که ایمیل را دریافت کرده باشید و از صحت رسید کاغذی مطمئن باشید.\nاگر مطمئن نیستید، {0}
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Please note, that as soon you have confirmed the receipt, the locked trade amount will be released to the RADC buyer and the security deposit will be refunded.\n\n
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.step5_buyer.withdrawRADC=برداشت بیتکوین شما
core/src/main/resources/i18n/displayStrings_fa.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_fa.properties:funds.deposit.amount=مبلغ به RADC (اختیاری)
core/src/main/resources/i18n/displayStrings_fa.properties:funds.tx.withdrawnFromBSQWallet=مقدار RADC برداشت شده از کیف پول BSQ
core/src/main/resources/i18n/displayStrings_fa.properties:funds.tx.dustAttackTx.popup=This transaction is sending a very small RADC amount to your wallet and might be an attempt from chain analysis companies to spy on your wallet.\n\nIf you use that transaction output in a spending transaction they will learn that you are likely the owner of the other address as well (coin merge).\n\nTo protect your privacy the Bisq wallet ignores such dust outputs for spending purposes and in the balance display. You can set the threshold amount when an output is considered dust in the settings.
core/src/main/resources/i18n/displayStrings_fa.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_fa.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.btcHeader=شبکه بیتکوین
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.btcNodesLabel=استفاده از گره‌های Bitcoin Core اختصاصی
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.useTorForBtcJLabel=استفاده از Tor برای شبکه بیت‌کوین
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.warn.invalidBtcConfig=Connection to the Bitcoin network failed because your configuration is invalid.\n\nYour configuration has been reset to use the provided Bitcoin nodes instead. You will need to restart the application.
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.localhostBtcNodeInfo=Background information: Bisq looks for a local Bitcoin node when starting. If it is found, Bisq will communicate with the Bitcoin network exclusively through it.
core/src/main/resources/i18n/displayStrings_fa.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_fa.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Open emergency wallet tool for RADC wallet
core/src/main/resources/i18n/displayStrings_fa.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_fa.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_fa.properties:account.altcoin.popup.liquidbitcoin.msg=Trading L-RADC on Bisq requires that you understand the following:\n\nWhen receiving L-RADC for a trade on Bisq, you cannot use the mobile Blockstream Green Wallet app or a custodial/exchange wallet. You must only receive L-RADC into the Liquid Elements Core wallet, or another L-RADC wallet which allows you to obtain the blinding key for your blinded L-RADC address.\n\nIn the event mediation is necessary, or if a trade dispute arises, you must disclose the blinding key for your receiving L-RADC address to the Bisq mediator or refund agent so they can verify the details of your Confidential Transaction on their own Elements Core full node.\n\nFailure to provide the required information to the mediator or refund agent will result in losing the dispute case. In all cases of dispute, the L-RADC receiver bears 100% of the burden of responsibility in providing cryptographic proof to the mediator or refund agent.\n\nIf you do not understand these requirements, do not trade L-RADC on Bisq.
core/src/main/resources/i18n/displayStrings_fa.properties:account.seed.info=لطفا هم کلمات seed و هم تاریخ را یادداشت کنید! شما هر زمانی که بخواهید می‌توانید کیف‌پولتان را با استفاده از کلمات seed و تاریخ بازیابی کنید.\nهمین کلمات seed برای کیف‌پول‌های RADC و BSQ هم استفاده می‌شود.\n\nشما باید کلمات seed را روی یک برگ کاغذ یادداشت کنید. آنها را روی کامپیوتر خودتان ذخیره نکنید.\n\nلطفا توجه کنید که کلمات seed جایگزینی برای یک پشتیبان نیستند.\nبرای بازیابی وضعیت و داده‌های برنامه باید از طریق صفحه \"Account/Backup\"  از کل پوشه برنامه پشتیبان بسازید.\nوارد کردن کلمات seed فقط در موارد اورژانسی توصیه می‌شود. برنامه بدون پشتیبان از پایگاه داده و کلیدهای مناسب درست عمل نخواهد کرد!
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.priceAlert.high.label=با خبر کردن در صورتی که قیمت RADC بالاتر باشد
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.priceAlert.low.label=با خبر کردن در صورتی که قیمت RADC پایین‌تر باشد
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.trade.message.msg.started=خریدار RADC پرداخت با شناسه {0} را آغاز کرده است.
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.marketAlert.offerType.buy=پیشنهادهای خرید (می‌خواهم RADC بفروشم)
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.marketAlert.offerType.sell=پیشنهادهای فروش (می‌خواهم RADC بخرم)
core/src/main/resources/i18n/displayStrings_fa.properties:account.notifications.marketAlert.trigger.info=با تنظیم یک فاصله قیمتی، تنها در صورتی هشدار دریافت می‌کنید که پیشنهادی با پیشنیازهای شما (یا بهتر از آن) منتشر بشود. برای مثال: شما می‌خواهید RADC بفروشید، ولی می‌خواهید با 2% حق صراف نسبت به قیمت بازار آن را بفروشید. تنظیم این فیلد روی 2% به شما این اطمینان را می‌دهد که تنها بابت پیشنهادهایی هشدار دریافت کنید که حداقل 2% (یا بیشتر) بالای قیمت فعلی بازار هستند.
core/src/main/resources/i18n/displayStrings_fa.properties:dao.availableNonBsqBalance=موجودی غیر BSQ در دسترس (RADC)
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.DEFAULT_MAKER_FEE_RADC=کارمزد RADC سفارش‌گذار
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.DEFAULT_TAKER_FEE_RADC=کارمزد RADC پذیرنده
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.MIN_MAKER_FEE_RADC=حداقل کارمزد RADC سفارش‌گذار
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.MIN_TAKER_FEE_RADC=حداقل کارمزد RADC پذیرنده
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.RECIPIENT_RADC_ADDRESS=آدرس RADC گیرنده
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.ARBITRATOR_FEE=دستمزد داور در RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.param.MAX_TRADE_LIMIT=حداکثر محدودیت معامله در RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin node operator
core/src/main/resources/i18n/displayStrings_fa.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=مالک آدرس کمک مالی RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.wallet.send.sendBtcFunds=ارسال وجوه غیر BSQ (به RADC)
core/src/main/resources/i18n/displayStrings_fa.properties:dao.wallet.send.btcAmount=مقدار به RADC (وجوه غیر BSQ)
core/src/main/resources/i18n/displayStrings_fa.properties:dao.wallet.send.receiverBtcAddress=آدرس RADC گیرنده
core/src/main/resources/i18n/displayStrings_fa.properties:dao.wallet.send.sendBtc=ارسال وجوه RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.tx.withdrawnFromWallet=خروج RADC از کیف پول
core/src/main/resources/i18n/displayStrings_fa.properties:dao.proposal.create.missingMinerFeeFunds=شما سرمایه BSQ مناسبی برای ایجاد تراکنش پروپوزال ندارید. همه تراکنش های BSQ نیازمند دستمزد استخراج کننده در RADC هستند.\nاز دست رفته: {0}
core/src/main/resources/i18n/displayStrings_fa.properties:dao.proposal.create.missingIssuanceFunds=شما سرمایه RADC مناسبی برای ایجاد تراکنش پروپوزال ندارید. همه تراکنش های BSQ نیازمند دستمزد استخراج کننده در RADC هستند و تراکنش های صدور نیز به RADC برای میزان BSQ درخواستی نیاز دارند (BSQ/ساتوشی ها {0}).\nاز دست رفته: {1}
core/src/main/resources/i18n/displayStrings_fa.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.dashboard.avgPrice90=90 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.dashboard.avgPrice30=30 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_fa.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_fa.properties:contractWindow.btcAddresses=آدرس بیت‌کوین خریدار RADC / فروشنده RADC
core/src/main/resources/i18n/displayStrings_fa.properties:contractWindow.onions=آدرس شبکه خریدار RADC / فروشنده RADC
core/src/main/resources/i18n/displayStrings_fa.properties:contractWindow.accountAge=Account age RADC buyer / RADC seller
core/src/main/resources/i18n/displayStrings_fa.properties:contractWindow.numDisputes=تعداد اختلافات خریدار RADC / فروشنده RADC
core/src/main/resources/i18n/displayStrings_fa.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} پرداختی مبلغ معامله را دریافت می کند
core/src/main/resources/i18n/displayStrings_fa.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_fa.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_fa.properties:emptyWalletWindow.bsq.btcBalance=موجودی غیر BSQ بر اساس ساتوشی
core/src/main/resources/i18n/displayStrings_fa.properties:filterWindow.btcNode=گره‌های بیت‌کوین فیلترشده (آدرس + پورت جدا شده با ویرگول)
core/src/main/resources/i18n/displayStrings_fa.properties:filterWindow.preventPublicBtcNetwork=جلوگیری از استفاده ازشبکه عمومی بیت‌کوین
core/src/main/resources/i18n/displayStrings_fa.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_fa.properties:offerDetailsWindow.minBtcAmount=حداقل مقدار RADC
core/src/main/resources/i18n/displayStrings_fa.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_fa.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_fa.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_fa.properties:feeOptionWindow.info=شما می توانید انتخاب کنید که هزینه معامله را در BSQ یا در RADC بپردازید. اگر BSQ را انتخاب می کنید، از تخفیف هزینه معامله برخوردار می شوید.
core/src/main/resources/i18n/displayStrings_fa.properties:feeOptionWindow.useRADC=استفاده از RADC
core/src/main/resources/i18n/displayStrings_fa.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_fa.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.notSufficientConnectionsToBtcNetwork=شما باید منتظر بمانید تا حداقل {0} اتصال به شبکه بیتکوین داشته باشید.
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.insufficientBtcFundsForBsqTx=شما RADC کافی برای پرداخت کارمزد استخراج آن تراکنش BSQ را ندارید.\nلطفاً کیف پول RADC خود را شارژ نموده تا قادر به انتقال BSQ باشید.\nRADC موردنیاز: {0}
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.btcChangeBelowDustException=This transaction creates a change output which is below dust limit (546 Satoshi) and would be rejected by the Bitcoin network.\n\nYou need to add the dust amount to your sending amount to avoid to generate a dust output.\n\nThe dust output is {0}.
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.noBsqFundsForBtcFeePayment=کیف‌پول BSQ شما BSQ کافی برای پرداخت کارمزد معامله به BSQ را ندارد.
core/src/main/resources/i18n/displayStrings_fa.properties:popup.warning.burnRADC=This transaction is not possible, as the mining fees of {0} would exceed the amount to transfer of {1}. Please wait until the mining fees are low again or until you''ve accumulated more RADC to transfer.
core/src/main/resources/i18n/displayStrings_fa.properties:notification.trade.accepted=پیشنهاد شما توسط RADC {0} پذیرفته شده است.
core/src/main/resources/i18n/displayStrings_fa.properties:notification.trade.paymentStarted=خریدار RADC پرداخت را آغاز کرده است.
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_MAINNET=Bitcoin Mainnet
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_TESTNET=Bitcoin Testnet
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_REGTEST=Bitcoin Regtest
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_DAO_TESTNET=Bitcoin DAO Testnet (deprecated)
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_fa.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_fa.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_fa.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_fa.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.halCash.info=زمانی که از HalCash استفاده می‌کنید، خریدار باید کد HalCash را از طریق پیام کوتاه موبایل به فروشنده RADC ارسال کند.\n\nلطفا مطمئن شوید که از حداکثر میزانی که بانک شما برای انتقال از طریق HalCash مجاز می‌داند تجاوز نکرده‌اید. حداقل مقداردر هر برداشت معادل 10 یورو و حداکثر مقدار 600 یورو می‌باشد. این محدودیت برای برداشت‌های تکراری برای هر گیرنده در روز 3000 یورو و در ماه 6000 یورو می‌باشد. لطفا این محدودیت‌ها را با بانک خود مطابقت دهید و مطمئن شوید که آنها هم همین محدودی‌ها را دارند.\n\nمقدار برداشت باید شریبی از 10 یورو باشد چرا که مقادیر غیر از این را نمی‌توانید از طریق ATM برداشت کنید. رابط کاربری در صفحه ساخت پینشهاد و پذیرش پیشنهاد مقدار RADC را به گونه‌ای تنظیم می‌کنند که مقدار EUR درست باشد. شما نمی‌توانید از قیمت بر مبنای بازار استفاده کنید چون مقدار یورو با تغییر قیمت‌ها عوض خواهد شد.\n\nدر صورت بروز اختلاف خریدار RADC باید شواهد مربوط به ارسال یورو را ارائه دهد.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_fa.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_fa.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.toLarge=ورودی بزرگتر از {0} مجاز نیست.
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.toSmall=ورودی کوچکتر از {0} مجاز نیست.
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.invalidAddress=آدرس درست نیست. لطفا فرمت آدرس را بررسی کنید
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.exceedsMaxTradeLimit=حدمعامله شما {0} است.
core/src/main/resources/i18n/displayStrings_fa.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_de.properties:shared.buyingRADCWith=kaufe RADC mit {0}
core/src/main/resources/i18n/displayStrings_de.properties:shared.sellingRADCFor=verkaufe RADC für {0}
core/src/main/resources/i18n/displayStrings_de.properties:shared.buyingCurrency=kaufe {0} (verkaufe RADC)
core/src/main/resources/i18n/displayStrings_de.properties:shared.sellingCurrency=verkaufe {0} (kaufe RADC)
core/src/main/resources/i18n/displayStrings_de.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_de.properties:shared.TheRADCBuyer=Der RADC-Käufer
core/src/main/resources/i18n/displayStrings_de.properties:shared.paymentDetails=Zahlungsdetails des RADC-{0}
core/src/main/resources/i18n/displayStrings_de.properties:shared.btcAmount=RADC-Betrag
core/src/main/resources/i18n/displayStrings_de.properties:mainView.menu.buyBtc=RADC kaufen
core/src/main/resources/i18n/displayStrings_de.properties:mainView.menu.sellBtc=RADC verkaufen
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcFeeRate=/ Aktuelle Gebühr: {0} sat/vB
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo.initializing=Verbindung mit Bitcoin-Netzwerk wird hergestellt
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo.synchronizingWith=Synchronisierung mit {0} bei Block: {1} / {2}
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo.synchronizedWith=Synchronisierung mit {0} bei Block {1}
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo.connectingTo=Verbinde mit
core/src/main/resources/i18n/displayStrings_de.properties:mainView.footer.btcInfo.connectionFailed=Verbindung fehlgeschlagen zu
core/src/main/resources/i18n/displayStrings_de.properties:market.spread.numberOfBuyOffersColumn=RADC kaufen ({0})
core/src/main/resources/i18n/displayStrings_de.properties:market.spread.numberOfSellOffersColumn=RADC verkaufen ({0})
core/src/main/resources/i18n/displayStrings_de.properties:market.spread.totalAmountColumn=RADC insgesamt ({0})
core/src/main/resources/i18n/displayStrings_de.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=Kaufe RADC von einem unterzeichneten Konto
core/src/main/resources/i18n/displayStrings_de.properties:offerbook.deposit=Kaution RADC (%)
core/src/main/resources/i18n/displayStrings_de.properties:createOffer.amount.prompt=Betrag in RADC eingeben
core/src/main/resources/i18n/displayStrings_de.properties:createOffer.amountPriceBox.amountDescription=Betrag in RADC zu {0}
core/src/main/resources/i18n/displayStrings_de.properties:createOffer.amountPriceBox.minAmountDescription=Minimaler Betrag in RADC
core/src/main/resources/i18n/displayStrings_de.properties:createOffer.tradeFee.descriptionRADCOnly=Handelsgebühr
core/src/main/resources/i18n/displayStrings_de.properties:takeOffer.amount.prompt=Betrag in RADC eingeben
core/src/main/resources/i18n/displayStrings_de.properties:takeOffer.amountPriceBox.buy.amountDescription=Betrag in RADC zu verkaufen
core/src/main/resources/i18n/displayStrings_de.properties:takeOffer.amountPriceBox.sell.amountDescription=Betrag in RADC zu kaufen
core/src/main/resources/i18n/displayStrings_de.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Der eingegebene Betrag besitzt zu viele Nachkommastellen.\nDer Betrag wurde auf 4 Nachkommastellen angepasst.
core/src/main/resources/i18n/displayStrings_de.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Der eingegebene Betrag würde Staub als Wechselgeld für den RADC-Verkäufer erzeugen.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.refTextWarn=Wichtig: Wenn Sie die Zahlung durchführen, lassen Sie das Feld \"Verwendungszweck\" leer. Geben Sie NICHT die Handels-ID oder einen anderen Text wie 'Bitcoin', 'RADC' oder 'Bisq' an. Sie können im Handels-Chat gerne besprechen ob ein alternativer \"Verwendungszweck\" für Sie beide zweckmäßig wäre.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.altcoin=Bitte überweisen Sie von Ihrer externen {0}-Wallet\n{1} an den RADC-Verkäufer.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.cash=Bitte gehen Sie zu einer Bank und zahlen Sie {0} an den RADC-Verkäufer.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.cash.extra=WICHTIGE VORAUSSETZUNG:\nNachdem Sie die Zahlung getätigt haben, schreiben Sie auf die Quittung: NO REFUNDS.\nReißen Sie diese in zwei Teile und machen Sie ein Foto, das Sie an die E-Mail-Adresse des RADC-Verkäufers senden.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.moneyGram=Bitte zahlen Sie {0} an den RADC-Verkäufer mit MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.moneyGram.extra=WICHTIGE VORAUSSETZUNG: \nNachdem Sie die Zahlung getätigt haben, senden Sie die Authorisierungs-Nummer und ein Foto der Quittung per E-Mail an den RADC-Verkäufer.\nDie Quittung muss den vollständigen Namen, das Land, Bundesland des Verkäufers und den Betrag deutlich zeigen. Die E-Mail-Adresse des Verkäufers lautet: {0}.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.westernUnion=Bitte zahlen Sie {0} an den RADC-Verkäufer mit Western Union.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.westernUnion.extra=WICHTIGE VORAUSSETZUNG: \nNachdem Sie die Zahlung getätigt haben, senden Sie die MTCN (Tracking-Nummer) und ein Foto der Quittung per E-Mail an den RADC-Verkäufer.\nDie Quittung muss den vollständigen Namen, die Stadt, das Land des Verkäufers und den Betrag deutlich zeigen. Die E-Mail-Adresse des Verkäufers lautet: {0}.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.postal=Bitte senden Sie {0} per \"US Postal Money Order\" an den RADC-Verkäufer.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.cashByMail=Bitte schicken Sie {0} Bargeld per Post an den RADC Verkäufer. Genaue Anweisungen finden Sie im Handelsvertrag, oder Sie stellen über den Handels-Chat Fragen, wenn etwas unklar ist. Weitere Informationen über \"Bargeld per Post\" finden Sie im Bisq-Wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.pay=Bitte zahlen Sie {0} mit der gewählten Zahlungsmethode an den RADC Verkäufer. Sie finden die Konto Details des Verkäufers im nächsten Fenster.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.f2f=Bitte kontaktieren Sie den RADC-Verkäufer, mit den bereitgestellten Daten und organisieren Sie ein Treffen um {0} zu zahlen.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Haben Sie die Quittung an den RADC-Verkäufer gesendet?
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Erinnerung:\nSie müssen folgendes auf die Quittung schreiben: NO REFUNDS.\nZerreißen Sie diese dann in zwei Teile und machen Sie ein Foto, das Sie an die E-Mail-Adresse des RADC-Verkäufers senden.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Sie müssen die Authorisierungs-Nummer und ein Foto der Quittung per E-Mail an den RADC-Verkäufer senden.\nDie Quittung muss den vollständigen Namen, das Land, das Bundesland des Verkäufers und den Betrag deutlich zeigen. Die E-Mail-Adresse des Verkäufers lautet: {0}.\n\nHaben Sie die Authorisierungs-Nummer und Vertragt an den Verkäufer gesendet?
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Sie müssen die MTCN (Tracking-Nummer) und ein Foto der Quittung per E-Mail an den RADC-Verkäufer senden.\nDie Quittung muss den vollständigen Namen, die Stadt, das Land des Verkäufers und den Betrag deutlich zeigen. Die E-Mail-Adresse des Verkäufers lautet: {0}.\n\nHaben Sie die MTCN und Vertragt an den Verkäufer gesendet?
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Sie müssen eine SMS mit dem HalCash-Code sowie der Trade-ID ({0}) an den RADC-Verkäufer senden.\nDie Handynummer des Verkäufers lautet {1}.\n\nHaben Sie den Code an den Verkäufer gesendet?
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=Sie haben die Transaktions-ID und den Transaktionsschlüssel nicht eingegeben.\n\nWenn Sie diese Informationen nicht zur Verfügung stellen, kann Ihr Handelspartner die automatische Bestätigung nicht nutzen, um die RADC freizugeben sobald die XMR erhalten wurden.\nAußerdem setzt Bisq voraus, dass der Sender der XMR Transaktion diese Informationen im Falle eines Konflikts dem Vermittler oder der Schiedsperson mitteilen kann.\nWeitere Informationen finden Sie im Bisq Wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_seller.waitPayment.msg=Die Kautionstransaktion hat mindestens eine Blockchain-Bestätigung.\nSie müssen warten bis der RADC-Käufer die {0}-Zahlung beginnt.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_seller.warn=Der RADC-Käufer hat die {0}-Zahlung noch nicht getätigt.\nSie müssen warten bis die Zahlung begonnen wurde.\nWenn der Handel nicht bis {1} abgeschlossen wurde, wird der Vermittler diesen untersuchen.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step2_seller.openForDispute=Der RADC-Käufer hat seine Zahlung nicht begonnen!\nDie maximal zulässige Frist für den Handel ist abgelaufen.\nSie können länger warten und dem Handelspartner mehr Zeit geben oder den Vermittler um Hilfe bitten.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_buyer.wait.headline=Auf Zahlungsbestätigung des RADC-Verkäufers warten
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_buyer.wait.info=Auf Bestätigung des RADC-Verkäufers zum Erhalt der {0}-Zahlung warten.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_buyer.warn.part2=Der RADC-Verkäufer hat Ihre Zahlung noch nicht bestätigt. Bitte überprüfen Sie {0}, ob der Zahlungsvorgang erfolgreich war.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_buyer.openForDispute=Der RADC-Verkäufer hat Ihre Zahlung nicht bestätigt! Die maximale Frist für den Handel ist abgelaufen. Sie können länger warten und dem Trading-Partner mehr Zeit geben oder den Vermittler um Hilfe bitten.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.postal={0}Bitte überprüfen Sie, ob Sie {1} per \"US Postal Money Order\" vom RADC-Käufer erhalten haben.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.cashByMail={0}Bitte überprüfen Sie, ob Sie {1} als \"Bargeld per Post\" vom RADC-Käufer erhalten haben.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.bank=Ihr Handelspartner hat den Beginn der {0}-Zahlung bestätigt.\n\nBitte gehen Sie auf Ihre Online-Banking-Website und überprüfen Sie, ob Sie {1} vom RADC-Käufer erhalten haben.
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.cash=Da die Zahlung per Cash Deposit ausgeführt wurde, muss der RADC-Käufer \"NO REFUND\" auf die Quittung schreiben, diese in 2 Teile reißen und Ihnen ein Foto per E-Mail schicken.\n\nUm die Gefahr einer Rückbuchung zu vermeiden bestätigen Sie nur, wenn Sie die E-Mail erhalten haben und Sie sicher sind, dass die Quittung gültig ist.\nWenn Sie nicht sicher sind, {0}
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.moneyGram=Der Käufer muss Ihnen die Authorisierungs-Nummer und ein Foto der Quittung per E-Mail zusenden.\nDie Quittung muss deutlich Ihren vollständigen Namen, Ihr Land, Ihr Bundesland und den Betrag enthalten. Bitte überprüfen Sie Ihre E-Mail, wenn Sie die Authorisierungs-Nummer erhalten haben.\n\nNach dem Schließen dieses Pop-ups sehen Sie den Namen und die Adresse des RADC-Käufers, um das Geld von MoneyGram abzuholen.\n\nBestätigen Sie den Erhalt erst, nachdem Sie das Geld erfolgreich abgeholt haben!
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.westernUnion=Der Käufer muss Ihnen die MTCN (Sendungsnummer) und ein Foto der Quittung per E-Mail zusenden.\nDie Quittung muss deutlich Ihren vollständigen Namen, Ihre Stadt, Ihr Land und den Betrag enthalten. Bitte überprüfen Sie Ihre E-Mail, wenn Sie die MTCN erhalten haben.\n\nNach dem Schließen dieses Pop-ups sehen Sie den Namen und die Adresse des RADC-Käufers, um das Geld von Western Union abzuholen.\n\nBestätigen Sie den Erhalt erst, nachdem Sie das Geld erfolgreich abgeholt haben!
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.buyerStartedPayment=Der RADC-Käufer hat die {0}-Zahlung begonnen.\n{1}
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Bitte beachten Sie, dass, sobald Sie den Erhalt bestätigt haben, der gesperrte Trade-Betrag an den RADC-Käufer freigegeben wird und die Kaution zurückerstattet wird.\n\n
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.step5_buyer.withdrawRADC=Ihre Bitcoins abheben
core/src/main/resources/i18n/displayStrings_de.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_de.properties:funds.deposit.amount=Betrag in RADC (optional)
core/src/main/resources/i18n/displayStrings_de.properties:funds.tx.withdrawnFromBSQWallet=RADC von BSQ Wallet abgehoben
core/src/main/resources/i18n/displayStrings_de.properties:funds.tx.dustAttackTx.popup=Diese Transaktion sendet einen sehr kleinen RADC Betrag an Ihre Wallet und kann von Chainanalyse Unternehmen genutzt werden um ihre Wallet zu spionieren.\n\nWenn Sie den Transaktionsausgabe in einer Ausgabe nutzen, wird es lernen, dass Sie wahrscheinlich auch Besitzer der anderen Adressen sind (coin merge),\n\nUm Ihre Privatsphäre zu schützen, wir die Bisqwallet Staubausgaben für Ausgaben und bei der Anzeige der Guthabens ignorieren. Sie können den Grenzwert, ab wann ein Wert als Staub angesehen wird in den Einstellungen ändern.
core/src/main/resources/i18n/displayStrings_de.properties:support.buyerAddress=RADC-Adresse des Käufers
core/src/main/resources/i18n/displayStrings_de.properties:support.sellerAddress=RADC-Adresse des Verkäufers
core/src/main/resources/i18n/displayStrings_de.properties:support.buyerOfferer=RADC-Käufer/Ersteller
core/src/main/resources/i18n/displayStrings_de.properties:support.sellerOfferer=RADC-Verkäufer/Ersteller
core/src/main/resources/i18n/displayStrings_de.properties:support.buyerTaker=RADC-Käufer/Abnehmer
core/src/main/resources/i18n/displayStrings_de.properties:support.sellerTaker=RADC-Verkäufer/Abnehmer
core/src/main/resources/i18n/displayStrings_de.properties:support.initialInfo=Bitte geben Sie eine Beschreibung Ihres Problems in das untenstehende Textfeld ein. Fügen Sie so viele Informationen wie möglich hinzu, um die Zeit für die Konfliktlösung zu verkürzen.\n\nHier ist eine Checkliste der Informationen die Sie angeben sollten:\n\t● Wenn Sie der RADC-Käufer sind: Haben Sie die Geld- (Fiat-) oder Altcoin-Überweisung vorgenommen? Wenn ja, haben Sie in der Anwendung auf die Schaltfläche "Zahlung gestartet" geklickt?\n\t● Wenn Sie der RADC-Verkäufer sind: Haben Sie die Geld- (Fiat-) oder Altcoin-Zahlung erhalten? Wenn ja, haben Sie in der Anwendung auf die Schaltfläche "Zahlung erhalten" geklickt?\n\t● Welche Version von Bisq verwenden Sie?\n\t● Welches Betriebssystem verwenden Sie?\n\t● Wenn Sie ein Problem mit fehlgeschlagenen Transaktionen hatten, erwägen Sie bitte zu einem neuen Datei-Verzeichnis zu wechseln.\n\t Manchmal wird das Datei-Verzeichnis beschädigt was zu seltsamen Fehlern führt. \n\t Siehe: https://bisq.wiki/Switching_to_a_new_data_directory\n\nBitte machen Sie sich mit den Grundregeln der Konfliktlösung vertraut:\n\t● Sie müssen auf die {0}. Anfrage innerhalb von 2 Tagen antworten.\n\t● {1}\n\t● Die maximale Zeitspanne für eine Konfliktlösung beträgt 14 Tage.\n\t● Sie müssen mit dem/der {2} zusammenarbeiten und die Informationen zur Verfügung stellen, die sie anfordern, um Ihren Fall zu bearbeiten.\n\t● Sie haben die in der Benutzervereinbarung aufgeführten Regeln zur Konfliktlösung akzeptiert, als Sie die Anwendung zum ersten Mal gestartet haben.\n\nSie können hier weitere Informationen zur Konfliktlösung finden: {3}
core/src/main/resources/i18n/displayStrings_de.properties:setting.preferences.autoConfirmMaxTradeSize=Max. Trade-Höhe (RADC)
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.btcHeader=Bitcoin-Netzwerk
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.btcNodesLabel=Spezifische Bitcoin-Core-Knoten verwenden
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.useTorForBtcJLabel=Tor für das Bitcoin-Netzwerk verwenden
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.warn.invalidBtcConfig=Die Verbindung zum Bitcoin-Netzwerk ist fehlgeschlagen, weil Ihre Konfiguration ungültig ist.\n\nIhre Konfiguration wurde zurückgesetzt, um stattdessen die bereitgestellten Bitcoin-Nodes zu verwenden. Sie müssen die Anwendung neu starten.
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.localhostBtcNodeInfo=Hintergrundinformationen: Bisq sucht beim Start nach einem lokalen Bitcoin-Node. Wird dieser gefunden, kommuniziert Bisq ausschließlich über diesen mit dem Bitcoin-Netzwerk.
core/src/main/resources/i18n/displayStrings_de.properties:settings.net.chainHeightLabel=Letzte RADC Blockzeit
core/src/main/resources/i18n/displayStrings_de.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Öffnen Sie das Notfallwerkzeug für die RADC-Wallet
core/src/main/resources/i18n/displayStrings_de.properties:setting.info.msg=Wenn Sie RADC für XMR verkaufen, können Sie die automatische Bestätigung aktivieren um nachzuprüfen ob die korrekte Menge an Ihr Wallet gesendet wurde. So kann Bisq den Trade automatisch abschließen und Trades dadurch für alle schneller machen.\n\nDie automatische Bestätigung überprüft die XMR Transaktion über mindestens 2 XMR Explorer Nodes mit dem privaten Transaktionsschlüssel den der Sender zur Verfügung gestellt hat. Bisq verwendet standardmäßig Explorer Nodes die von Bisq Contributors betrieben werden aber wir empfehlen, dass Sie für ein Maximum an Sicherheit und Privatsphäre Ihre eigene XMR Explorer Node betreiben.\n\nFür automatische Bestätigungen, können Sie die max. Höhe an RADC pro Trade und die Anzahl der benötigten Bestätigungen in den Einstellungen festlegen.\n\nFinden Sie weitere Informationen (und eine Anleitung wie Sie Ihre eigene Explorer Node aufsetzen) im Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_de.properties:account.menu.walletInfo.balance.info=Hier wird das Wallet-Guthaben einschließlich unbestätigter Transaktionen angezeigt.\nFür RADC sollte das unten angezeigte Wallet-Guthaben mit der Summe der oben rechts in diesem Fenster angezeigten "Verfügbaren" und "Reservierten" Guthaben übereinstimmen.
core/src/main/resources/i18n/displayStrings_de.properties:account.altcoin.popup.liquidbitcoin.msg=Das Trading mit L-RADC auf Bisq setzt voraus, dass Sie Folgendes verstehen:\n\nWenn Sie L-RADC für einen Trade auf Bisq erhalten, können Sie nicht die mobile Blockstream Green Wallet App oder eine Custodial/Exchange Wallet verwenden. Sie dürfen L-RADC nur in der Liquid Elements Core Wallet oder eine andere L-RADC-Wallet erhalten, die es Ihnen ermöglicht, den Blinding Key für Ihre verdeckte L-RADC-Adresse zu erhalten.\n\nFalls eine Mediation erforderlich ist oder ein Trade-Konflikt entsteht, müssen Sie den Blinding Key für Ihre L-RADC-Empfangsadresse dem Bisq-Mediator oder dem Refund Agent mitteilen, damit dieser die Details Ihrer vertraulichen Transaktion auf seinem eigenen Elements Core Full Node überprüfen kann.\n\nWenn Sie dem Mediator oder Refund Agent die erforderlichen Informationen nicht zur Verfügung stellen, führt dies dazu, dass Sie den Streitfall verlieren. In allen Streitfällen trägt der L-RADC-Empfänger 100 % der Verantwortung für die Bereitstellung kryptographischer Beweise an den Mediator oder den Refund Agent.\n\nWenn Sie diese Anforderungen nicht verstehen, sollten Sie nicht mit L-RADC auf Bisq traden.
core/src/main/resources/i18n/displayStrings_de.properties:account.seed.info=Bitte schreiben Sie die sowohl Seed-Wörter als auch das Datum auf! Mit diesen Seed-Wörtern und dem Datum können Sie Ihre Wallet jederzeit wiederherstellen.\nDie Seed-Wörter werden für die RADC- und BSQ-Wallet genutzt.\n\nSchreiben Sie die Seed-Wörter auf ein Blatt Papier schreiben und speichern Sie sie nicht auf Ihrem Computer.\n\nBitte beachten Sie, dass die Seed-Wörter KEIN Ersatz für ein Backup sind.\nSie müssen ein Backup des gesamten Anwendungsverzeichnisses unter \"Konto/Backup\" erstellen, um den ursprünglichen Zustand der Anwendung wiederherstellen zu können.\nDas Importieren der Seed-Wörter wird nur für Notfälle empfohlen. Die Anwendung wird ohne richtiges Backup der Datenbankdateien und Schlüssel nicht funktionieren!
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.priceAlert.high.label=Benachrichtigen, wenn RADC-Preis über
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.priceAlert.low.label=Benachrichtigen, wenn RADC-Preis unter
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.trade.message.msg.started=Der RADC-Käufer hat die Zahlung für den Handel mit ID {0} begonnen.
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.marketAlert.offerType.buy=Kauf-Angebote (Ich möchte RADC verkaufen)
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.marketAlert.offerType.sell=Verkauf-Angebote (Ich möchte RADC kaufen)
core/src/main/resources/i18n/displayStrings_de.properties:account.notifications.marketAlert.trigger.info=Mit gesetzter Preisdistanz, werden Sie nur einen Alarm erhalten, wenn ein Angebot veröffentlicht wird, das die Bedingungen erfüllt (oder übertrifft). Beispiel: Sie möchten RADC verkaufen, aber Sie werden nur 2% über dem momentanen Marktpreis verkaufen. Dieses Feld auf 2% setzen stellt sicher, dass Sie nur nur Alarme für Angebote erhalten, die 2% (oder mehr) über dem momentanen Marktpreis liegen.
core/src/main/resources/i18n/displayStrings_de.properties:dao.availableNonBsqBalance=Verfügbares nicht-BSQ-Guthaben (RADC)
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADC Erstellungsgebühr
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADC Abnehmergebühr
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.MIN_MAKER_FEE_RADC=Min. RADC Erstellergebühr
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.MIN_TAKER_FEE_RADC=Min. RADC Abnehmergebühr
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.RECIPIENT_RADC_ADDRESS=Adresse des RADC Empfängers
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.ARBITRATOR_FEE=Vermittlergebühr in RADC
core/src/main/resources/i18n/displayStrings_de.properties:dao.param.MAX_TRADE_LIMIT=Max. Handels-Limit in RADC
core/src/main/resources/i18n/displayStrings_de.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin-Node Betreiber
core/src/main/resources/i18n/displayStrings_de.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC Spendenadresse Besitzer
core/src/main/resources/i18n/displayStrings_de.properties:dao.wallet.send.sendBtcFunds=Sende nicht-BSQ-Gelder (RADC)
core/src/main/resources/i18n/displayStrings_de.properties:dao.wallet.send.btcAmount=Betrag in RADC (nicht-BSQ-Gelder)
core/src/main/resources/i18n/displayStrings_de.properties:dao.wallet.send.receiverBtcAddress=Adresse des RADC Empfängers
core/src/main/resources/i18n/displayStrings_de.properties:dao.wallet.send.sendBtc=RADC-Gelder senden
core/src/main/resources/i18n/displayStrings_de.properties:dao.tx.withdrawnFromWallet=RADC von Wallet abgehoben
core/src/main/resources/i18n/displayStrings_de.properties:dao.proposal.create.missingMinerFeeFunds=Du hast nicht ausreichend RADC, um die Vorschlags-Transaktion zu erstellen. Jede BSQ-Transaktion benötigt eine Mining-Gebühr in RADC.\nEs fehlen: {0}
core/src/main/resources/i18n/displayStrings_de.properties:dao.proposal.create.missingIssuanceFunds=Sie haben nicht ausreichend RADC, um die Vorschlags-Transaktion zu erstellen. Jede BSQ-Transaktion benötigt eine Mining-Gebühr in RADC, Ausgabetransaktionen brauchen auch RADC für den angefragten BSQ Betrag ({0} Satoshis/BSQ).\nEs fehlen: {1}
core/src/main/resources/i18n/displayStrings_de.properties:dao.feeTx.issuanceProposal.confirm.details={0} Gebühr: {1}\nBenötigte RADC für die BSQ Ausgabe: {2} ({3} Satoshis/BSQ)\nMining-Gebühr: {4} ({5} Satoshis/Byte)\nTransaktionsgröße: {6} Kb\n\nFalls Ihre Anfrage angenommen wird, erhalten Sie den angefragten Betrag minus die 2 BSQ Antragsgebühr.\n\nSind Sie sicher, dass Sie die {7} Transaktion veröffentlichen wollen?
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.dashboard.avgPrice90=90 Tage durchschnittlicher BSQ/RADC-Handelspreis
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.dashboard.avgPrice30=30 Tage durchschnittlicher BSQ/RADC-Handelspreis
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.dashboard.volumeBtc=Gesamtes Handelsvolumen in RADC
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Durchschnittlicher BSQ/RADC Handelspreis einer ausgewählten Zeitperiode im Chart
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Handelsvolumen in RADC
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC Preis
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD Preis
core/src/main/resources/i18n/displayStrings_de.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Handelsgebühren
core/src/main/resources/i18n/displayStrings_de.properties:contractWindow.btcAddresses=Bitcoinadresse RADC-Käufer / RADC-Verkäufer
core/src/main/resources/i18n/displayStrings_de.properties:contractWindow.onions=Netzwerkadresse RADC-Käufer / RADC-Verkäufer
core/src/main/resources/i18n/displayStrings_de.properties:contractWindow.accountAge=Kontoalter RADC Käufer / RADC Verkäufer
core/src/main/resources/i18n/displayStrings_de.properties:contractWindow.numDisputes=Anzahl Konflikte RADC-Käufer / RADC-Verkäufer
core/src/main/resources/i18n/displayStrings_de.properties:disputeSummaryWindow.payout.getsTradeAmount=Der RADC-{0} erhält die Auszahlung des Handelsbetrags
core/src/main/resources/i18n/displayStrings_de.properties:disputeSummaryWindow.payout.getsAll=Menge in RADC zu {0}
core/src/main/resources/i18n/displayStrings_de.properties:disputeSummaryWindow.close.msg=Ticket geschlossen am {0}\n{1}Node Adresse: {2}\n\nZusammenfassung:\nTrade ID: {3}\nWährung: {4}\nTrade-Betrag: {5}\nAuszahlungsbetrag für den RADC Käufer: {6}\nAuszahlungsbetrag für den RADC Verkäufer: {7}\n\nGrund für den Konflikt: {8}\n\nWeitere Hinweise:\n{9}\n
core/src/main/resources/i18n/displayStrings_de.properties:emptyWalletWindow.bsq.btcBalance=Guthaben von nicht-BSQ Satoshis
core/src/main/resources/i18n/displayStrings_de.properties:filterWindow.btcNode=Gefilterte Bitcoinknoten (Komma getr. Adresse + Port)
core/src/main/resources/i18n/displayStrings_de.properties:filterWindow.preventPublicBtcNetwork=Nutzung des öffentlichen Bitcoin-Netzwerks verhindern
core/src/main/resources/i18n/displayStrings_de.properties:filterWindow.btcFeeReceiverAddresses=RADC Gebühr Empfänger-Adressen
core/src/main/resources/i18n/displayStrings_de.properties:offerDetailsWindow.minBtcAmount=Min. RADC-Betrag
core/src/main/resources/i18n/displayStrings_de.properties:txDetailsWindow.btc.note=Sie haben RADC gesendet.
core/src/main/resources/i18n/displayStrings_de.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Summe aller in RADC gezahlten Handels-Gebühren
core/src/main/resources/i18n/displayStrings_de.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} vom Handels-Betrag)
core/src/main/resources/i18n/displayStrings_de.properties:feeOptionWindow.info=Sie können wählen, die Gebühr in BSQ oder RADC zu zahlen. Wählen Sie BSQ, erhalten Sie eine vergünstigte Handelsgebühr.
core/src/main/resources/i18n/displayStrings_de.properties:feeOptionWindow.useRADC=RADC nutzen
core/src/main/resources/i18n/displayStrings_de.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_de.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Sie müssen warten, bis Sie wenigstens {0} Verbindungen zum Bitcoinnetzwerk haben.
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.insufficientBtcFundsForBsqTx=Sie haben nicht genügend RADC-Gelder, um die Mining-Gebühr für diese Transaktion zu bezahlen.\nBitte finanzieren Sie Ihre RADC-Wallet.\nFehlende Gelder: {0}
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.btcChangeBelowDustException=Diese Transaktion erzeugt eine Wechselgeld-Ausgabe, die unter dem Dust-Limit (546 Satoshi) liegt und vom Bitcoin-Netzwerk abgelehnt würde.\n\nSie müssen den Dust-Betrag zu Ihrem Sende-Betrag hinzufügen, um zu vermeiden, dass eine Dust-Ausgabe generiert wird.\n\nDie Dust-Ausgabe ist {0}.
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=Sie benötigen mehr BSQ um diese Transaktion durchzuführen - die letzten 5.46 BSQ in Ihrer Wallet können aufgrund der Dust-Limits im Bitcoin Protokoll nicht für die Trading-Gebühren verwendet werden.\n\nSie können entweder mehr BSQ kaufen oder die Trading-Gebühren in RADC bezahlen.\n\nFehlende Funds: {0}
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.noBsqFundsForBtcFeePayment=Ihre BSQ-Wallet hat keine ausreichenden Gelder, um die Handels-Gebühr in BSQ zu bezahlen.
core/src/main/resources/i18n/displayStrings_de.properties:popup.warning.burnRADC=Die Transaktion ist nicht möglich, da die Mininggebühren von {0} den übertragenen Betrag von {1} überschreiten würden. Bitte warten Sie, bis die Gebühren wieder niedrig sind, oder Sie mehr RADC zum übertragen angesammelt haben.
core/src/main/resources/i18n/displayStrings_de.properties:notification.trade.accepted=Ihr Angebot wurde von einem RADC-{0} angenommen.
core/src/main/resources/i18n/displayStrings_de.properties:notification.trade.paymentStarted=Der RADC-Käufer hat die Zahlung begonnen.
core/src/main/resources/i18n/displayStrings_de.properties:RADC_MAINNET=Bitcoin-Hauptnetzwerk
core/src/main/resources/i18n/displayStrings_de.properties:RADC_TESTNET=Bitcoin-Testnetzwerk
core/src/main/resources/i18n/displayStrings_de.properties:RADC_REGTEST=Bitcoin-Regtest
core/src/main/resources/i18n/displayStrings_de.properties:RADC_DAO_TESTNET=Bitcoin-DAO-Testnetzwerk (veraltet)
core/src/main/resources/i18n/displayStrings_de.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_de.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_de.properties:payment.makeOfferToUnsignedAccount.warning=Beachten Sie angesichts des jüngsten Anstiegs des RADC-Preises, dass der Verkauf von 0,01 RADC oder weniger ein höheres Risiko als zuvor birgt.\n\nEs wird dringend empfohlen, entweder:\n- Angebote > 0,01 RADC zu machen, damit Sie nur mit signierten/vertrauenswürdigen Käufern handeln\n- Den Wert aller Angebote zum Verkauf von < 0,01 RADC unter ca. 100 USD zu halten, da dieser Wert (erfahrungsgemäß) Betrüger entmutigt hat\n\nBisq-Entwickler arbeiten an Möglichkeiten um das Zahlungsmodell für solch kleine Händel besser abzusichern. Nehmen Sie hier an der aktuellen Diskussion teil: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_de.properties:payment.takeOfferFromUnsignedAccount.warning=Beachten Sie angesichts des jüngsten Anstiegs des RADC-Preises, dass der Verkauf von 0,01 RADC oder weniger ein höheres Risiko als zuvor birgt.\n\nEs wird dringend empfohlen, entweder:\n- Angebote nur von signierten/vertrauenswürdigen Käufern anzunehmen\n- Geschäfte mit nicht signierten/nicht vertrauenswürdigen Käufern bei einem Wert von ca. 100 USD zu halten, da dieser Wert (erfahrungsgemäß) Betrüger entmutigt hat\n\nBisq-Entwickler arbeiten an Möglichkeiten um das Zahlungsmodell für solch kleine Händel besser abzusichern. Nehmen Sie hier an der aktuellen Diskussion teil: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_de.properties:payment.moneyGram.info=Bei der Nutzung von MoneyGram, muss der RADC Käufer die MoneyGram Zulassungsnummer und ein Foto der Quittung per E-Mail an den RADC-Verkäufer senden. Die Quittung muss den vollständigen Namen, das Land, das Bundesland des Verkäufers und den Betrag deutlich zeigen. Der Käufer bekommt die E-Mail-Adresse des Verkäufers im Handelsprozess angezeigt.
core/src/main/resources/i18n/displayStrings_de.properties:payment.westernUnion.info=Bei der Nutzung von Western Union, muss der RADC Käufer die MTCN (Tracking-Nummer)  Foto der Quittung per E-Mail an den RADC-Verkäufer senden. Die Quittung muss den vollständigen Namen, das Land, die Stadt des Verkäufers und den Betrag deutlich zeigen. Der Käufer bekommt die E-Mail-Adresse des Verkäufers im Handelsprozess angezeigt.
core/src/main/resources/i18n/displayStrings_de.properties:payment.halCash.info=Bei Verwendung von HalCash muss der RADC-Käufer dem RADC-Verkäufer den HalCash-Code per SMS vom Mobiltelefon senden.\n\nBitte achten Sie darauf, dass Sie den maximalen Betrag, den Sie bei Ihrer Bank mit HalCash versenden dürfen, nicht überschreiten. Der Mindestbetrag pro Auszahlung beträgt 10 EUR und der Höchstbetrag 600 EUR. Bei wiederholten Abhebungen sind es 3000 EUR pro Empfänger pro Tag und 6000 EUR pro Empfänger pro Monat. Bitte überprüfen Sie diese Limits bei Ihrer Bank, um sicherzustellen, dass sie die gleichen Limits wie hier angegeben verwenden.\n\nDer Auszahlungsbetrag muss ein Vielfaches von 10 EUR betragen, da Sie keine anderen Beträge an einem Geldautomaten abheben können. Die Benutzeroberfläche beim Erstellen und Annehmen eines Angebots passt den RADC-Betrag so an, dass der EUR-Betrag korrekt ist. Sie können keinen marktbasierten Preis verwenden, da sich der EUR-Betrag bei sich ändernden Preisen ändern würde.\n\nIm Streitfall muss der RADC-Käufer den Nachweis erbringen, dass er die EUR geschickt hat.
core/src/main/resources/i18n/displayStrings_de.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_de.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_de.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_de.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_de.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_de.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_de.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_de.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_de.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_de.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_de.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_de.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_de.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_de.properties:payment.usPostalMoneyOrder.info=Der Handel auf Bisq unter Verwendung von US Postal Money Orders (USPMO) setzt voraus, dass Sie Folgendes verstehen:\n\n- Der RADC-Käufer muss den Namen des RADC-Verkäufers sowohl in das Feld des Zahlers als auch in das Feld des Zahlungsempfängers eintragen und vor dem Versand ein hochauflösendes Foto des USPMO und des Umschlags mit dem Tracking-Nachweis machen.\n- RADC-Käufer müssen den USPMO mit Zustellbenachrichtigung an den RADC-Verkäufer schicken.\n\nFür den Fall, dass eine Mediation erforderlich ist oder es zu einem Handelskonflikt kommt, müssen Sie die Fotos zusammen mit der USPMO-Seriennummer, der Nummer des Postamtes und dem Dollarbetrag an den Bisq-Vermittler oder Rückerstattungsbeauftragten schicken, damit dieser die Angaben auf der Website der US-Post überprüfen kann.\n\nWenn Sie dem Vermittler oder der Schiedsperson die erforderlichen Informationen nicht zur Verfügung stellen, führt dies dazu, dass der Konflikt zu Ihrem Nachteil entschieden wird.\n\nIn allen Konfliktfällen trägt der USPMO-Absender 100% der Verantwortung für die Bereitstellung von Beweisen/Nachweisen für den Vermittler oder die Schiedsperson.\n\nWenn Sie diese Anforderungen nicht verstehen, handeln Sie bitte nicht auf Bisq unter Verwendung von USPMO.
core/src/main/resources/i18n/displayStrings_de.properties:payment.cashByMail.info=Beim Bargeld per Post Handel auf Bisq, müssen Sie folgendes verstehen: \n\n● Der RADC Käufer sollte das Bargeld in einen manipulationssicheren Geldbeutel verpacken.\n● Der RADC Käufer sollte den Verpackungsprozess des Bargeldes filmen oder mit hochauflösenden Fotos dokumentieren. Die Adresse & Tracking Nummer sollen auf der Packung bereits angebracht sein.\n● Der RADC Käufer sollte das Bargeld mit Versandbestätigung und ausreichender Versicherung an den Verkäufer senden.\n● Der RADC Verkäufer sollte die Öffnung des Bargeld-Paketes so filmen, dass die Tracking Nummer des Senders im Video sichtbar ist.\n● Der Ersteller des Angebots muss spezielle Bedingungen oder Abmachungen im 'Zusätzliche Informationen'-Feld des Zahlungskontos eintragen.\n● Der Annehmer des Angebots akzeptiert die Bedingungen und Abmachungen des Ersteller des Angebots durch die Annahme des Angebots.\n\nBargeld per Post Trades benötigen die Ehrlichkeit und das Vertrauen beider Peers.\n\n● Bargeld per Post Trades haben weniger verifizierbare Handlungen als andere FIAT Trades. Das macht die Abwicklung von Konflikten viel schwerer.\nCBM trades put the onus to act honestly squarely on both peers.\n● Versuchen Sie den Konflikt mit dem Handelspartner direkt über den Trader Chat zu lösen. Das ist der vielversprechendste Weg Konflikte bei solchen  Trades zu lösen.\n● Mediatoren können den Fall untersuchen und einen Vorschlag machen aber es ist nicht garantiert, dass sie wirklich helfen können.\n● Wenn ein Mediator eingeschalten wurde und beide Peers den Vorschlag des Mediators ablehnen, werden die Gelder beider Peers zu einer Bisq Spendenadresse [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction] gesendet und der Trade ist somit abgeschlossen.\n● Wenn ein Trader den Vorschlag des Mediators ablehnt und eine Arbitration eröffnet, kann es zu einem Verlust der Trading- und der Deposit-Funds kommen.\n● Arbitratoren werden ihre Entscheidungen basierend auf den zur Verfügung gestellten Beweisen treffen. Deshalb sollten Sie die Abläufe von oben befolgen und dokumentieren um im Falle eines Konflikts Beweise zu haben. Bei Bargeld per Post Trades ist die Entscheidung des Arbitrators entscheidend.\n● Rückerstattungsanfragen, von verlorenen Funds durch einen Bargeld per Post Trade, über die DAO werden nicht berücksichtigt.\n\nUm sicherzustellen, dass Sie die Anforderungen bei Bargeld per Post Trades verstanden haben lesen Sie: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\nWenn Sie diese Anforderungen nicht verstehen, nutzen Sie die Bisq-Zahlungsmethode Bargeld per Post nicht.
core/src/main/resources/i18n/displayStrings_de.properties:payment.f2f.info=Persönliche Händel "von Angesicht zu Angesicht" ('Face to Face') haben andere Regeln und andere Risiken als Online-Händel.\n\nDie Hauptunterschiede sind:\n● Die Handelspartner müssen Informationen über den Ort und die Uhrzeit des Treffens unter Verwendung ihrer angegebenen Kontaktdaten austauschen.\n● Die Handelspartner müssen ihre Laptops mitbringen und die Bestätigung "Zahlung gesendet" und "Zahlung erhalten" am Treffpunkt vornehmen.\n● Wenn der Ersteller eines Angebots spezielle "Geschäftsbedingungen" hat, muss er diese in seinem Konto unter dem Textfeld "Zusatzinformationen" angeben.\n● Mit der Annahme eines Angebots erklärt sich der Käufer mit den vom Ersteller angegebenen "Geschäftsbedingungen" einverstanden.\n● Im Konfliktfall kann der Vermittler oder die Schiedsperson nicht viel tun, da es in der Regel schwierig ist herauszubekommen, was bei dem Treffen wirklich passiert ist. In solchen Fällen bleiben die RADC auf unbestimmte Zeit gesperrt, oder bis die Handelspartner zu einer Einigung kommen.\n\nUm sicherzustellen, dass Sie die Besonderheiten der persönlichen "von Angesicht zu Angesicht" ('Face to Face') Händel vollständig verstehen, lesen Sie bitte die Anweisungen und Empfehlungen unter: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_de.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.fraction=Input wird einem Bitcoin Wert von weniger als 1 satoshi entsprechen
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.toLarge=Eingaben größer als {0} sind nicht erlaubt.
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.toSmall=Eingabe kleiner als {0} ist nicht erlaubt.
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.invalidAddress=Die Adresse ist nicht korrekt. Bitte überprüfen Sie das Adressformat.
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.exceedsMaxTradeLimit=Ihr Handelslimit ist {0}.
core/src/main/resources/i18n/displayStrings_de.properties:validation.btc.invalidFormat=Ungültiges Bitcoin Adressformat.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.buyingRADCWith=用 {0} 买入 RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.sellingRADCFor=卖出 RADC 为 {0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.buyingCurrency=买入 {0}（卖出 RADC）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.sellingCurrency=卖出 {0}（买入 RADC）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.RADCMinMax=RADC（最小 - 最大）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.TheRADCBuyer=RADC 买家
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.paymentDetails=RADC {0} 支付详情
core/src/main/resources/i18n/displayStrings_zh-hans.properties:shared.btcAmount=RADC 总额
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.menu.buyBtc=买入 RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.menu.sellBtc=卖出 RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcFeeRate=/ 矿工手费率：{0} 聪/字节
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo.initializing=连接至比特币网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo.synchronizingWith=正在通过{0}同步区块：{1}/{2}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo.synchronizedWith=已通过{0}同步至区块{1}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo.connectingTo=连接至
core/src/main/resources/i18n/displayStrings_zh-hans.properties:mainView.footer.btcInfo.connectionFailed=连接失败：
core/src/main/resources/i18n/displayStrings_zh-hans.properties:market.spread.numberOfBuyOffersColumn=买入 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:market.spread.numberOfSellOffersColumn=卖出 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:market.spread.totalAmountColumn=总共 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_zh-hans.properties:offerbook.deposit=RADC 保证金（%）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:createOffer.amount.prompt=输入 RADC 数量
core/src/main/resources/i18n/displayStrings_zh-hans.properties:createOffer.amountPriceBox.minAmountDescription=最小 RADC 数量
core/src/main/resources/i18n/displayStrings_zh-hans.properties:createOffer.tradeFee.descriptionRADCOnly=挂单费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:takeOffer.amount.prompt=输入 RADC 数量
core/src/main/resources/i18n/displayStrings_zh-hans.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=你输入的数量超过允许的小数位数。\n数量已被调整为4位小数。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.altcoin=请从您的外部 {0} 钱包划转\n{1} 到 RADC 卖家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.cash=请到银行并支付 {0} 给 RADC 卖家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.cash.extra=重要要求：\n完成付款后在纸质收据上写下：不退款。\n然后将其撕成2份，拍照片并发送给 RADC 卖家的电子邮件地址。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.moneyGram=请使用 MoneyGram 向 RADC 卖家支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.moneyGram.extra=重要要求：\n完成支付后，请通过电邮发送授权编号和照片给 RADC 卖家。\n收据必须清楚地向卖家写明您的全名、城市、国家或地区、数量。卖方的电子邮件是：{0}。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.westernUnion=请使用 Western Union 向 RADC 卖家支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.westernUnion.extra=重要要求：\n完成支付后，请通过电邮发送 MTCN（追踪号码）和照片给 RADC 卖家。\n收据必须清楚地向卖家写明您的全名、城市、国家或地区、数量。卖方的电子邮件是：{0}。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.postal=请用“美国邮政汇票”发送 {0} 给 RADC 卖家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.f2f=请通过提供的联系人与 RADC 卖家联系，并安排会议支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.paperReceipt.headline=您是否将纸质收据发送给 RADC 卖家？
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.paperReceipt.msg=请牢记：\n完成付款后在纸质收据上写下：不退款。\n然后将其撕成2份，拍照片并发送给 RADC 卖家的电子邮件地址。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=请通过电邮发送授权编号和照片给 RADC 卖家。\n收据必须清楚地向卖家写明您的全名、城市、国家或地区、数量。卖方的电子邮件是：{0}。\n\n您把授权编号和合同发给卖方了吗？
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=请通过电邮发送 MTCN（追踪号码）和照片给 RADC 卖家。\n收据必须清楚地向卖家写明您的全名、城市、国家或地区、数量。卖方的电子邮件是：{0}。\n\n您把 MTCN 和合同发给卖方了吗？
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.halCashInfo.msg=您需要向 RADC 卖家发送带有 HalCash 代码和交易 ID（{0}）的文本消息。\n\n卖方的手机号码是 {1} 。\n\n您是否已经将代码发送至卖家?
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=您还没有输入交易 ID 以及交易密钥\n\n如果不提供此数据您的交易伙伴无法在收到 XMR 后使用自动确认功能以快速释放 RADC。\n另外，Bisq 要求 XMR 发送者在发生纠纷的时候能够向调解员和仲裁员提供这些信息。\n更多细节在 Bisq Wiki：https://bisq.wiki/Trading_Monero#Auto-confirming_trades
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_seller.waitPayment.msg=存款交易至少有一个区块链确认。\n您需要等到 RADC 买家开始 {0} 付款。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_seller.warn=RADC 买家仍然没有完成 {0} 付款。\n你需要等到他开始付款。\n如果 {1} 交易尚未完成，仲裁员将进行调查。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step2_seller.openForDispute=RADC 买家尚未开始付款！\n允许的最长交易期限已经过去了。你可以继续等待给予交易双方更多时间，或联系仲裁员以争取解决纠纷。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_buyer.wait.headline=等待 RADC 卖家付款确定
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_buyer.wait.info=等待 RADC 卖家确认收到 {0} 付款。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_buyer.warn.part2=RADC 卖家仍然没有确认您的付款。如果付款发送成功，请检查 {0}。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_buyer.openForDispute=RADC 卖家还没有确认你的付款！最大交易期限已过。您可以等待更长时间，并给交易伙伴更多时间或请求调解员的帮助。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.cash=因为付款是通过现金存款完成的，RADC 买家必须在纸质收据上写“不退款”，将其撕成2份，并通过电子邮件向您发送照片。\n\n为避免退款风险，请仅确认您是否收到电子邮件，如果您确定收据有效。\n如果您不确定，{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.moneyGram=买方必须发送授权编码和一张收据的照片。\n收据必须清楚地显示您的全名、城市、国家或地区、数量。如果您收到授权编码，请查收邮件。\n\n关闭弹窗后，您将看到 RADC 买家的姓名和在 MoneyGram 的收款地址。\n\n只有在您成功收到钱之后，再确认收据！
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.westernUnion=买方必须发送 MTCN（跟踪号码）和一张收据的照片。\n收据必须清楚地显示您的全名、城市、国家或地区、数量。如果您收到 MTCN，请查收邮件。\n\n关闭弹窗后，您将看到 RADC 买家的姓名和在 Western Union 的收款地址。\n\n只有在您成功收到钱之后，再确认收据！
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.amazonGiftCard=RADC 买家已经发送了一张亚马逊电子礼品卡到您的邮箱或手机短信。请现在立即兑换亚马逊电子礼品卡到您的亚马逊账户中以及确认交易信息。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.buyerStartedPayment=RADC 买家已经开始 {0} 的付款。\n{1}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step3_seller.onPaymentReceived.note=请注意，一旦您确认收到，冻结交易金额将被发放给 RADC 买家，保证金将被退还。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.step5_buyer.withdrawRADC=提现您的比特币
core/src/main/resources/i18n/displayStrings_zh-hans.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_zh-hans.properties:funds.deposit.amount=RADC 数量（可选）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:funds.tx.withdrawnFromBSQWallet=RADC 已从 BSQ 钱包中取出
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.buyerAddress=RADC 买家地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.sellerAddress=RADC 卖家地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.buyerOfferer=RADC 买家/挂单者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.sellerOfferer=RADC 卖家/挂单者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.buyerTaker=RADC 买家/买单者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.sellerTaker=RADC 卖家/买单者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:setting.preferences.autoConfirmMaxTradeSize=最大交易量（RADC）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.btcHeader=比特币网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.btcNodesLabel=使用自定义比特币主节点
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.useTorForBtcJLabel=使用 Tor 连接比特币网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.warn.invalidBtcConfig=由于您的配置无效，无法连接至比特币网络。\n\n您的配置已经被重置为默认比特币节点。你需要重启 Bisq。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.localhostBtcNodeInfo=背景信息：Bisq 在启动时会在本地查找比特币节点。如果有，Bisq 将只通过它与比特币网络进行通信。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:settings.net.chainHeightLabel=最新 RADC 区块高度
core/src/main/resources/i18n/displayStrings_zh-hans.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=打开应急 RADC 钱包工具
core/src/main/resources/i18n/displayStrings_zh-hans.properties:setting.info.msg=当你完成 RADC/XMR 交易时，您可以使用自动确认功能来验证是否向您的钱包中发送了正确数量的 XMR，以便 Bisq 可以自动将交易标记为完成，从而使每个人都可以更快地进行交易。\n\n自动确认使用 XMR 发送方提供的交易密钥在至少 2 个 XMR 区块浏览器节点上检查 XMR 交易。在默认情况下，Bisq 使用由 Bisq 贡献者运行的区块浏览器节点，但是我们建议运行您自己的 XMR 区块浏览器节点以最大程度地保护隐私和安全。\n\n您还可以在``设置''中将每笔交易的最大 RADC 数量设置为自动确认以及所需确认的数量。\n\n在 Bisq Wiki 上查看更多详细信息（包括如何设置自己的区块浏览器节点）：https://bisq.wiki/Trading_Monero#Auto-confirming_trades
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.menu.walletInfo.balance.info=这里包括内部钱包余额包括未确认交易。\n对于 RADC，下方显示的内部钱包的余额将会是窗口右上方的“可用”与“保留”余额的总和。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.altcoin.popup.liquidbitcoin.msg=在 Bisq 上交易 L-RADC 你必须理解下述条款：\n\n当你在 Bisq 上接受 L-RADC 交易时，你不能使用手机 Blockstream Green Wallet 或者是一个托管/交易钱包。你必须只接收 L-RADC 到 Liquid Elements Core 钱包，或另一个 L-RADC 钱包且允许你获得匿名的 L-RADC 地址以及密钥。\n\n在需要进行调解的情况下，或者如果发生了交易纠纷，您必须将接收 L-RADC地址的安全密钥披露给 Bisq 调解员或退款代理，以便他们能够在他们自己的 Elements Core 全节点上验证您的匿名交易的细节。\n\n如果你不了解或了解这些要求，不要在 Bisq 上交易 L-RADC。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.seed.info=请写下钱包还原密钥和时间！\n您可以通过还原密钥和时间在任何时候恢复您的钱包。\n还原密钥用于 RADC 和 BSQ 钱包。\n\n您应该在一张纸上写下还原密钥并且不要保存它们在您的电脑上。\n请注意还原密钥并不能代替备份。\n您需要备份完整的应用程序目录在”账户/备份“界面去恢复有效的应用程序状态和数据。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.priceAlert.high.label=提醒条件：当 RADC 价格高于
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.priceAlert.low.label=提醒条件：当 RADC 价格低于
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.trade.message.msg.started=RADC 买家已经开始支付 ID 为 {0} 的交易。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.marketAlert.offerType.buy=买入报价（我想要出售 RADC ）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.marketAlert.offerType.sell=卖出报价（我想要购买 RADC ）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:account.notifications.marketAlert.trigger.info=设置价格区间后，只有当满足（或超过）您的需求的报价发布时，您才会收到提醒。您想卖 RADC ，但你只能以当前市价的 2% 溢价出售。将此字段设置为 2% 将确保您只收到高于当前市场价格 2%（或更多）的报价的提醒。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.availableNonBsqBalance=可用的非 BSQ 余额（RADC）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADC 挂单费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADC 买单费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.MIN_MAKER_FEE_RADC=最小 RADC 挂单费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.MIN_TAKER_FEE_RADC=最小 RADC 买单费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.RECIPIENT_RADC_ADDRESS=接收方 RADC 地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.ARBITRATOR_FEE=RADC 仲裁费
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.param.MAX_TRADE_LIMIT=最高 RADC 交易限额
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=比特币节点运营者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC 赞助地址所有者
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.wallet.send.sendBtcFunds=发送非 BSQ 资金（RADC）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.wallet.send.btcAmount=RADC 数量（无 BSQ 资金）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.wallet.send.receiverBtcAddress=接收者的 RADC 地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.wallet.send.sendBtc=发送 RADC 资金
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.tx.withdrawnFromWallet=RADC 已从钱包中取出
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.proposal.create.missingMinerFeeFunds=您没有足够的RADC资金来支付该提案交易。所有的 BSQ交易需要用 RADC 支付挖矿手续费。\n缺少：{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.proposal.create.missingIssuanceFunds=您没有足够的RADC资金来支付该提案交易。所有的 BSQ交易需要用 RADC 支付挖矿手续费以及发起交易也需要用 RADC 支付所需的 BSQ 数量（{0} 聪/BSQ）\n缺少：{1}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.feeTx.issuanceProposal.confirm.details={0}手续费：{1}\n为 BSQ 提案所需要的RADC：{2}（{3}聪 / BSQ）\n挖矿手续费：{4}（{5}聪 /字节）\n交易大小：{6}Kb\n\n如果你的要求被批准，你将收到你要求数量的 2 个 BSQ 提议的费用。\n\n你确定你想要发布{7}交易?
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.dashboard.avgPrice90=90天平均 BSQ/RADC 交易价格
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.dashboard.avgPrice30=30天平均 BSQ/RADC 交易价格
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_zh-hans.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_zh-hans.properties:contractWindow.btcAddresses=RADC 买家/RADC 卖家的比特币地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:contractWindow.onions=RADC 买家/RADC 卖家的网络地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:contractWindow.accountAge=RADC 买家/RADC 卖家的账龄
core/src/main/resources/i18n/displayStrings_zh-hans.properties:contractWindow.numDisputes=RADC 买家/RADC 卖家的纠纷编号
core/src/main/resources/i18n/displayStrings_zh-hans.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} 获得交易金额支付
core/src/main/resources/i18n/displayStrings_zh-hans.properties:disputeSummaryWindow.payout.getsAll=最大 RADC 支付数 {0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:disputeSummaryWindow.close.msg=工单已关闭{0}\n{1} 节点地址：{12}\n\n总结：\n交易 ID：{3}\n货币：{4}\n交易金额：{5}\nRADC 买家支付金额：{6}\nRADC 卖家支付金额：{7}\n\n纠纷原因：{8}\n\n总结：\n{9}\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:emptyWalletWindow.bsq.btcBalance=非 BSQ 聪余额
core/src/main/resources/i18n/displayStrings_zh-hans.properties:filterWindow.btcNode=筛选后的比特币节点（用逗号“,”隔开的地址+端口）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:filterWindow.preventPublicBtcNetwork=禁止使用公共比特币网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:filterWindow.btcFeeReceiverAddresses=比特币手续费接收地址
core/src/main/resources/i18n/displayStrings_zh-hans.properties:offerDetailsWindow.minBtcAmount=最小 RADC 数量
core/src/main/resources/i18n/displayStrings_zh-hans.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_zh-hans.properties:feeOptionWindow.info=您可以选择用 BSQ 或 RADC 支付交易费用。如果您选择 BSQ ，您会感谢这些交易手续费折扣。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:feeOptionWindow.useRADC=使用 RADC
core/src/main/resources/i18n/displayStrings_zh-hans.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_zh-hans.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.notSufficientConnectionsToBtcNetwork=你需要等待至少有{0}个与比特币网络的连接点。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.insufficientBtcFundsForBsqTx=你没有足够的 RADC 资金支付这笔交易的挖矿手续费。\n请充值您的 RADC 钱包。\n缺少的资金：{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.btcChangeBelowDustException=该交易创建的更改输出低于零头限制（546 聪），将被比特币网络拒绝。\n\n您需要将零头添加到发送量中，以避免生成零头输出。\n\n零头输出为{0}。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=您需要更多的 BSQ 去完成这笔交易 -  钱包中最后剩余 5.46 BSQ 将无法用于支付交易手续费因为 RADC 协议中的零头限制。\n\n你可以购买更多的 BSQ 或用 RADC支付交易手续费\n\n缺少 BSQ 资金：{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.noBsqFundsForBtcFeePayment=您的 BSQ 钱包没有足够的资金支付 BSQ 的交易费用。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:popup.warning.burnRADC=这笔交易是无法实现，因为 {0} 的挖矿手续费用会超过 {1} 的转账金额。请等到挖矿手续费再次降低或您积累了更多的 RADC 来转账。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:notification.trade.accepted=您 RADC {0} 的报价被接受。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:notification.trade.paymentStarted=RADC 买家已经开始付款。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_MAINNET=比特币主干网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_TESTNET=比特币测试网络
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_REGTEST=比特币回归测试
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_DAO_TESTNET=比特币 DAO 测试网络（弃用）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_DAO_BETANET=Bisq DAO 测试网络（比特币主要网络）
core/src/main/resources/i18n/displayStrings_zh-hans.properties:RADC_DAO_REGTEST=比特币 DAO 回归测试
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.moneyGram.info=使用 MoneyGram 时，RADC 买方必须将授权号码和收据的照片通过电子邮件发送给 RADC 卖方。收据必须清楚地显示卖方的全名、国家或地区、州和金额。买方将在交易过程中显示卖方的电子邮件。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.westernUnion.info=使用 Western Union 时，RADC 买方必须通过电子邮件将 MTCN（运单号）和收据照片发送给 RADC 卖方。收据上必须清楚地显示卖方的全名、城市、国家或地区和金额。买方将在交易过程中显示卖方的电子邮件。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.halCash.info=使用 HalCash 时，RADC 买方需要通过手机短信向 RADC 卖方发送 HalCash 代码。\n\n请确保不要超过银行允许您用半现金汇款的最高金额。每次取款的最低金额是 10 欧元，最高金额是 10 欧元。金额是 600 欧元。对于重复取款，每天每个接收者 3000 欧元，每月每个接收者 6000 欧元。请与您的银行核对这些限额，以确保它们使用与此处所述相同的限额。\n\n提现金额必须是 10 欧元的倍数，因为您不能从 ATM 机提取其他金额。 创建报价和下单屏幕中的 UI 将调整 RADC 金额，使 EUR 金额正确。你不能使用基于市场的价格，因为欧元的数量会随着价格的变化而变化。\n
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.usPostalMoneyOrder.info=在 Bisq 上交易  US Postal Money Orders （USPMO）您必须理解下述条款：\n\n- RADC 买方必须在发送方和收款人字段中都写上 RADC 卖方的名称，并在发送之前对 USPMO 和信封进行高分辨率照片拍照，并带有跟踪证明。\n- RADC 买方必须将 USPMO 连同交货确认书一起发送给 RADC 卖方。\n\n如果需要调解，或有交易纠纷，您将需要将照片连同 USPMO 编号，邮局编号和交易金额一起发送给 Bisq 调解员或退款代理，以便他们进行验证美国邮局网站上的详细信息。\n\n如未能提供要求的交易数据将在纠纷中直接判负\n\n在所有争议案件中，USPMO 发送方在向调解人或仲裁员提供证据/证明时承担 100％ 的责任。\n\n如果您不理解这些要求，请不要在 Bisq 上使用 USPMO 进行交易。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_zh-hans.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.fraction=此充值将会产生小于 1  聪的比特币数量。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.toLarge=不允许充值大于{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.toSmall=不允许充值小于{0}
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.invalidAddress=地址不正确，请检查地址格式。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.exceedsMaxTradeLimit=您的交易限额为 {0}。
core/src/main/resources/i18n/displayStrings_zh-hans.properties:validation.btc.invalidFormat=无效格式的比特币地址
core/src/main/resources/i18n/displayStrings_cs.properties:shared.buyingRADCWith=nakoupit RADC za {0}
core/src/main/resources/i18n/displayStrings_cs.properties:shared.sellingRADCFor=prodat RADC za {0}
core/src/main/resources/i18n/displayStrings_cs.properties:shared.buyingCurrency=nakoupit {0} (prodat RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:shared.sellingCurrency=prodat {0} (nakoupit RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_cs.properties:shared.TheRADCBuyer=RADC kupující
core/src/main/resources/i18n/displayStrings_cs.properties:shared.paymentDetails=RADC {0} detaily platby
core/src/main/resources/i18n/displayStrings_cs.properties:shared.btcAmount=Částka RADC
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.menu.buyBtc=Koupit RADC
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.menu.sellBtc=Prodat RADC
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcFeeRate=/ Aktuální poplatek: {0} sat/vB
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo.initializing=Připojování do Bitcoinové sítě
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizace s {0} v bloku: {1} / {2}
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo.synchronizedWith=Synchronizováno s {0} v bloku {1}
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo.connectingTo=Připojování
core/src/main/resources/i18n/displayStrings_cs.properties:mainView.footer.btcInfo.connectionFailed=Připojení se nezdařilo
core/src/main/resources/i18n/displayStrings_cs.properties:market.spread.numberOfBuyOffersColumn=Koupit RADC ({0})
core/src/main/resources/i18n/displayStrings_cs.properties:market.spread.numberOfSellOffersColumn=Prodat RADC ({0})
core/src/main/resources/i18n/displayStrings_cs.properties:market.spread.totalAmountColumn=Celkem RADC ({0})
core/src/main/resources/i18n/displayStrings_cs.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=koupit RADC od uživatele s podepsaným účtem
core/src/main/resources/i18n/displayStrings_cs.properties:offerbook.deposit=Kauce RADC (%)
core/src/main/resources/i18n/displayStrings_cs.properties:createOffer.amount.prompt=Vložte množství v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:createOffer.amountPriceBox.amountDescription=Množství RADC, které chcete {0}
core/src/main/resources/i18n/displayStrings_cs.properties:createOffer.amountPriceBox.minAmountDescription=Minimální množství RADC
core/src/main/resources/i18n/displayStrings_cs.properties:createOffer.tradeFee.descriptionRADCOnly=Obchodní poplatek
core/src/main/resources/i18n/displayStrings_cs.properties:takeOffer.amount.prompt=Vložte množství v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:takeOffer.amountPriceBox.buy.amountDescription=Množství RADC na prodej
core/src/main/resources/i18n/displayStrings_cs.properties:takeOffer.amountPriceBox.sell.amountDescription=Množství RADC k nákupu
core/src/main/resources/i18n/displayStrings_cs.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Částka, kterou jste zadali, přesahuje počet povolených desetinných míst.\nČástka byla upravena na 4 desetinná místa.
core/src/main/resources/i18n/displayStrings_cs.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Toto vstupní množství by vytvořilo zanedbatelné drobné pro prodejce RADC.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.refTextWarn=Důležité: když vyplňujete platební informace, nechte pole \"důvod platby\" prázdné. NEPOUŽÍVEJTE ID obchodu ani jiné poznámky jako např. 'bitcoin', 'RADC' nebo 'Bisq'. Můžete se se svým obchodním partnerem domluvit pomocí chatu na identifikaci platby, která bude vyhovovat oběma.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.altcoin=Převeďte prosím z vaší externí {0} peněženky\n{1} prodejci RADC.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.cash=Přejděte do banky a zaplaťte {0} prodejci RADC.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.cash.extra=DŮLEŽITÉ POŽADAVKY:\nPo provedení platby zapište na papírový doklad: NO REFUNDS - bez náhrady.\nPoté ji roztrhněte na 2 části, vytvořte fotografii a odešlete ji na e-mailovou adresu prodejce RADC.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.moneyGram=Zaplaťte prosím {0} prodejci RADC pomocí MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.moneyGram.extra=DŮLEŽITÉ POŽADAVKY:\nPo provedení platby zašlete autorizační číslo a fotografii s potvrzením e-mailem prodejci RADC.\nPotvrzení musí jasně uvádět celé jméno, zemi, stát a částku prodávajícího. E-mail prodejce je: {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.westernUnion=Zaplaťte prosím {0} prodejci RADC pomocí Western Union.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.westernUnion.extra=DŮLEŽITÉ POŽADAVKY:\nPo provedení platby zašlete prodejci RADC e-mail s MTCN (sledovací číslo) a fotografii s potvrzením o přijetí.\nPotvrzení musí jasně uvádět celé jméno prodávajícího, město, zemi a částku. E-mail prodejce je: {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.postal=Zašlete prosím {0} prodejci RADC pomocí \"US Postal Money Order\".\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.cashByMail=Zašlete prosím {0} prodejci RADC v poštovní zásilce (\"Cash by Mail\"). Konkrétní instrukce naleznete v obchodní smlouvě. V případě pochybností se můžete zeptat protistrany pomocí obchodního chatu. Více informací naleznete na Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.pay=Prosím uhraďte {0} pomocí zvolené platební metody prodejci RADC. V dalším kroku naleznete detaily o účtu prodejce.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.f2f=Kontaktujte prodejce RADC prostřednictvím poskytnutého kontaktu a domluvte si schůzku kde zaplatíte {0}.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Odeslali jste papírový doklad prodejci RADC?
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Zapamatujte si:\nMusíte napsat na papírový doklad: NO REFUNDS - bez náhrady.\nPoté ho roztrhněte na 2 části, vytvořte fotografii a odešlete ji na e-mailovou adresu prodejce RADC.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Musíte zaslat autorizační číslo a fotografii dokladu e-mailem prodejci RADC.\nDoklad musí jasně uvádět celé jméno prodávajícího, zemi, stát a částku. E-mail prodejce je: {0}.\n\nOdeslali jste autorizační číslo a smlouvu prodejci?
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Musíte odeslat MTCN (sledovací číslo) a fotografii dokladu e-mailem prodejci RADC.\nDoklad musí jasně uvádět celé jméno prodávajícího, město, zemi a částku. E-mail prodejce je: {0}.\n\nOdeslali jste MTCN a smlouvu prodejci?
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Musíte odeslat jak textovou zprávu s kódem HalCash tak i obchodní ID ({0}) prodejci RADC.\nMobilní číslo prodejce je {1}.\n\nPoslali jste kód prodejci?
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=Nezadali jste ID transakce a klíč transakce.\n\nNeposkytnutím těchto údajů nemůže peer použít funkci automatického potvrzení k uvolnění RADC, jakmile bude přijat XMR.\nKromě toho Bisq vyžaduje, aby odesílatel transakce XMR mohl tyto informace poskytnout mediátorovi nebo rozhodci v případě sporu.\nDalší podrobnosti na wiki Bisq: [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_seller.waitPayment.msg=Vkladová transakce má alespoň jedno potvrzení na blockchainu.\nMusíte počkat, než kupující RADC zahájí platbu {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_seller.warn=Kupující RADC dosud neprovedl platbu {0}.\nMusíte počkat, než zahájí platbu.\nPokud obchod nebyl dokončen dne {1}, bude rozhodce vyšetřovat.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step2_seller.openForDispute=Kupující RADC ještě nezačal s platbou!\nMax. povolené období pro obchod vypršelo.\nMůžete počkat déle a dát obchodnímu partnerovi více času nebo požádat o pomoc mediátora.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_buyer.wait.headline=Počkejte na potvrzení platby prodejce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_buyer.wait.info=Čekání na potvrzení prodejce RADC na přijetí platby {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_buyer.warn.part2=Prodejce RADC vaši platbu stále nepotvrdil. Zkontrolujte {0}, zda bylo odeslání platby úspěšné.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_buyer.openForDispute=Prodejce RADC nepotvrdil vaši platbu! Max. období pro uskutečnění obchodu uplynulo. Můžete počkat déle a dát obchodnímu partnerovi více času nebo požádat o pomoc mediátora.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.postal={0}Zkontrolujte, zda jste od kupujícího RADC obdrželi {1} přes \"US Postal Money Order\".
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.cashByMail={0}Zkontrolujte, zda jste od kupujícího RADC obdrželi {1} přes \"Cash by Mail\".
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.bank=Váš obchodní partner potvrdil, že zahájil platbu {0}.\n\nPřejděte na webovou stránku online bankovnictví a zkontrolujte, zda jste od kupujícího RADC obdrželi {1}.
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.cash=Vzhledem k tomu, že se platba provádí prostřednictvím hotovostního vkladu, musí kupující RADC napsat na papírový doklad \"NO REFUND\", roztrhat ho na 2 části a odeslat vám e-mailem fotografii.\n\nAbyste se vyhnuli riziku zpětného zúčtování, potvrďte pouze, zda jste obdrželi e-mail a zda si jste jisti, že papírový doklad je platný.\nPokud si nejste jisti, {0}
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.moneyGram=Kupující vám musí zaslat e-mailem autorizační číslo a fotografii s potvrzením.\nPotvrzení musí jasně uvádět vaše celé jméno, zemi, stát a částku. Zkontrolujte si prosím váš e-mail, pokud jste obdrželi autorizační číslo.\n\nPo uzavření tohoto vyskakovacího okna se zobrazí jméno a adresa kupujícího RADC pro vyzvednutí peněz z MoneyGram.\n\nPotvrďte příjem až po úspěšném vyzvednutí peněz!
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.westernUnion=Kupující vám musí zaslat MTCN (sledovací číslo) a fotografii s potvrzením e-mailem.\nPotvrzení musí jasně uvádět vaše celé jméno, město, zemi a částku. Zkontrolujte svůj e-mail, pokud jste obdrželi MTCN.\n\nPo zavření tohoto vyskakovacího okna uvidíte jméno a adresu kupujícího RADC pro vyzvednutí peněz z Western Union.\n\nPotvrďte příjem až po úspěšném vyzvednutí peněz!
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.buyerStartedPayment=Kupující RADC zahájil platbu {0}.\n{1}
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Vezměte prosím na vědomí, že jakmile potvrdíte příjem, dosud uzamčený obchodovaný RADC bude uvolněn kupujícímu a kauce bude vrácena.\n\n
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.step5_buyer.withdrawRADC=Vyberte své bitcoiny
core/src/main/resources/i18n/displayStrings_cs.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_cs.properties:funds.deposit.amount=Částka v RADC (volitelná)
core/src/main/resources/i18n/displayStrings_cs.properties:funds.tx.withdrawnFromBSQWallet=Výběr RADC z BSQ peněženky
core/src/main/resources/i18n/displayStrings_cs.properties:funds.tx.dustAttackTx.popup=Tato transakce odesílá do vaší peněženky velmi malou částku RADC a může se jednat o pokus společností provádějících analýzu blockchainu o špehování vaší peněženky.\n\nPoužijete-li tento transakční výstup ve výdajové transakci, zjistí, že jste pravděpodobně také vlastníkem jiné adresy (sloučení mincí).\n\nKvůli ochraně vašeho soukromí ignoruje peněženka Bisq takové drobné výstupy pro účely utrácení a na obrazovce zůstatku. Můžete nastavit hodnotu "drobnosti", kdy je výstup považován za drobné, v nastavení.
core/src/main/resources/i18n/displayStrings_cs.properties:support.buyerAddress=Adresa kupujícího RADC
core/src/main/resources/i18n/displayStrings_cs.properties:support.sellerAddress=Adresa prodejce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:support.buyerOfferer=Kupující RADC/Tvůrce
core/src/main/resources/i18n/displayStrings_cs.properties:support.sellerOfferer=Prodejce RADC/Tvůrce
core/src/main/resources/i18n/displayStrings_cs.properties:support.buyerTaker=Kupující RADC/Příjemce
core/src/main/resources/i18n/displayStrings_cs.properties:support.sellerTaker=Prodávající RADC/Příjemce
core/src/main/resources/i18n/displayStrings_cs.properties:support.initialInfo=Do níže uvedeného textového pole zadejte popis problému. Přidejte co nejvíce informací k urychlení doby řešení sporu.\n\nZde je kontrolní seznam informací, které byste měli poskytnout:\n\t● Pokud kupujete RADC: Provedli jste převod Fiat nebo Altcoinu? Pokud ano, klikli jste v aplikaci na tlačítko „Platba zahájena“?\n\t● Pokud jste prodejcem RADC: Obdrželi jste platbu Fiat nebo Altcoinu? Pokud ano, klikli jste v aplikaci na tlačítko „Platba přijata“?\n\t● Kterou verzi Bisq používáte?\n\t● Jaký operační systém používáte?\n\t● Pokud se vyskytl problém s neúspěšnými transakcemi, zvažte přechod na nový datový adresář.\n\t  Někdy dojde k poškození datového adresáře a vede to k podivným chybám.\n\tViz: https://bisq.wiki/Switching_to_a_new_data_directory\n\nSeznamte se prosím se základními pravidly procesu sporu:\n\t● Musíte odpovědět na požadavky {0} do 2 dnů.\n\t● {1}\n\t● Maximální trvání sporu je 14 dní.\n\t● Musíte spolupracovat s {2} a poskytnout informace, které požaduje, aby jste obhájili svou pozici.\n\t● Při prvním spuštění aplikace jste přijali pravidla uvedena v dokumentu sporu v uživatelské smlouvě.\n\nDalší informace o procesu sporu naleznete na: {3}
core/src/main/resources/i18n/displayStrings_cs.properties:setting.preferences.autoConfirmMaxTradeSize=Max. částka obchodu (RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.btcHeader=Bitcoinová síť
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.btcNodesLabel=Použijte vlastní Bitcoin Core node
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.useTorForBtcJLabel=Použít Tor pro Bitcoinovou síť
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.warn.invalidBtcConfig=Připojení k bitcoinové síti selhalo, protože je vaše konfigurace  neplatná.\n\nVaše konfigurace byla resetována, aby se místo toho použily poskytnuté bitcoinové uzly. Budete muset restartovat aplikaci.
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.localhostBtcNodeInfo=Základní informace: Bisq při spuštění hledá místní Bitcoinový uzel. Pokud je nalezen, Bisq bude komunikovat se sítí Bitcoin výhradně skrze něj.
core/src/main/resources/i18n/displayStrings_cs.properties:settings.net.chainHeightLabel=Poslední výška bloku RADC
core/src/main/resources/i18n/displayStrings_cs.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Otevřít nástroj nouzové peněženky pro RADC peněženku
core/src/main/resources/i18n/displayStrings_cs.properties:setting.info.msg=Při prodeji RADC za XMR můžete pomocí funkce automatického potvrzení ověřit, že do vaší peněženky bylo odesláno správné množství XMR, takže Bisq může automaticky označit obchod jako dokončený, což zrychlí obchodování pro všechny.\n\nAutomatické potvrzení zkontroluje transakci XMR alespoň na 2 uzlech průzkumníka XMR pomocí klíče soukromé transakce poskytnutého odesílatelem XMR. Ve výchozím nastavení používá Bisq uzly průzkumníka spuštěné přispěvateli Bisq, ale pro maximální soukromí a zabezpečení doporučujeme spustit vlastní uzel průzkumníka XMR.\n\nMůžete také nastavit maximální částku RADC na obchod, která se má automaticky potvrdit, a také počet požadovaných potvrzení zde v Nastavení.\n\nZobrazit další podrobnosti (včetně toho, jak nastavit vlastní uzel průzkumníka) na Bisq wiki: [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_cs.properties:account.menu.walletInfo.balance.info=Zde jsou zobrazeny celkové zůstatky v interní peněžence včetně nepotvrzených transakcí.\nInterní zůstatek RADC uvedený níže by měl odpovídat součtu hodnot 'Dostupný zůstatek' a 'Rezervováno v nabídkách' v pravém horním rohu aplikace.
core/src/main/resources/i18n/displayStrings_cs.properties:account.altcoin.popup.liquidbitcoin.msg=Obchodování s L-RADC na Bisq vyžaduje, abyste pochopili následující skutečnosti:\n\nKdyž přijímáte L-RADC za obchod na Bisq, nemůžete použít mobilní peněženku Green od Blockstreamu ani jinou custodial peněženku nebo peněženku na burze. L-RADC musíte přijmout pouze do peněženky Liquid Elements Core nebo do jiné L-RADC peněženky, která vám umožní získat slepý klíč pro vaši slepou adresu L-RADC.\n\nV případě, že je nutné zprostředkování, nebo pokud dojde k obchodnímu sporu, musíte zprostředkujícímu mediátorovi Bisq nebo agentovi, který vrací peníze zaslat slepý klíč pro vaši L-RADC adresu, aby mohli ověřit podrobnosti vaší důvěrné transakce na svém vlastním Elements Core full-nodu.\n\nNeposkytnutí požadovaných informací zprostředkovateli nebo agentovi pro vrácení peněz povede ke prohrání sporu. Ve všech sporných případech nese příjemce L-RADC 100% břemeno odpovědnosti za poskytnutí kryptografického důkazu zprostředkovateli nebo agentovi pro vrácení peněz.\n\nPokud těmto požadavkům nerozumíte, neobchodujte s L-RADC na Bisq.
core/src/main/resources/i18n/displayStrings_cs.properties:account.seed.info=Napište prosím seed slova peněženky a datum! Peněženku můžete kdykoli obnovit pomocí seed slov a datumu.\nStejná seed slova se používají pro peněženku RADC a BSQ.\n\nMěli byste si zapsat seed slova na list papíru. Neukládejte je do počítače.\n\nUpozorňujeme, že seed slova NEJSOU náhradou za zálohu.\nChcete-li obnovit stav a data aplikace, musíte vytvořit zálohu celého adresáře aplikace z obrazovky \"Účet/Záloha\".\nImport seed slov se doporučuje pouze v naléhavých případech. Aplikace nebude funkční bez řádného zálohování databázových souborů a klíčů!
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.priceAlert.high.label=Upozorněte, pokud bude cena RADC nad
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.priceAlert.low.label=Upozorněte, pokud bude cena RADC pod
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.trade.message.msg.started=Kupující RADC zahájil platbu za obchod s ID {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.marketAlert.offerType.buy=Nákupní nabídky (Chci prodat RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.marketAlert.offerType.sell=Prodejní nabídky (Chci si koupit RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:account.notifications.marketAlert.trigger.info=Když je nastavena cenová vzdálenost, obdržíte upozornění pouze v případě, že je zveřejněna nabídka, která splňuje (nebo překračuje) vaše požadavky. Příklad: chcete prodat RADC, ale budete prodávat pouze s 2% přirážkou k aktuální tržní ceně. Nastavení tohoto pole na 2% zajistí, že budete dostávat upozornění pouze na nabídky s cenami, které jsou o 2% (nebo více) nad aktuální tržní cenou.
core/src/main/resources/i18n/displayStrings_cs.properties:dao.availableNonBsqBalance=Dostupný zůstatek mimo BSQ (RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Poplatek tvůrce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Poplatek příjemce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.MIN_MAKER_FEE_RADC=Min. poplatek tvůrce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.MIN_TAKER_FEE_RADC=Min. poplatek příjemce RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.RECIPIENT_RADC_ADDRESS=RADC adresa příjemce
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.ARBITRATOR_FEE=Poplatek rozhodce v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.param.MAX_TRADE_LIMIT=Max. obchodní limit v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Operátor Bitcoinového nodu
core/src/main/resources/i18n/displayStrings_cs.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Majitel dárcovské adresy RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.wallet.send.sendBtcFunds=Odeslat prostředky jiné než BSQ (RADC)
core/src/main/resources/i18n/displayStrings_cs.properties:dao.wallet.send.btcAmount=Částka v RADC (jiná než BSQ prostředky)
core/src/main/resources/i18n/displayStrings_cs.properties:dao.wallet.send.receiverBtcAddress=RADC adresa příjemce
core/src/main/resources/i18n/displayStrings_cs.properties:dao.wallet.send.sendBtc=Pošlete RADC prostředky
core/src/main/resources/i18n/displayStrings_cs.properties:dao.tx.withdrawnFromWallet=RADC vybrané z peněženky
core/src/main/resources/i18n/displayStrings_cs.properties:dao.proposal.create.missingMinerFeeFunds=Nemáte dostatečné prostředky RADC pro vytvoření transakce návrhu. Všechny transakce BSQ vyžadují poplatek za těžbu v RADC.\nChybí: {0}
core/src/main/resources/i18n/displayStrings_cs.properties:dao.proposal.create.missingIssuanceFunds=Nemáte dostatečné prostředky RADC pro vytvoření transakce návrhu. Všechny transakce BSQ vyžadují poplatek za těžbu v RADC a emisní transakce také vyžadují RADC pro požadovanou částku BSQ ({0} Satoshi/BSQ).\nChybí: {1}
core/src/main/resources/i18n/displayStrings_cs.properties:dao.feeTx.issuanceProposal.confirm.details={0} poplatek: {1}\nPro vydání BSQ je potřeba RADC: {2} ({3} Satoshi/BSQ)\nPoplatek za těžbu: {4} ({5} Satoshi/vbyte)\nTransakční vsize: {6} vKb\n\nPokud bude vaše žádost schválena, obdržíte požadovanou částku bez poplatku za návrh 2 BSQ.\n\nOpravdu chcete publikovat transakci {7}?
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.dashboard.avgPrice90=Průměrná obchodní cena BSQ/RADC za 90 dní
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.dashboard.avgPrice30=Průměrná obchodní cena BSQ/RADC za 30 dní
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.dashboard.volumeBtc=Celkový objem obchodů v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Průměrný kurz BSQ/RADC obchodů uzavřených ve zvoleném časovém intervalu
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Objem obchodů v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.supply.bsqBtcPrice=kurz BSQ/RADC
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.supply.btcUsdPrice=kurz RADC/USD
core/src/main/resources/i18n/displayStrings_cs.properties:dao.factsAndFigures.supply.btcTradeFee=RADC obchodní poplatky
core/src/main/resources/i18n/displayStrings_cs.properties:contractWindow.btcAddresses=Bitcoinová adresa RADC kupce / RADC prodejce
core/src/main/resources/i18n/displayStrings_cs.properties:contractWindow.onions=Síťová adresa RADC kupce / RADC prodejce
core/src/main/resources/i18n/displayStrings_cs.properties:contractWindow.accountAge=Stáří účtu RADC kupce / RADC prodejce
core/src/main/resources/i18n/displayStrings_cs.properties:contractWindow.numDisputes=Počet sporů RADC kupce / RADC prodejce
core/src/main/resources/i18n/displayStrings_cs.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} dostane výplatu částky obchodu
core/src/main/resources/i18n/displayStrings_cs.properties:disputeSummaryWindow.payout.getsAll=RADC {0} dostane maximální výplatu
core/src/main/resources/i18n/displayStrings_cs.properties:disputeSummaryWindow.close.msg=Ticket uzavřen {0}\n{1} adresa uzlu: {2}\n\nSouhrn:\nObchodní ID: {3}\nMěna: {4}\nVýše obchodu: {5}\nVýplatní částka pro kupujícího RADC: {6}\nVýplatní částka pro prodejce RADC: {7}\n\nDůvod sporu: {8}\n\nSouhrnné poznámky:\n{9}\n
core/src/main/resources/i18n/displayStrings_cs.properties:emptyWalletWindow.bsq.btcBalance=Zůstatek satoshi jiných než BSQ
core/src/main/resources/i18n/displayStrings_cs.properties:filterWindow.btcNode=Filtrované Bitcoinové nody (adresy+porty oddělené čárkami)
core/src/main/resources/i18n/displayStrings_cs.properties:filterWindow.preventPublicBtcNetwork=Zabraňte použití veřejné bitcoinové sítě
core/src/main/resources/i18n/displayStrings_cs.properties:filterWindow.btcFeeReceiverAddresses=Adresy příjemců poplatků RADC
core/src/main/resources/i18n/displayStrings_cs.properties:offerDetailsWindow.minBtcAmount=Min. částka RADC
core/src/main/resources/i18n/displayStrings_cs.properties:txDetailsWindow.btc.note=Poslali jste RADC.
core/src/main/resources/i18n/displayStrings_cs.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Suma obchodních poplatků v RADC
core/src/main/resources/i18n/displayStrings_cs.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} z celkového objemu obchodů)
core/src/main/resources/i18n/displayStrings_cs.properties:feeOptionWindow.info=Můžete si vybrat, zda chcete zaplatit obchodní poplatek v BSQ nebo v RADC. Pokud zvolíte BSQ, oceníte zlevněný obchodní poplatek.
core/src/main/resources/i18n/displayStrings_cs.properties:feeOptionWindow.useRADC=Použít RADC
core/src/main/resources/i18n/displayStrings_cs.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_cs.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Musíte počkat, až budete mít alespoň {0} připojení k bitcoinové síti.
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.insufficientBtcFundsForBsqTx=Nemáte dostatečné prostředky RADC k zaplacení poplatku za těžbu za tuto transakci.\nFinancujte prosím svou RADC peněženku.\nChybějící prostředky: {0}
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.btcChangeBelowDustException=Tato transakce vytváří výstup, který je pod limitem drobných (546 satoshi) a byl by bitcoinovou sítí odmítnut.\n\nMusíte přidat vyšší množství drobných k vašemu odesílanému množství, abyste se vyhnuli vytváření drobných.\n\nVýstup drobných je {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=K provedení této transakce budete potřebovat více BSQ - posledních 5,46 BSQ ve vaší peněžence nelze použít k placení obchodních poplatků kvůli omezení prachových mincí v bitcoinovém protokolu.\n\nMůžete si buď koupit více BSQ, nebo zaplatit obchodní poplatky pomocí RADC.\n\nChybějící prostředky: {0}
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.noBsqFundsForBtcFeePayment=Peněženka BSQ nemá dostatečné prostředky na zaplacení obchodního poplatku v BSQ.
core/src/main/resources/i18n/displayStrings_cs.properties:popup.warning.burnRADC=Tato transakce není možná, protože poplatky za těžbu {0} by přesáhly částku převodu {1}. Počkejte prosím, dokud nebudou poplatky za těžbu opět nízké nebo dokud nenahromadíte více RADC k převodu.
core/src/main/resources/i18n/displayStrings_cs.properties:notification.trade.accepted=Vaše nabídka byla přijata RADC {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:notification.trade.paymentStarted=Kupující RADC zahájil platbu.
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_MAINNET=Bitcoin Mainnet
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_TESTNET=Bitcoin Testnet
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_REGTEST=Bitcoin Regtest
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_DAO_TESTNET=Bitcoin DAO Testnet (zastaralé)
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_cs.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_cs.properties:payment.makeOfferToUnsignedAccount.warning=Kvůli nedávnému růstu ceny RADC si buďte vědomi, že prodej 0.01 RADC nebo méně s sebou nese vyšší riziko než dříve.\n\nDůrazně doporučujeme jednu z následujících možností:\n- vytvářejte nabídky s objemem >0.01 RADC, abyste tak obchodovali pouze s podepsanými/důvěryhodnými kupci\n- nabídky k prodeji <0.01 RADC omezte na hodnotu zhruba do 100 USD; podvodníci se takovým nabídkám v minulosti spíše vyhýbali\n\nVývojáři Bisq pracují na lepším modelu zabezpečení platebních účtů pro takovéto malé transakce. Připojte se k diskuzi zde: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_cs.properties:payment.takeOfferFromUnsignedAccount.warning=Kvůli nedávnému růstu ceny RADC si buďte vědomi, že prodej 0.01 RADC nebo méně s sebou nese vyšší riziko než dříve.\n\nDůrazně doporučujeme jednu z následujících možností:\n- akceptujte nabídky pouze od kupců s podepsanými účty\n- hodnotu obchodů s nepodepsanými (méně důvěryhodnými) účty protistrany omezte zhruba do 100 USD; podvodníci se s takto nízkými transakcemi v minulosti spíše nezabývali\n\nVývojáři Bisq pracují na lepším modelu zabezpečení platebních účtů pro takovéto malé transakce. Připojte se k diskuzi zde: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_cs.properties:payment.moneyGram.info=Při používání MoneyGram musí RADC kupující zaslat autorizační číslo a fotografii potvrzení e-mailem prodejci RADC. Potvrzení musí jasně uvádět celé jméno prodejce, zemi, stát a částku. E-mail prodávajícího se kupujícímu zobrazí během procesu obchodování.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.westernUnion.info=Při používání služby Western Union musí kupující RADC zaslat prodejci RADC e-mailem MTCN (sledovací číslo) a fotografii potvrzení. Potvrzení musí jasně uvádět celé jméno prodejce, město, zemi a částku. E-mail prodávajícího se kupujícímu zobrazí během procesu obchodování.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.halCash.info=Při používání HalCash musí kupující RADC poslat prodejci RADC kód HalCash prostřednictvím textové zprávy z mobilního telefonu.\n\nUjistěte se, že nepřekračujete maximální částku, kterou vám banka umožňuje odesílat pomocí HalCash. Min. částka za výběr je 10 EUR a max. částka je 600 EUR. Pro opakované výběry je to 3000 EUR za příjemce za den a 6000 EUR za příjemce za měsíc. Zkontrolujte prosím tyto limity u své banky, abyste se ujistili, že používají stejné limity, jaké jsou zde uvedeny.\n\nČástka pro výběr musí být násobkem 10 EUR, protože z bankomatu nemůžete vybrat jiné částky. Uživatelské rozhraní na obrazovce vytvořit-nabídku and přijmout-nabídku upraví částku RADC tak, aby částka EUR byla správná. Nemůžete použít tržní cenu, protože částka v EURECH se mění s měnícími se cenami.\n\nV případě sporu musí kupující RADC poskytnout důkaz, že zaslal EURA.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.usPostalMoneyOrder.info=Obchodování pomocí amerických poštovních poukázek (USPMO) na Bisq vyžaduje, abyste rozuměli následujícímu:\n\n- Kupující RADC musí před odesláním napsat jméno prodejce RADC do polí plátce i příjemce a pořídit fotografii USPMO a obálku s dokladem o sledování ve vysokém rozlišení.\n- Kupující RADC musí odeslat USPMO prodejci RADC s potvrzením dodávky.\n\nV případě, že je nutná mediace, nebo pokud dojde k obchodnímu sporu, budete povinni poslat fotografie mediátorovi Bisq nebo zástupci pro vrácení peněz spolu s pořadovým číslem USPMO, číslem pošty a částkou dolaru, aby mohli ověřit podrobnosti na webu US Post Office.\n\nNeposkytnutí požadovaných informací mediátorovi nebo arbitrovi bude mít za následek ztrátu případu sporu.\n\nVe všech sporných případech nese odesílatel USPMO 100% břemeno odpovědnosti za poskytnutí důkazů mediátorovi nebo arbitrovi.\n\nPokud těmto požadavkům nerozumíte, neobchodujte pomocí USPMO na Bisq.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.cashByMail.info=Obchodování metodou „hotovost poštou“ (cash-by-mail; CBM) vyžaduje, abyste porozuměli následujícímu:\n\n● Kupující RADC by měl zabalit hotovost do sáčku, který je určen pro zabalení cenností a který má opatření proti neoprávněné manipulaci.\n● Kupující by měl z procesu balení hotovosti pořídit video nebo fotografie ve vysokém rozlišení. Adresa a číslo zásilky musí být viditelné na obalu.\n● Kupující by měl odeslat balíček s hotovostí prodávajícímu doporučeně, a s odpovídajícím pojištěním.\n● Prodávající by měl otevření balíčku natočit tak, aby bylo na videu patrné číslo zásilky poskytnuté odesílatelem.\n● Tvůrce nabídky musí uvést jakékoli zvláštní podmínky v poli „Dodatečné informace“ platebního účtu.\n● Příjemce nabídky souhlasí s podmínkami tvůrce nabídky přijetím jeho nabídky.\n\nObchody CBM vyžadují, aby obě strany jednaly poctivě.\n\n● Jednotlivé kroky jsou hůře ověřitelné než u ostatních platebních metod. Díky tomu je řešení sporů mnohem obtížnější.\n● Pokuste se vyřešit spory přímo se svou protistranou pomocí obchodního chatu. Toto je vaše nejslibnější cesta k vyřešení jakéhokoli sporu.\n● Mediátoři mohou váš případ posoudit a navrhnout řešení, ale NENÍ zaručeno, že vám pomohou.\n● Pokud je do sporu zapojen mediátor a některá ze stran odmítne jeho návrh, prostředky obou partnerů budou zaslány na darovací adresu Bisq DAO [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction] a obchod bude efektivně ukončen.\n● Pokud jeden z obchodníků zamítne návrh mediátora a zahájí arbitráž, může to vést až ke ztrátě obchodovaného RADC i kauce.\n● Rozhodci učiní své rozhodnutí na základě důkazů, které jim budou poskytnuty. Proto prosím dodržujte výše uvedené postupy, abyste měli důkazy pro případ sporu. U obchodů CBM je rozhodnutí rozhodců konečné.\n● Bisq DAO na žádosti o vyrovnání/odškodnění jakýchkoli ztracených finančních prostředků vyplývajících z obchodů CBM NEBUDE brát zřetel.\n\nChcete-li si být jisti, že plně rozumíte požadavkům obchodů CBM, viz: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nPokud těmto požadavkům nerozumíte, neobchodujte pomocí CBM na Bisq.
core/src/main/resources/i18n/displayStrings_cs.properties:payment.f2f.info=Obchody „tváří v tvář“ mají různá pravidla a přicházejí s jinými riziky než online transakce.\n\nHlavní rozdíly jsou:\n● Obchodní partneři si musí vyměňovat informace o místě a čase schůzky pomocí poskytnutých kontaktních údajů.\n● Obchodní partneři musí přinést své notebooky a na místě setkání potvrdit „platba odeslána“ a „platba přijata“.\n● Pokud má tvůrce speciální „podmínky“, musí uvést podmínky v textovém poli „Dodatečné informace“ na účtu.\n● Přijetím nabídky zadavatel souhlasí s uvedenými „podmínkami a podmínkami“ tvůrce.\n● V případě sporu nemůže být mediátor nebo rozhodce příliš nápomocný, protože je obvykle obtížné získat důkazy o tom, co se na schůzce stalo. V takových případech mohou být prostředky RADC uzamčeny na dobu neurčitou nebo dokud se obchodní partneři nedohodnou.\n\nAbyste si byli jisti, že plně rozumíte rozdílům v obchodech „tváří v tvář“, přečtěte si pokyny a doporučení na adrese: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_cs.properties:payment.amazonGiftCard.info=Chcete-li platit dárkovou kartou Amazon eGift, budete muset prodejci RADC poslat kartu Amazon eGift přes svůj účet Amazon.\n\nPro další detaily a rady viz wiki: [HYPERLINK:https://bisq.wiki/Amazon_eGift_card].\n\nZde jsou tři důležité poznámky:\n- Preferujte dárkové karty v hodnotě do 100 USD, protože Amazon může považovat nákupy karet s vyššími částkami jako podezřelé a zablokovat je.\n- Na kartě do zprávy pro příjemce můžete přidat i vlastní originální text (např. "Happy birthday Susan!"). V takovém případě o tom informujte protistranu pomocí obchodního chatu, aby mohli s jistotou ověřit, že obdržená dárková karta pochází od vás.\n- Karty Amazon eGift lze uplatnit pouze na té stránce Amazon, na které byly také koupeny (např. karta koupená na amazon.it může být uplatněna zase jen na amazon.it).
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.fraction=Zadání povede k hodnotě bitcoinu menší než 1 satoshi
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.toLarge=Vstup větší než {0} není povolen.
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.toSmall=Vstup menší než {0} není povolen.
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.invalidAddress=Adresa není správná. Zkontrolujte formát adresy.
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.exceedsMaxTradeLimit=Váš obchodní limit je {0}.
core/src/main/resources/i18n/displayStrings_cs.properties:validation.btc.invalidFormat=Neplatný formát bitcoinové adresy.
core/src/main/resources/i18n/displayStrings_th.properties:shared.buyingRADCWith=การซื้อ RADC กับ {0}
core/src/main/resources/i18n/displayStrings_th.properties:shared.sellingRADCFor=การขาย RADC แก่ {0}
core/src/main/resources/i18n/displayStrings_th.properties:shared.buyingCurrency=การซื้อ {0} (การขาย RADC)
core/src/main/resources/i18n/displayStrings_th.properties:shared.sellingCurrency=การขาย {0} (การซื้อ RADC)
core/src/main/resources/i18n/displayStrings_th.properties:shared.RADCMinMax=RADC (ต่ำสุด-สูงสุด)
core/src/main/resources/i18n/displayStrings_th.properties:shared.TheRADCBuyer=ผู้ซื้อ RADC
core/src/main/resources/i18n/displayStrings_th.properties:shared.paymentDetails=RADC {0} รายละเอียดการชำระเงิน
core/src/main/resources/i18n/displayStrings_th.properties:shared.btcAmount=RADC ยอดจำนวน
core/src/main/resources/i18n/displayStrings_th.properties:mainView.menu.buyBtc=ซื้อ RADC
core/src/main/resources/i18n/displayStrings_th.properties:mainView.menu.sellBtc=ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo.initializing=Connecting to Bitcoin network
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo.connectingTo=Connecting to
core/src/main/resources/i18n/displayStrings_th.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings_th.properties:market.spread.numberOfBuyOffersColumn=ซื้อ RADC ({0})
core/src/main/resources/i18n/displayStrings_th.properties:market.spread.numberOfSellOffersColumn=ขาย RADC ({0})
core/src/main/resources/i18n/displayStrings_th.properties:market.spread.totalAmountColumn=ยอด RADC ทั้งหมด ({0})
core/src/main/resources/i18n/displayStrings_th.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_th.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_th.properties:createOffer.amount.prompt=ป้อนจำนวนเงินใน RADC
core/src/main/resources/i18n/displayStrings_th.properties:createOffer.amountPriceBox.amountDescription=ยอดจำนวน RADC ถึง {0}
core/src/main/resources/i18n/displayStrings_th.properties:createOffer.amountPriceBox.minAmountDescription=จำนวนเงินขั้นต่ำของ RADC
core/src/main/resources/i18n/displayStrings_th.properties:createOffer.tradeFee.descriptionRADCOnly=ค่าธรรมเนียมการซื้อขาย
core/src/main/resources/i18n/displayStrings_th.properties:takeOffer.amount.prompt=ป้อนจำนวนเงินใน RADC
core/src/main/resources/i18n/displayStrings_th.properties:takeOffer.amountPriceBox.buy.amountDescription=จำนวน RADC ที่จะขาย
core/src/main/resources/i18n/displayStrings_th.properties:takeOffer.amountPriceBox.sell.amountDescription=จำนวน RADC ที่จะซื้อ
core/src/main/resources/i18n/displayStrings_th.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=จำนวนเงินที่คุณป้อนเกินจำนวนตำแหน่งทศนิยมที่อนุญาต\nจำนวนเงินได้รับการปรับเป็นตำแหน่งทศนิยม 4 ตำแหน่ง
core/src/main/resources/i18n/displayStrings_th.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=จำนวนเงินที่ป้อนจะสร้างการเปลี่ยนแปลง dust  (Bitcoin ที่มีขนาดเล็กมาก) สำหรับผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.altcoin=โปรดโอนจาก wallet {0} ภายนอก\n{1} ให้กับผู้ขาย RADC\n\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.cash=โปรดไปที่ธนาคารและจ่ายเงิน {0} ให้กับผู้ขาย RADC\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.cash.extra=ข้อกำหนดที่สำคัญ: \nหลังจากที่คุณได้ชำระเงินแล้วให้เขียนลงในใบเสร็จรับเงิน: NO REFUNDS (ไม่มีการคืนเงิน)\nจากนั้นแบ่งออกเป็น 2 ส่วนถ่ายรูปและส่งไปที่ที่อยู่อีเมลของผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.moneyGram=โปรดชำระเงิน {0} ให้กับผู้ขาย RADC โดยใช้ MoneyGram\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.moneyGram.extra=ข้อกำหนดที่สำคัญ: \nหลังจากที่คุณได้ชำระเงินแล้วให้ส่งหมายเลข Authorization (การอนุมัติ) และรูปใบเสร็จรับเงินไปยังผู้ขาย RADC ทางอีเมล\nใบเสร็จจะต้องแสดงชื่อเต็มของผู้ขาย ประเทศ รัฐ และจำนวนเงินทั้งหมดของผู้ขาย อีเมลของผู้ขายคือ: {0}.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.westernUnion=โปรดชำระเงิน {0} ให้กับผู้ขาย RADC โดยใช้ Western Union
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.westernUnion.extra=ข้อกำหนดที่สำคัญ: \nหลังจากที่คุณได้ชำระเงินแล้วให้ส่ง MTCN (หมายเลขติดตาม) และรูปใบเสร็จรับเงินไปยังผู้ขาย RADC ทางอีเมล\nใบเสร็จจะต้องแสดงชื่อเต็ม เมือง ประเทศ และจำนวนเงินทั้งหมดของผู้ขาย อีเมลของผู้ขายคือ: {0}
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.postal=โปรดส่ง {0} โดยธนาณัติ \"US Postal Money Order \" ไปยังผู้ขาย RADC\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.f2f=กรุณาติดต่อผู้ขายของ RADC ตามรายชื่อที่ได้รับและนัดประชุมเพื่อจ่ายเงิน {0}\n\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.paperReceipt.headline=คุณได้ส่งใบเสร็จรับเงินให้กับผู้ขาย RADC หรือไม่?
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.paperReceipt.msg=ข้อควรจำ: \nคุณต้องเขียนลงในใบเสร็จรับเงิน: NO REFUNDS (ไม่มีการคืนเงิน)\nจากนั้นแบ่งออกเป็น 2 ส่วนถ่ายรูปและส่งไปที่ที่อยู่อีเมลของผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=คุณต้องส่งหมายเลขการอนุมัติและรูปใบเสร็จรับเงินทางอีเมลไปยังผู้ขาย RADC \nใบเสร็จจะต้องแสดงชื่อเต็มของประเทศ รัฐ และจำนวนเงินทั้งหมดของผู้ขาย อีเมลของผู้ขายคือ: {0} .\n\nคุณได้ส่งหมายเลขการอนุมัติและทำสัญญากับผู้ขายหรือไม่?\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=คุณต้องส่ง MTCN (หมายเลขติดตาม) และรูปใบเสร็จรับเงินทางอีเมลไปยังผู้ขาย RADC \nใบเสร็จจะต้องแสดงชื่อเต็ม เมือง ประเทศ และจำนวนเงินทั้งหมดของผู้ขาย อีเมลของผู้ขายคือ: {0} .\n\nคุณได้ส่ง MTCN และทำสัญญากับผู้ขายหรือไม่
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.halCashInfo.msg=คุณต้องส่งข้อความที่มีรหัส HalCash พร้อมกับ IDการค้า ({0}) ไปยังผู้ขาย RADC \nเบอร์โทรศัพท์มือถือของผู้ขาย คือ {1}\n\nคุณได้ส่งรหัสให้กับผู้ขายหรือยัง?
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_seller.waitPayment.msg=ธุรกรรมการฝากเงินมีการยืนยันบล็อกเชนอย่างน้อยหนึ่งรายการ\nคุณต้องรอจนกว่าผู้ซื้อ RADC จะเริ่มการชำระเงิน {0}
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_seller.warn=ผู้ซื้อ RADC ยังไม่ได้ทำ {0} การชำระเงิน\nคุณต้องรอจนกว่าผู้ซื้อจะเริ่มชำระเงิน\nหากการซื้อขายยังไม่เสร็จสิ้นในวันที่ {1} ผู้ไกล่เกลี่ยจะดำเนินการตรวจสอบ
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step2_seller.openForDispute=The RADC buyer has not started their payment!\nThe max. allowed period for the trade has elapsed.\nYou can wait longer and give the trading peer more time or contact the mediator for assistance.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_buyer.wait.headline=รอการยืนยันการชำระเงินของผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_buyer.wait.info=กำลังรอการยืนยันจากผู้ขาย RADC สำหรับการรับ {0} การชำระเงิน
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_buyer.warn.part2=The RADC seller still has not confirmed your payment. Please check {0} if the payment sending was successful.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_buyer.openForDispute=The RADC seller has not confirmed your payment! The max. period for the trade has elapsed. You can wait longer and give the trading peer more time or request assistance from the mediator.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.cash=เนื่องจากการชำระเงินผ่าน Cash Deposit (ฝากเงินสด) ผู้ซื้อ RADC จะต้องเขียน \"NO REFUND \" ในใบเสร็จรับเงินและให้แบ่งออกเป็น 2 ส่วนและส่งรูปถ่ายทางอีเมล\n\nเพื่อหลีกเลี่ยงความเสี่ยงจากการปฏิเสธการชำระเงิน  ให้ยืนยันเฉพาะถ้าคุณได้รับอีเมลและหากคุณแน่ใจว่าใบเสร็จถูกต้องแล้ว\nถ้าคุณไม่แน่ใจ {0}
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.moneyGram=ผู้ซื้อต้องส่งหมายเลขอนุมัติและรูปใบเสร็จรับเงินทางอีเมล\nใบเสร็จรับเงินต้องแสดงชื่อเต็มของคุณ ประเทศ รัฐ และจำนวนเงิน โปรดตรวจสอบอีเมลของคุณหากคุณได้รับหมายเลขการให้สิทธิ์\n\nหลังจากปิดป๊อปอัปคุณจะเห็นชื่อและที่อยู่ของผู้ซื้อ RADC เพื่อรับเงินจาก MoneyGram\n\nยืนยันเฉพาะใบเสร็จหลังจากที่คุณได้รับเงินเรียบร้อยแล้ว!
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.westernUnion=ผู้ซื้อต้องส่ง MTCN (หมายเลขติดตาม) และรูปใบเสร็จรับเงินทางอีเมล\nใบเสร็จรับเงินต้องแสดงชื่อ เมือง ประเทศ และจำนวนเงินทั้งหมดไว้อย่างชัดเจน โปรดตรวจสอบอีเมลของคุณหากคุณได้รับ MTCN\n\nหลังจากปิดป๊อปอัปคุณจะเห็นชื่อและที่อยู่ของผู้ซื้อ RADC สำหรับการขอรับเงินจาก Western Union \n\nยืนยันเฉพาะใบเสร็จหลังจากที่คุณได้รับเงินเรียบร้อยแล้ว!
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.buyerStartedPayment=ผู้ซื้อ RADC ได้เริ่มการชำระเงิน {0}\n{1}
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Please note, that as soon you have confirmed the receipt, the locked trade amount will be released to the RADC buyer and the security deposit will be refunded.\n\n
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.step5_buyer.withdrawRADC=ถอนเงิน bitcoin ของคุณ
core/src/main/resources/i18n/displayStrings_th.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_th.properties:funds.deposit.amount=จำนวนเงินใน RADC (ตัวเลือก)
core/src/main/resources/i18n/displayStrings_th.properties:funds.tx.withdrawnFromBSQWallet=RADC withdrawn from BSQ wallet
core/src/main/resources/i18n/displayStrings_th.properties:funds.tx.dustAttackTx.popup=This transaction is sending a very small RADC amount to your wallet and might be an attempt from chain analysis companies to spy on your wallet.\n\nIf you use that transaction output in a spending transaction they will learn that you are likely the owner of the other address as well (coin merge).\n\nTo protect your privacy the Bisq wallet ignores such dust outputs for spending purposes and in the balance display. You can set the threshold amount when an output is considered dust in the settings.
core/src/main/resources/i18n/displayStrings_th.properties:support.buyerAddress=ที่อยู่ของผู้ซื้อ RADC
core/src/main/resources/i18n/displayStrings_th.properties:support.sellerAddress=ที่อยู่ของผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:support.buyerOfferer=RADC ผู้ซื้อ / ผู้สร้าง
core/src/main/resources/i18n/displayStrings_th.properties:support.sellerOfferer= RADC ผู้ขาย/ ผู้สร้าง
core/src/main/resources/i18n/displayStrings_th.properties:support.buyerTaker=RADC ผู้ซื้อ / ผู้รับ
core/src/main/resources/i18n/displayStrings_th.properties:support.sellerTaker=RADC ผู้ขาย / ผู้รับ
core/src/main/resources/i18n/displayStrings_th.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_th.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.btcHeader=เครือข่าย Bitcoin
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.btcNodesLabel=ใช้โหนดเครือข่าย Bitcoin Core ที่กำหนดเอง
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.useTorForBtcJLabel=ใช้ Tor สำหรับเครือข่าย Bitcoin
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.warn.invalidBtcConfig=Connection to the Bitcoin network failed because your configuration is invalid.\n\nYour configuration has been reset to use the provided Bitcoin nodes instead. You will need to restart the application.
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.localhostBtcNodeInfo=Background information: Bisq looks for a local Bitcoin node when starting. If it is found, Bisq will communicate with the Bitcoin network exclusively through it.
core/src/main/resources/i18n/displayStrings_th.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_th.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Open emergency wallet tool for RADC wallet
core/src/main/resources/i18n/displayStrings_th.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_th.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_th.properties:account.altcoin.popup.liquidbitcoin.msg=Trading L-RADC on Bisq requires that you understand the following:\n\nWhen receiving L-RADC for a trade on Bisq, you cannot use the mobile Blockstream Green Wallet app or a custodial/exchange wallet. You must only receive L-RADC into the Liquid Elements Core wallet, or another L-RADC wallet which allows you to obtain the blinding key for your blinded L-RADC address.\n\nIn the event mediation is necessary, or if a trade dispute arises, you must disclose the blinding key for your receiving L-RADC address to the Bisq mediator or refund agent so they can verify the details of your Confidential Transaction on their own Elements Core full node.\n\nFailure to provide the required information to the mediator or refund agent will result in losing the dispute case. In all cases of dispute, the L-RADC receiver bears 100% of the burden of responsibility in providing cryptographic proof to the mediator or refund agent.\n\nIf you do not understand these requirements, do not trade L-RADC on Bisq.
core/src/main/resources/i18n/displayStrings_th.properties:account.seed.info=โปรดเขียนรหัสสำรองข้อมูล wallet และวันที่! คุณสามารถกู้ข้อมูล wallet ของคุณได้ทุกเมื่อด้วย รหัสสำรองข้อมูล wallet และวันที่\nรหัสสำรองข้อมูล ใช้ทั้ง RADC และ BSQ wallet\n\nคุณควรเขียนรหัสสำรองข้อมูล wallet ลงบนแผ่นกระดาษและไม่บันทึกไว้ในคอมพิวเตอร์ของคุณ\n\nโปรดทราบว่า รหัสสำรองข้อมูล wallet ไม่ได้แทนการสำรองข้อมูล\nคุณจำเป็นต้องสำรองข้อมูลสารบบแอ็พพลิเคชั่นทั้งหมดที่หน้าจอ \"บัญชี / การสำรองข้อมูล \" เพื่อกู้คืนสถานะแอ็พพลิเคชั่นและข้อมูลที่ถูกต้อง\nการนำเข้ารหัสสำรองข้อมูล wallet เป็นคำแนะนำเฉพาะสำหรับกรณีฉุกเฉินเท่านั้น แอพพลิเคชั่นจะไม่สามารถใช้งานได้หากไม่มีไฟล์สำรองฐานข้อมูลและคีย์ที่ถูกต้อง!
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.priceAlert.high.label=แจ้งเตือนหากราคา RADC สูงกว่า
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.priceAlert.low.label=แจ้งเตือนหากราคา RADC ต่ำกว่า
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.trade.message.msg.started=ผู้ซื้อ RADC ได้เริ่มต้นการชำระเงินสำหรับผู้ค้าที่มี ID {0}
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.marketAlert.offerType.buy=ซื้อข้อเสนอพิเศษ (ฉันต้องการขาย RADC)
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.marketAlert.offerType.sell=ข้อเสนอพิเศษในการขาย (ฉันต้องการซื้อ RADC)
core/src/main/resources/i18n/displayStrings_th.properties:account.notifications.marketAlert.trigger.info=เมื่อตั้งระดับของราคา คุณจะได้รับการแจ้งเตือนเมื่อมีการเผยแพร่ข้อเสนอที่ตรงกับความต้องการของคุณ (หรือมากกว่า) \nตัวอย่าง: หากคุณต้องการขาย RADC แต่คุณจะขายในราคาที่สูงกว่า 2% จากราคาตลาดปัจจุบันเท่านั้น\n การตั้งค่าฟิลด์นี้เป็น 2% จะทำให้คุณมั่นใจได้ว่าจะได้รับการแจ้งเตือนสำหรับข้อเสนอเฉพาะในราคาที่สูงกว่าราคาตลาดปัจจุบันที่ 2% (หรือมากกว่า)
core/src/main/resources/i18n/displayStrings_th.properties:dao.availableNonBsqBalance=ยอดคงเหลือที่ไม่ใช่ BSQ (RADC) ซึ่งใช้งานได้
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.DEFAULT_MAKER_FEE_RADC=ค่าธรรมเนียมผู้สร้าง RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.DEFAULT_TAKER_FEE_RADC=ค่าธรรมเนียมผู้รับ RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.MIN_MAKER_FEE_RADC=ค่าธรรมเนียมของผู้สร้าง RADC ขั้นต่ำ
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.MIN_TAKER_FEE_RADC=ค่าธรรมเนียมของผู้รับ RADC ขั้นต่ำ
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.RECIPIENT_RADC_ADDRESS=ที่อยู่ RADC ของผู้รับ:
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.ARBITRATOR_FEE=Arbitrator fee in RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.param.MAX_TRADE_LIMIT=Max. trade limit in RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin node operator
core/src/main/resources/i18n/displayStrings_th.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC donation address owner
core/src/main/resources/i18n/displayStrings_th.properties:dao.wallet.send.sendBtcFunds=ส่งเงินทุนที่ไม่ใช่เครือ BSQ (RADC)
core/src/main/resources/i18n/displayStrings_th.properties:dao.wallet.send.btcAmount=ยอดรวมทั้งหมดใน RADC (เงินทุนที่ไม่ใช่ในเครือ BSQ)
core/src/main/resources/i18n/displayStrings_th.properties:dao.wallet.send.receiverBtcAddress=ที่อยู่ RADC ของผู้รับ
core/src/main/resources/i18n/displayStrings_th.properties:dao.wallet.send.sendBtc=ส่งเงินทุน RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.tx.withdrawnFromWallet=RADC withdrawn from wallet
core/src/main/resources/i18n/displayStrings_th.properties:dao.proposal.create.missingMinerFeeFunds=You don''t have sufficient RADC funds for creating the proposal transaction. All BSQ transactions require a miner fee in RADC.\nMissing: {0}
core/src/main/resources/i18n/displayStrings_th.properties:dao.proposal.create.missingIssuanceFunds=You don''t have sufficient RADC funds for creating the proposal transaction. All BSQ transactions require a miner fee in RADC, and issuance transactions also require RADC for the requested BSQ amount ({0} Satoshis/BSQ).\nMissing: {1}
core/src/main/resources/i18n/displayStrings_th.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.dashboard.avgPrice90=90 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.dashboard.avgPrice30=30 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_th.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_th.properties:contractWindow.btcAddresses=ที่อยู่ Bitcoin ผู้ซื้อ RADC / ผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:contractWindow.onions=ที่อยู่เครือข่ายผู้ซื้อ RADC / ผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:contractWindow.accountAge=Account age RADC buyer / RADC seller
core/src/main/resources/i18n/displayStrings_th.properties:contractWindow.numDisputes=เลขที่ข้อพิพาทผู้ซื้อ RADC / ผู้ขาย RADC
core/src/main/resources/i18n/displayStrings_th.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} รับการจ่ายเงินของปริมาณการซื้อขาย:
core/src/main/resources/i18n/displayStrings_th.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_th.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_th.properties:emptyWalletWindow.bsq.btcBalance=ยอดดุลของ Non-BSQ Satoshis
core/src/main/resources/i18n/displayStrings_th.properties:filterWindow.btcNode=โหนด Bitcoin ที่ได้รับการกรองแล้ว (คั่นด้วยเครื่องหมายจุลภาค ที่อยู่ + พอร์ต)
core/src/main/resources/i18n/displayStrings_th.properties:filterWindow.preventPublicBtcNetwork=ป้องกันการใช้เครือข่าย Bitcoin สาธารณะ
core/src/main/resources/i18n/displayStrings_th.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_th.properties:offerDetailsWindow.minBtcAmount=จำนวน RADC ต่ำสุด
core/src/main/resources/i18n/displayStrings_th.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_th.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_th.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_th.properties:feeOptionWindow.info=คุณสามารถเลือกที่จะชำระค่าธรรมเนียมทางการค้าใน BSQ หรือใน RADC แต่ถ้าคุณเลือก BSQ คุณจะได้รับส่วนลดค่าธรรมเนียมการซื้อขาย
core/src/main/resources/i18n/displayStrings_th.properties:feeOptionWindow.useRADC=ใช้ RADC
core/src/main/resources/i18n/displayStrings_th.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_th.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.notSufficientConnectionsToBtcNetwork=คุณต้องรอจนกว่าจะมีการเชื่อมต่อกับเครือข่าย Bitcoin อย่างน้อย {0} รายการ
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.insufficientBtcFundsForBsqTx=คุณไม่มีเงินทุน RADC เพียงพอสำหรับการจ่ายค่าธรรมเนียมขุดสำหรับการทำธุรกรรมดังกล่าว\nกรุณาใส่เงินในกระเป๋าสตางค์ RADC ของคุณ\nเงินขาดไป: {0}
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.btcChangeBelowDustException=This transaction creates a change output which is below dust limit (546 Satoshi) and would be rejected by the Bitcoin network.\n\nYou need to add the dust amount to your sending amount to avoid to generate a dust output.\n\nThe dust output is {0}.
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.noBsqFundsForBtcFeePayment=กระเป๋าสตางค์ BSQ ของคุณไม่มีจำนวนเงินทุนที่มากพอสำหรับการชำระการเทรดใน BSQ
core/src/main/resources/i18n/displayStrings_th.properties:popup.warning.burnRADC=This transaction is not possible, as the mining fees of {0} would exceed the amount to transfer of {1}. Please wait until the mining fees are low again or until you''ve accumulated more RADC to transfer.
core/src/main/resources/i18n/displayStrings_th.properties:notification.trade.accepted=ข้อเสนอของคุณได้รับการยอมรับจาก RADC {0} แล้ว
core/src/main/resources/i18n/displayStrings_th.properties:notification.trade.paymentStarted=ผู้ซื้อ RADC ได้เริ่มการชำระเงินแล้ว
core/src/main/resources/i18n/displayStrings_th.properties:RADC_MAINNET=Bitcoin Mainnet
core/src/main/resources/i18n/displayStrings_th.properties:RADC_TESTNET=Bitcoin Testnet
core/src/main/resources/i18n/displayStrings_th.properties:RADC_REGTEST=Bitcoin Regtest
core/src/main/resources/i18n/displayStrings_th.properties:RADC_DAO_TESTNET=Bitcoin DAO Testnet (deprecated)
core/src/main/resources/i18n/displayStrings_th.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_th.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_th.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_th.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_th.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_th.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_th.properties:payment.halCash.info=เมื่อมีการใช้งาน HalCash ผู้ซื้อ RADC จำเป็นต้องส่งรหัส Halcash ให้กับผู้ขายทางข้อความโทรศัพท์มือถือ\n\nโปรดตรวจสอบว่าไม่เกินจำนวนเงินสูงสุดที่ธนาคารของคุณอนุญาตให้คุณส่งด้วย HalCash จำนวนเงินขั้นต่ำในการเบิกถอนคือ 10 EUR และสูงสุดในจำนวนเงิน 600 EUR สำหรับการถอนซ้ำเป็น 3000 EUR ต่อผู้รับและต่อวัน และ 6000 EUR ต่อผู้รับและต่อเดือน โปรดตรวจสอบข้อจำกัดจากทางธนาคารคุณเพื่อให้มั่นใจได้ว่าทางธนาคารได้มีการใช้มาตรฐานข้อกำหนดเดียวกันกับดังที่ระบุไว้ ณ ที่นี่\n\nจำนวนเงินที่ถอนจะต้องเป็นจำนวนเงินหลาย 10 EUR เนื่องจากคุณไม่สามารถถอนเงินอื่น ๆ ออกจากตู้เอทีเอ็มได้ UI ในหน้าจอสร้างข้อเสนอและรับข้อเสนอจะปรับจำนวนเงิน RADC เพื่อให้จำนวนเงิน EUR ถูกต้อง คุณไม่สามารถใช้ราคาตลาดเป็นจำนวนเงิน EUR ซึ่งจะเปลี่ยนแปลงไปตามราคาที่มีการปรับเปลี่ยน\n\nในกรณีที่มีข้อพิพาทผู้ซื้อ RADC ต้องแสดงหลักฐานว่าได้ส่ง EUR แล้ว
core/src/main/resources/i18n/displayStrings_th.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_th.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_th.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_th.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_th.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_th.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_th.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_th.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_th.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_th.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_th.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_th.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_th.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_th.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_th.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_th.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_th.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.toLarge=ไม่อนุญาตให้ป้อนข้อมูลขนาดใหญ่กว่า {0}
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.toSmall=ไม่อนุญาตให้ป้อนข้อมูลที่มีขนาดเล็กกว่า {0}
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.invalidAddress=ที่อยู่ไม่ถูกต้อง โปรดตรวจสอบแบบฟอร์มที่อยู่
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.exceedsMaxTradeLimit=ขีดจำกัดการเทรดของคุณคือ  {0}
core/src/main/resources/i18n/displayStrings_th.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.buyingRADCWith=用 {0} 買入 RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.sellingRADCFor=賣出 RADC 為 {0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.buyingCurrency=買入 {0}（賣出 RADC）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.sellingCurrency=賣出 {0}（買入 RADC）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.RADCMinMax=RADC（最小 - 最大）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.TheRADCBuyer=RADC 買家
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.paymentDetails=RADC {0} 支付詳情
core/src/main/resources/i18n/displayStrings_zh-hant.properties:shared.btcAmount=RADC 總額
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.menu.buyBtc=買入 RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.menu.sellBtc=賣出 RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo.initializing=連接至比特幣網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo.connectingTo=連接至
core/src/main/resources/i18n/displayStrings_zh-hant.properties:mainView.footer.btcInfo.connectionFailed=連接失敗：
core/src/main/resources/i18n/displayStrings_zh-hant.properties:market.spread.numberOfBuyOffersColumn=買入 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:market.spread.numberOfSellOffersColumn=賣出 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:market.spread.totalAmountColumn=總共 RADC（{0}）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_zh-hant.properties:offerbook.deposit=RADC 保證金（%）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:createOffer.amount.prompt=輸入 RADC 數量
core/src/main/resources/i18n/displayStrings_zh-hant.properties:createOffer.amountPriceBox.minAmountDescription=最小 RADC 數量
core/src/main/resources/i18n/displayStrings_zh-hant.properties:createOffer.tradeFee.descriptionRADCOnly=掛單費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:takeOffer.amount.prompt=輸入 RADC 數量
core/src/main/resources/i18n/displayStrings_zh-hant.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=你輸入的數量超過允許的小數位數。\n數量已被調整為4位小數。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.altcoin=請從您的外部 {0} 錢包劃轉\n{1} 到 RADC 賣家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.cash=請到銀行並支付 {0} 給 RADC 賣家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.cash.extra=重要要求：\n完成付款後在紙質收據上寫下：不退款。\n然後將其撕成2份，拍照片併發送給 RADC 賣家的電子郵件地址。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.moneyGram=請使用 MoneyGram 向 RADC 賣家支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.moneyGram.extra=重要要求：\n完成支付後，請通過電郵發送授權編號和照片給 RADC 賣家。\n收據必須清楚地向賣家寫明您的全名、城市、國家或地區、數量。賣方的電子郵件是：{0}。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.westernUnion=請使用 Western Union 向 RADC 賣家支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.westernUnion.extra=重要要求：\n完成支付後，請通過電郵發送 MTCN（追蹤號碼）和照片給 RADC 賣家。\n收據必須清楚地向賣家寫明您的全名、城市、國家或地區、數量。賣方的電子郵件是：{0}。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.postal=請用“美國郵政匯票”發送 {0} 給 RADC 賣家。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.f2f=請通過提供的聯繫人與 RADC 賣家聯繫，並安排會議支付 {0}。\n\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.paperReceipt.headline=您是否將紙質收據發送給 RADC 賣家？
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.paperReceipt.msg=請牢記：\n完成付款後在紙質收據上寫下：不退款。\n然後將其撕成2份，拍照片併發送給 RADC 賣家的電子郵件地址。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=請通過電郵發送授權編號和照片給 RADC 賣家。\n收據必須清楚地向賣家寫明您的全名、城市、國家或地區、數量。賣方的電子郵件是：{0}。\n\n您把授權編號和合同發給賣方了嗎？
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=請通過電郵發送 MTCN（追蹤號碼）和照片給 RADC 賣家。\n收據必須清楚地向賣家寫明您的全名、城市、國家或地區、數量。賣方的電子郵件是：{0}。\n\n您把 MTCN 和合同發給賣方了嗎？
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.halCashInfo.msg=您需要向 RADC 賣家發送帶有 HalCash 代碼和交易 ID（{0}）的文本消息。\n\n賣方的手機號碼是 {1} 。\n\n您是否已經將代碼發送至賣家?
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=您還沒有輸入交易 ID 以及交易密鑰\n\n如果不提供此數據您的交易夥伴無法在收到 XMR 後使用自動確認功能以快速釋放 RADC。\n另外，Bisq 要求 XMR 發送者在發生糾紛的時候能夠向調解員和仲裁員提供這些信息。\n更多細節在 Bisq Wiki：https://bisq.wiki/Trading_Monero#Auto-confirming_trades
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_seller.waitPayment.msg=存款交易至少有一個區塊鏈確認。\n您需要等到 RADC 買家開始 {0} 付款。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_seller.warn=RADC 買家仍然沒有完成 {0} 付款。\n你需要等到他開始付款。\n如果 {1} 交易尚未完成，仲裁員將進行調查。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step2_seller.openForDispute=RADC 買家尚未開始付款！\n允許的最長交易期限已經過去了。你可以繼續等待給予交易雙方更多時間，或聯繫仲裁員以爭取解決糾紛。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_buyer.wait.headline=等待 RADC 賣家付款確定
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_buyer.wait.info=等待 RADC 賣家確認收到 {0} 付款。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_buyer.warn.part2=RADC 賣家仍然沒有確認您的付款。如果付款發送成功，請檢查 {0}。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_buyer.openForDispute=RADC 賣家還沒有確認你的付款！最大交易期限已過。您可以等待更長時間，並給交易夥伴更多時間或請求調解員的幫助。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.cash=因為付款是通過現金存款完成的，RADC 買家必須在紙質收據上寫“不退款”，將其撕成2份，並通過電子郵件向您發送照片。\n\n為避免退款風險，請僅確認您是否收到電子郵件，如果您確定收據有效。\n如果您不確定，{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.moneyGram=買方必須發送授權編碼和一張收據的照片。\n收據必須清楚地顯示您的全名、城市、國家或地區、數量。如果您收到授權編碼，請查收郵件。\n\n關閉彈窗後，您將看到 RADC 買家的姓名和在 MoneyGram 的收款地址。\n\n只有在您成功收到錢之後，再確認收據！
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.westernUnion=買方必須發送 MTCN（跟蹤號碼）和一張收據的照片。\n收據必須清楚地顯示您的全名、城市、國家或地區、數量。如果您收到 MTCN，請查收郵件。\n\n關閉彈窗後，您將看到 RADC 買家的姓名和在 Western Union 的收款地址。\n\n只有在您成功收到錢之後，再確認收據！
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.amazonGiftCard=RADC 買家已經發送了一張亞馬遜電子禮品卡到您的郵箱或手機短信。請現在立即兑換亞馬遜電子禮品卡到您的亞馬遜賬户中以及確認交易信息。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.buyerStartedPayment=RADC 買家已經開始 {0} 的付款。\n{1}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step3_seller.onPaymentReceived.note=請注意，一旦您確認收到，凍結交易金額將被髮放給 RADC 買家，保證金將被退還。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.step5_buyer.withdrawRADC=提現您的比特幣
core/src/main/resources/i18n/displayStrings_zh-hant.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_zh-hant.properties:funds.deposit.amount=RADC 數量（可選）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:funds.tx.withdrawnFromBSQWallet=RADC 已從 BSQ 錢包中取出
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.buyerAddress=RADC 買家地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.sellerAddress=RADC 賣家地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.buyerOfferer=RADC 買家/掛單者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.sellerOfferer=RADC 賣家/掛單者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.buyerTaker=RADC 買家/買單者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.sellerTaker=RADC 賣家/買單者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:setting.preferences.autoConfirmMaxTradeSize=最大交易量（RADC）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.btcHeader=比特幣網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.btcNodesLabel=使用自定義比特幣主節點
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.useTorForBtcJLabel=使用 Tor 連接比特幣網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.warn.invalidBtcConfig=由於您的配置無效，無法連接至比特幣網絡。\n\n您的配置已經被重置為默認比特幣節點。你需要重啟 Bisq。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.localhostBtcNodeInfo=背景信息：Bisq 在啟動時會在本地查找比特幣節點。如果有，Bisq 將只通過它與比特幣網絡進行通信。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:settings.net.chainHeightLabel=最新 RADC 區塊高度
core/src/main/resources/i18n/displayStrings_zh-hant.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=打開應急 RADC 錢包工具
core/src/main/resources/i18n/displayStrings_zh-hant.properties:setting.info.msg=當你完成 RADC/XMR 交易時，您可以使用自動確認功能來驗證是否向您的錢包中發送了正確數量的 XMR，以便 Bisq 可以自動將交易標記為完成，從而使每個人都可以更快地進行交易。\n\n自動確認使用 XMR 發送方提供的交易密鑰在至少 2 個 XMR 區塊瀏覽器節點上檢查 XMR 交易。在默認情況下，Bisq 使用由 Bisq 貢獻者運行的區塊瀏覽器節點，但是我們建議運行您自己的 XMR 區塊瀏覽器節點以最大程度地保護隱私和安全。\n\n您還可以在``設置''中將每筆交易的最大 RADC 數量設置為自動確認以及所需確認的數量。\n\n在 Bisq Wiki 上查看更多詳細信息（包括如何設置自己的區塊瀏覽器節點）：https://bisq.wiki/Trading_Monero#Auto-confirming_trades
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.altcoin.popup.liquidbitcoin.msg=在 Bisq 上交易 L-RADC 你必須理解下述條款：\n\n當你在 Bisq 上接受 L-RADC 交易時，你不能使用手機 Blockstream Green Wallet 或者是一個託管/交易錢包。你必須只接收 L-RADC 到 Liquid Elements Core 錢包，或另一個 L-RADC 錢包且允許你獲得匿名的 L-RADC 地址以及密鑰。\n\n在需要進行調解的情況下，或者如果發生了交易糾紛，您必須將接收 L-RADC地址的安全密鑰披露給 Bisq 調解員或退款代理，以便他們能夠在他們自己的 Elements Core 全節點上驗證您的匿名交易的細節。\n\n如果你不瞭解或瞭解這些要求，不要在 Bisq 上交易 L-RADC。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.seed.info=請寫下錢包還原密鑰和時間！\n您可以通過還原密鑰和時間在任何時候恢復您的錢包。\n還原密鑰用於 RADC 和 BSQ 錢包。\n\n您應該在一張紙上寫下還原密鑰並且不要保存它們在您的電腦上。\n請注意還原密鑰並不能代替備份。\n您需要備份完整的應用程序目錄在”賬户/備份“界面去恢復有效的應用程序狀態和數據。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.priceAlert.high.label=提醒條件：當 RADC 價格高於
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.priceAlert.low.label=提醒條件：當 RADC 價格低於
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.trade.message.msg.started=RADC 買家已經開始支付 ID 為 {0} 的交易。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.marketAlert.offerType.buy=買入報價（我想要出售 RADC ）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.marketAlert.offerType.sell=賣出報價（我想要購買 RADC ）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:account.notifications.marketAlert.trigger.info=設置價格區間後，只有當滿足（或超過）您的需求的報價發佈時，您才會收到提醒。您想賣 RADC ，但你只能以當前市價的 2% 溢價出售。將此字段設置為 2% 將確保您只收到高於當前市場價格 2%（或更多）的報價的提醒。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.availableNonBsqBalance=可用的非 BSQ 餘額（RADC）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADC 掛單費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADC 買單費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.MIN_MAKER_FEE_RADC=最小 RADC 掛單費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.MIN_TAKER_FEE_RADC=最小 RADC 買單費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.RECIPIENT_RADC_ADDRESS=接收方 RADC 地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.ARBITRATOR_FEE=RADC 仲裁費
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.param.MAX_TRADE_LIMIT=最高 RADC 交易限額
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=比特幣節點運營者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC 贊助地址所有者
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.wallet.send.sendBtcFunds=發送非 BSQ 資金（RADC）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.wallet.send.btcAmount=RADC 數量（無 BSQ 資金）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.wallet.send.receiverBtcAddress=接收者的 RADC 地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.wallet.send.sendBtc=發送 RADC 資金
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.tx.withdrawnFromWallet=RADC 已從錢包中取出
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.proposal.create.missingMinerFeeFunds=您沒有足夠的RADC資金來支付該提案交易。所有的 BSQ交易需要用 RADC 支付挖礦手續費。\n缺少：{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.proposal.create.missingIssuanceFunds=您沒有足夠的RADC資金來支付該提案交易。所有的 BSQ交易需要用 RADC 支付挖礦手續費以及發起交易也需要用 RADC 支付所需的 BSQ 數量（{0} 聰/BSQ）\n缺少：{1}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.feeTx.issuanceProposal.confirm.details={0}手續費：{1}\n為 BSQ 提案所需要的RADC：{2}（{3}聰 / BSQ）\n挖礦手續費：{4}（{5}聰 /字節）\n交易大小：{6}Kb\n\n如果你的要求被批准，你將收到你要求數量的 2 個 BSQ 提議的費用。\n\n你確定你想要發佈{7}交易?
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.dashboard.avgPrice90=90天平均 BSQ/RADC 交易價格
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.dashboard.avgPrice30=30天平均 BSQ/RADC 交易價格
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_zh-hant.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_zh-hant.properties:contractWindow.btcAddresses=RADC 買家/RADC 賣家的比特幣地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:contractWindow.onions=RADC 買家/RADC 賣家的網絡地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:contractWindow.accountAge=RADC 買家/RADC 賣家的賬齡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:contractWindow.numDisputes=RADC 買家/RADC 賣家的糾紛編號
core/src/main/resources/i18n/displayStrings_zh-hant.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} 獲得交易金額支付
core/src/main/resources/i18n/displayStrings_zh-hant.properties:disputeSummaryWindow.payout.getsAll=最大 RADC 支付數 {0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:disputeSummaryWindow.close.msg=工單已關閉{0}\n{1} 節點地址：{12}\n\n總結：\n交易 ID：{3}\n貨幣：{4}\n交易金額：{5}\nRADC 買家支付金額：{6}\nRADC 賣家支付金額：{7}\n\n糾紛原因：{8}\n\n總結：\n{9}\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:emptyWalletWindow.bsq.btcBalance=非 BSQ 聰餘額
core/src/main/resources/i18n/displayStrings_zh-hant.properties:filterWindow.btcNode=篩選後的比特幣節點（用逗號“,”隔開的地址+端口）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:filterWindow.preventPublicBtcNetwork=禁止使用公共比特幣網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:filterWindow.btcFeeReceiverAddresses=比特幣手續費接收地址
core/src/main/resources/i18n/displayStrings_zh-hant.properties:offerDetailsWindow.minBtcAmount=最小 RADC 數量
core/src/main/resources/i18n/displayStrings_zh-hant.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_zh-hant.properties:feeOptionWindow.info=您可以選擇用 BSQ 或 RADC 支付交易費用。如果您選擇 BSQ ，您會感謝這些交易手續費折扣。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:feeOptionWindow.useRADC=使用 RADC
core/src/main/resources/i18n/displayStrings_zh-hant.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_zh-hant.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.notSufficientConnectionsToBtcNetwork=你需要等待至少有{0}個與比特幣網絡的連接點。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.insufficientBtcFundsForBsqTx=你沒有足夠的 RADC 資金支付這筆交易的挖礦手續費。\n請充值您的 RADC 錢包。\n缺少的資金：{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.btcChangeBelowDustException=該交易創建的更改輸出低於零頭限制（546 聰），將被比特幣網絡拒絕。\n\n您需要將零頭添加到發送量中，以避免生成零頭輸出。\n\n零頭輸出為{0}。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=您需要更多的 BSQ 去完成這筆交易 -  錢包中最後剩餘 5.46 BSQ 將無法用於支付交易手續費因為 RADC 協議中的零頭限制。\n\n你可以購買更多的 BSQ 或用 RADC支付交易手續費\n\n缺少 BSQ 資金：{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.noBsqFundsForBtcFeePayment=您的 BSQ 錢包沒有足夠的資金支付 BSQ 的交易費用。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:popup.warning.burnRADC=這筆交易是無法實現，因為 {0} 的挖礦手續費用會超過 {1} 的轉賬金額。請等到挖礦手續費再次降低或您積累了更多的 RADC 來轉賬。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:notification.trade.accepted=您 RADC {0} 的報價被接受。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:notification.trade.paymentStarted=RADC 買家已經開始付款。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_MAINNET=比特幣主幹網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_TESTNET=比特幣測試網絡
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_REGTEST=比特幣迴歸測試
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_DAO_TESTNET=比特幣 DAO 測試網絡（棄用）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_DAO_BETANET=Bisq DAO 測試網絡（比特幣主要網絡）
core/src/main/resources/i18n/displayStrings_zh-hant.properties:RADC_DAO_REGTEST=比特幣 DAO 迴歸測試
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.moneyGram.info=使用 MoneyGram 時，RADC 買方必須將授權號碼和收據的照片通過電子郵件發送給 RADC 賣方。收據必須清楚地顯示賣方的全名、國家或地區、州和金額。買方將在交易過程中顯示賣方的電子郵件。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.westernUnion.info=使用 Western Union 時，RADC 買方必須通過電子郵件將 MTCN（運單號）和收據照片發送給 RADC 賣方。收據上必須清楚地顯示賣方的全名、城市、國家或地區和金額。買方將在交易過程中顯示賣方的電子郵件。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.halCash.info=使用 HalCash 時，RADC 買方需要通過手機短信向 RADC 賣方發送 HalCash 代碼。\n\n請確保不要超過銀行允許您用半現金匯款的最高金額。每次取款的最低金額是 10 歐元，最高金額是 10 歐元。金額是 600 歐元。對於重複取款，每天每個接收者 3000 歐元，每月每個接收者 6000 歐元。請與您的銀行核對這些限額，以確保它們使用與此處所述相同的限額。\n\n提現金額必須是 10 歐元的倍數，因為您不能從 ATM 機提取其他金額。 創建報價和下單屏幕中的 UI 將調整 RADC 金額，使 EUR 金額正確。你不能使用基於市場的價格，因為歐元的數量會隨着價格的變化而變化。\n
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.usPostalMoneyOrder.info=在 Bisq 上交易  US Postal Money Orders （USPMO）您必須理解下述條款：\n\n- RADC 買方必須在發送方和收款人字段中都寫上 RADC 賣方的名稱，並在發送之前對 USPMO 和信封進行高分辨率照片拍照，並帶有跟蹤證明。\n- RADC 買方必須將 USPMO 連同交貨確認書一起發送給 RADC 賣方。\n\n如果需要調解，或有交易糾紛，您將需要將照片連同 USPMO 編號，郵局編號和交易金額一起發送給 Bisq 調解員或退款代理，以便他們進行驗證美國郵局網站上的詳細信息。\n\n如未能提供要求的交易數據將在糾紛中直接判負\n\n在所有爭議案件中，USPMO 發送方在向調解人或仲裁員提供證據/證明時承擔 100％ 的責任。\n\n如果您不理解這些要求，請不要在 Bisq 上使用 USPMO 進行交易。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_zh-hant.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.fraction=此充值將會產生小於 1  聰的比特幣數量。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.toLarge=不允許充值大於{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.toSmall=不允許充值小於{0}
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.invalidAddress=地址不正確，請檢查地址格式。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.exceedsMaxTradeLimit=您的交易限額為 {0}。
core/src/main/resources/i18n/displayStrings_zh-hant.properties:validation.btc.invalidFormat=無效格式的比特幣地址
core/src/main/resources/i18n/displayStrings.properties:shared.buyingRADCWith=buying RADC with {0}
core/src/main/resources/i18n/displayStrings.properties:shared.sellingRADCFor=selling RADC for {0}
core/src/main/resources/i18n/displayStrings.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings.properties:shared.TheRADCBuyer=The RADC buyer
core/src/main/resources/i18n/displayStrings.properties:shared.btcAmount=RADC amount
core/src/main/resources/i18n/displayStrings.properties:mainView.menu.buyBtc=Buy RADC
core/src/main/resources/i18n/displayStrings.properties:mainView.menu.sellBtc=Sell RADC
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} radiowaves/vB
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo.initializing=Connecting to Radiocoin network
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo.connectingTo=Connecting to
core/src/main/resources/i18n/displayStrings.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings.properties:createOffer.tradeFee.descriptionRADCOnly=Trade fee
core/src/main/resources/i18n/displayStrings.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=The amount you have entered exceeds the number of allowed decimal places.\nThe amount has been adjusted to 4 decimal places.
core/src/main/resources/i18n/displayStrings.properties:portfolio.pending.step5_buyer.withdrawRADC=Withdraw your Radiocoin
core/src/main/resources/i18n/displayStrings.properties:settings.net.btcHeader=Radiocoin network
core/src/main/resources/i18n/displayStrings.properties:settings.net.btcNodesLabel=Use custom Radiocoin core nodes
core/src/main/resources/i18n/displayStrings.properties:settings.net.useTorForBtcJLabel=Use Tor for Radiocoin network
core/src/main/resources/i18n/displayStrings.properties:settings.net.warn.invalidBtcConfig=Connection to the Radiocoin network failed because your configuration is invalid.\n\nYour configuration has been reset to use the provided Radiocoin nodes instead. You will need to restart the application.
core/src/main/resources/i18n/displayStrings.properties:settings.net.localhostBtcNodeInfo=Background information: RadioX looks for a local Radiocoin node when starting. If it is found, RadioX will communicate with the Radiocoin network exclusively through it.
core/src/main/resources/i18n/displayStrings.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Open emergency wallet tool for RADC wallet
core/src/main/resources/i18n/displayStrings.properties:account.altcoin.popup.liquidbitcoin.msg=Trading L-RADC on RadioX requires that you understand the following:\n\n\
core/src/main/resources/i18n/displayStrings.properties:When receiving L-RADC for a trade on RadioX, you cannot use the mobile Blockstream Green Wallet app or a \
core/src/main/resources/i18n/displayStrings.properties:custodial/exchange wallet. You must only receive L-RADC into the Liquid Elements Core wallet, or another \
core/src/main/resources/i18n/displayStrings.properties:dispute case. In all cases of dispute, the L-RADC receiver bears 100% of the burden of responsibility in \
core/src/main/resources/i18n/displayStrings.properties:If you do not understand these requirements, do not trade L-RADC on RadioX.
core/src/main/resources/i18n/displayStrings.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADC maker fee
core/src/main/resources/i18n/displayStrings.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADC taker fee
core/src/main/resources/i18n/displayStrings.properties:dao.param.MIN_MAKER_FEE_RADC=Min. RADC maker fee
core/src/main/resources/i18n/displayStrings.properties:dao.param.MIN_TAKER_FEE_RADC=Min. RADC taker fee
core/src/main/resources/i18n/displayStrings.properties:dao.param.RECIPIENT_RADC_ADDRESS=Recipient RADC address
core/src/main/resources/i18n/displayStrings.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Radiocoin node operator
core/src/main/resources/i18n/displayStrings.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC donation address owner
core/src/main/resources/i18n/displayStrings.properties:dao.wallet.send.sendBtcFunds=Send non-BSQ funds (RADC)
core/src/main/resources/i18n/displayStrings.properties:dao.wallet.send.btcAmount=Amount in RADC (non-BSQ funds)
core/src/main/resources/i18n/displayStrings.properties:dao.wallet.send.receiverBtcAddress=Receiver's RADC address
core/src/main/resources/i18n/displayStrings.properties:dao.wallet.send.sendBtc=Send RADC funds
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings.properties:dao.factsAndFigures.supply.btcTradeFee=RADC trade fees
core/src/main/resources/i18n/displayStrings.properties:contractWindow.btcAddresses=Radiocoin address RADC buyer / RADC seller
core/src/main/resources/i18n/displayStrings.properties:emptyWalletWindow.bsq.btcBalance=Balance of non-BSQ Radiowaves
core/src/main/resources/i18n/displayStrings.properties:filterWindow.btcNode=Filtered Radiocoin nodes (comma sep. addresses + port)
core/src/main/resources/i18n/displayStrings.properties:filterWindow.preventPublicBtcNetwork=Prevent usage of public Radiocoin network
core/src/main/resources/i18n/displayStrings.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings.properties:offerDetailsWindow.minBtcAmount=Min. RADC amount
core/src/main/resources/i18n/displayStrings.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings.properties:feeOptionWindow.useRADC=Use RADC
core/src/main/resources/i18n/displayStrings.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings.properties:popup.warning.notSufficientConnectionsToBtcNetwork=You need to wait until you have at least {0} connections to the Radiocoin network.
core/src/main/resources/i18n/displayStrings.properties:popup.warning.insufficientBtcFundsForBsqTx=You don''t have sufficient RADC funds for paying the miner fee for that transaction.\n\
core/src/main/resources/i18n/displayStrings.properties:popup.warning.btcChangeBelowDustException=This transaction creates a change output which is below dust \
core/src/main/resources/i18n/displayStrings.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last \
core/src/main/resources/i18n/displayStrings.properties:popup.warning.noBsqFundsForBtcFeePayment=Your BSQ wallet does not have sufficient funds for paying the trade fee in BSQ.
core/src/main/resources/i18n/displayStrings.properties:popup.warning.burnRADC=This transaction is not possible, as the mining fees of {0} would exceed the amount to transfer of {1}. \
core/src/main/resources/i18n/displayStrings.properties:RADC_MAINNET=Radiocoin Mainnet
core/src/main/resources/i18n/displayStrings.properties:RADC_TESTNET=Radiocoin Testnet
core/src/main/resources/i18n/displayStrings.properties:RADC_REGTEST=Radiocoin Regtest
core/src/main/resources/i18n/displayStrings.properties:RADC_DAO_TESTNET=Radiocoin DAO Testnet (deprecated)
core/src/main/resources/i18n/displayStrings.properties:RADC_DAO_BETANET=RadioX DAO Betanet (Radiocoin Mainnet)
core/src/main/resources/i18n/displayStrings.properties:RADC_DAO_REGTEST=Radiocoin DAO Regtest
core/src/main/resources/i18n/displayStrings.properties:validation.btc.fraction=Input will result in a Radiocoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings.properties:validation.btc.toLarge=Input larger than {0} is not allowed.
core/src/main/resources/i18n/displayStrings.properties:validation.btc.toSmall=Input smaller than {0} is not allowed.
core/src/main/resources/i18n/displayStrings.properties:validation.btc.invalidAddress=The address is not correct. Please check the address format.
core/src/main/resources/i18n/displayStrings.properties:validation.btc.exceedsMaxTradeLimit=Your trade limit is {0}.
core/src/main/resources/i18n/displayStrings.properties:validation.btc.invalidFormat=Invalid format for a Radiocoin address.
core/src/main/resources/i18n/displayStrings_ja.properties:shared.buyingRADCWith=RADCを{0}で買う
core/src/main/resources/i18n/displayStrings_ja.properties:shared.sellingRADCFor=RADCを{0}で売る
core/src/main/resources/i18n/displayStrings_ja.properties:shared.buyingCurrency={0}を購入中 (RADCを売却中)
core/src/main/resources/i18n/displayStrings_ja.properties:shared.sellingCurrency={0}を売却中 (RADCを購入中)
core/src/main/resources/i18n/displayStrings_ja.properties:shared.RADCMinMax=RADC (下限 - 上限)
core/src/main/resources/i18n/displayStrings_ja.properties:shared.TheRADCBuyer=RADC買い手
core/src/main/resources/i18n/displayStrings_ja.properties:shared.paymentDetails=RADC {0} 支払い詳細
core/src/main/resources/i18n/displayStrings_ja.properties:shared.btcAmount=RADC金額
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.menu.buyBtc=RADCを購入
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.menu.sellBtc=RADCを売却
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcFeeRate=/ 手数料率: {0} サトシ/vB
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo.initializing=ビットコインネットワークに接続中
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo.synchronizingWith={0}と同期中、ブロック: {1} / {2}
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo.synchronizedWith={0}と同期されています、ブロック{1}に
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo.connectingTo=接続中:
core/src/main/resources/i18n/displayStrings_ja.properties:mainView.footer.btcInfo.connectionFailed=接続失敗
core/src/main/resources/i18n/displayStrings_ja.properties:market.spread.numberOfBuyOffersColumn=RADCを買う ({0})
core/src/main/resources/i18n/displayStrings_ja.properties:market.spread.numberOfSellOffersColumn=RADCを売る ({0})
core/src/main/resources/i18n/displayStrings_ja.properties:market.spread.totalAmountColumn=RADC合計 ({0})
core/src/main/resources/i18n/displayStrings_ja.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_ja.properties:offerbook.deposit=RADCの敷金(%)
core/src/main/resources/i18n/displayStrings_ja.properties:createOffer.amount.prompt=RADCの金額を入力
core/src/main/resources/i18n/displayStrings_ja.properties:createOffer.amountPriceBox.amountDescription=以下の金額でRADCを{0}
core/src/main/resources/i18n/displayStrings_ja.properties:createOffer.amountPriceBox.minAmountDescription=RADCの最小額
core/src/main/resources/i18n/displayStrings_ja.properties:createOffer.tradeFee.descriptionRADCOnly=取引手数料
core/src/main/resources/i18n/displayStrings_ja.properties:takeOffer.amount.prompt=RADCの金額を入力
core/src/main/resources/i18n/displayStrings_ja.properties:takeOffer.amountPriceBox.buy.amountDescription=RADC売却額
core/src/main/resources/i18n/displayStrings_ja.properties:takeOffer.amountPriceBox.sell.amountDescription=RADC購入額
core/src/main/resources/i18n/displayStrings_ja.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=入力した金額が、許容される小数点以下の桁数を超えています。\n金額は小数点以下第4位に調整されています。
core/src/main/resources/i18n/displayStrings_ja.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=その入力額はRADCの売り手にダストチェンジを引き起こします。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.refTextWarn=注意点：支払う時に、\"支払理由\"のフィールドを空白にしておいて下さい。いかなる場合でも、トレードIDそれとも「ビットコイン」、「RADC」、「Bisq」などを入力しないで下さい。両者にとって許容できる別の\"支払理由\"があれば、自由に取引者チャットで話し合いをして下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.altcoin=外部{0}ウォレットから転送してください\nRADCの売り手へ{1}。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.cash=銀行に行き、RADCの売り手へ{0}を支払ってください。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.cash.extra=重要な要件:\n支払いが完了したら、領収書に「返金無し(NO REFUNDS)」と記載してください。\nそれからそれを2部に分け、写真を撮り、そしてRADCの売り手のEメールアドレスへそれを送ってください。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.moneyGram=MoneyGramを使用してRADC売り手へ{0}をお支払いください。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.moneyGram.extra=重要な要件: \n支払いが完了したら、認証番号と領収書の写真を電子メールでRADCの売り手へ送信して下さい。\n領収書には、売り手の氏名、国、都道府県、および金額を明確に表示する必要があります。売り手のメールアドレス: {0}
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.westernUnion=Western Unionを使用してRADCの売り手へ{0}をお支払いください。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.westernUnion.extra=重要な要件: \n支払いが完了したら、MTCN（追跡番号）と領収書の写真を電子メールでRADCの売り手へ送信して下さい。\n領収書には、売り手の氏名、市区町村、国、金額が明確に示されている必要があります。売り手のメールアドレス: {0}
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.postal={0}を「米国の郵便為替」でRADCの売り手に送付してください。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.cashByMail=\"郵送で現金\"で、{0}をRADC売り手に送って下さい。詳細な指示はトレード契約書に書いてあります、そして分からない点があれば取引者チャットで質問できます。「郵送で現金」について詳しくはBisqのWikiを参照：[HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.pay=特定された支払い方法で{0}をRADCの売り手に支払ってお願いします。売り手のアカウント詳細は次の画面に表示されます。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.f2f=提供された連絡先でRADCの売り手に連絡し、{0}を支払うためのミーティングを準備してください。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.paperReceipt.headline=領収書をRADCの売り手へ送付しましたか？
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.paperReceipt.msg=覚えておいてください:\n領収書に「返金無し(NO REFUNDS)」と記載してください。\nそれからそれを2部に分け、写真を撮り、そしてRADCの売り手のEメールアドレスへそれを送ってください。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=認証番号と領収書の写真を電子メールでRADCの売り手へ送信する必要があります。\n領収書には、売り手の氏名、国、都道府県、および金額を明確に表示する必要があります。売却者のメールアドレス: {0}\n\n認証番号と契約書を売り手へ送付しましたか？
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=あなたはMTCN（追跡番号）とレシートの写真をRADCの売り手にEメールで送る必要があります。\n領収書には、売り手の氏名、市区町村、国、金額が明確に示されている必要があります。 販売者のメールアドレス: {0}\n\nMTCNと契約書を売り手へ送付しましたか？
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.halCashInfo.msg=HalCashコードと取引ID（{0}）を含むテキストメッセージをRADCの売り手に送信する必要があります。\n売り手の携帯電話番号は {1} です。\n\n売り手にコードを送信しましたか？
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=トランザクションIDとトランザクション・キーを入力していません。\n\nこのデータを提供しなければ、ピアはXMRを受取る直後にRADCを解放するため自動確認機能を利用できません。\nその上、係争の場合にBisqはXMRトランザクションの送信者がこの情報を調停者や調停人に送れることを必要とします。\n詳しくはBisqのWikiを参照 [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades] 。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_seller.waitPayment.msg=デポジットトランザクションには、少なくとも1つのブロックチェーン承認があります。\nRADCの買い手が{0}の支払いを開始するまで待つ必要があります。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_seller.warn=RADCの買い手はまだ{0}の支払いを行っていません。\n支払いが開始されるまで待つ必要があります。\n取引が{1}で完了していない場合は、調停人が調査します。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step2_seller.openForDispute=RADCの買い手は支払いを開始していません！\nトレードの許可された最大期間が経過しました。\nもっと長く待ってトレードピアにもっと時間を与えるか、助けを求めるために調停者に連絡することができます。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_buyer.wait.headline=RADCの売り手の支払い承認をお待ち下さい
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_buyer.wait.info={0}の支払いを受け取るためのRADCの売り手の承認を待っています。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_buyer.warn.part2=RADCの売り手はまだあなたの支払いを確認していません！支払いの送信が成功したかどうか{0}を確認してください。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_buyer.openForDispute=RADCの売り手があなたの支払いを確認していません！トレードの最大期間が経過しました。もっと長く待って取引相手にもっと時間を与えるか、調停人から援助を求めることができます。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.postal={0}\"米国の郵便為替\"でRADCの買い手から{1}を受け取ったか確認して下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.cashByMail={0}\"郵送で現金\"でRADCの買い手から{1}を受け取ったか確認して下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.bank=トレード相手は{0}の支払いを開始した確認をしました。\n\nオンラインバンキングのWebページにアクセスして、RADCの買い手から{1}を受け取ったか確認してください。
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.cash=支払いは現金入金で行われるので、RADCの買い手は領収書に「返金無し(NO REFUND)」と記入し、2部に分けて写真を電子メールで送ってください。\n\nチャージバックのリスクを回避するために、Eメールを受信したかどうか、および領収書が有効であることが確実であるかどうかを確認してください。\nよくわからない場合は、{0}
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.moneyGram=買い手は承認番号と領収書の写真を電子メールで送信する必要があります。\n領収書には、氏名、国、州、および金額を明確に記載する必要があります。 認証番号を受け取った場合は、メールを確認してください。\n\nそのポップアップを閉じた後、あなたはMoneyGramからお金を得るためのRADC買い手の名前と住所を見られるでしょう。\n\nあなたが正常にお金を得た後にのみ領収書を承認してください！
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.westernUnion=買い手はMTCN（追跡番号）と領収書の写真をEメールで送信する必要があります。\n領収書には、氏名、市区町村、国、金額が明確に記載されている必要があります。 MTCNを受け取った場合は、メールを確認してください。\n\nそのポップアップを閉じた後、あなたはWestern Unionからお金を得るためのRADC買い手の名前と住所を見られるでしょう。\n\nあなたが正常にお金を得た後にのみ領収書を承認してください！
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.buyerStartedPayment=RADCの買い手が{0}の支払いを開始しました。\n{1}
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step3_seller.onPaymentReceived.note=領収書の確認が済むとすぐに、ロックされたトレード金額がRADCの買い手に解放され、保証金が返金されます。\n\n
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.step5_buyer.withdrawRADC=ビットコインを出金する
core/src/main/resources/i18n/displayStrings_ja.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_ja.properties:funds.deposit.amount=RADCの金額(オプション)
core/src/main/resources/i18n/displayStrings_ja.properties:funds.tx.withdrawnFromBSQWallet=BSQウォレットから出金されたRADC
core/src/main/resources/i18n/displayStrings_ja.properties:funds.tx.dustAttackTx.popup=このトランザクションはごくわずかなRADC金額をあなたのウォレットに送っているので、あなたのウォレットを盗もうとするチェーン解析会社による試みかもしれません。\n\nあなたが支払い取引でそのトランザクションアウトプットを使うならば、彼らはあなたが他のアドレスの所有者である可能性が高いことを学びます（コインマージ）。\n\nあなたのプライバシーを保護するために、Bisqウォレットは、支払い目的および残高表示において、そのようなダストアウトプットを無視します。 設定でアウトプットがダストと見なされるときのしきい値を設定できます。
core/src/main/resources/i18n/displayStrings_ja.properties:support.buyerAddress=RADC買い手のアドレス
core/src/main/resources/i18n/displayStrings_ja.properties:support.sellerAddress=RADC売り手のアドレス
core/src/main/resources/i18n/displayStrings_ja.properties:support.buyerOfferer=RADC 買い手/メイカー
core/src/main/resources/i18n/displayStrings_ja.properties:support.sellerOfferer=RADC 売り手/メイカー
core/src/main/resources/i18n/displayStrings_ja.properties:support.buyerTaker=RADC 買い手/テイカー
core/src/main/resources/i18n/displayStrings_ja.properties:support.sellerTaker=RADC 売り手/テイカー
core/src/main/resources/i18n/displayStrings_ja.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_ja.properties:setting.preferences.autoConfirmMaxTradeSize=最大トレード金額(RADC)
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.btcHeader=ビットコインのネットワーク
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.btcNodesLabel=任意のビットコインノードを使う
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.useTorForBtcJLabel=BitcoinネットワークにTorを使用
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.warn.invalidBtcConfig=無効な設定によりビットコインネットワークとの接続は失敗しました。\n\n代りに提供されたビットコインノードを利用するのに設定はリセットされました。アプリを再起動する必要があります。
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.localhostBtcNodeInfo=バックグラウンド情報：Bisqが起動時に、ローカルビットコインノードを探します。見つかれば、Bisqはそのノードを排他的に介してビットコインネットワークと接続します。
core/src/main/resources/i18n/displayStrings_ja.properties:settings.net.chainHeightLabel=RADCの最新ブロック高さ
core/src/main/resources/i18n/displayStrings_ja.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=RADCウォレットに対する緊急ウォレットツールを開く
core/src/main/resources/i18n/displayStrings_ja.properties:setting.info.msg=RADC売ってXMR買う場合、Bisqが自動的にトレードを完了としてマークできるように自動確認機能で適正量のXMRはウォレットに送られたかを検証できます。その際、皆にトレードをより早く完了できるようにします。\n\n自動確認はXMR送信者が提供するプライベート・トランザクション・キーを利用して少なくとも2つのXMRエクスプローラノードでXMRトランザクションを確認します。デフォルト設定でBisqは貢献者に管理されるエクスプローラノードを利用しますが、最大のプライバシーやセキュリティーのため自分のXMRエクスプローラノードを管理するのをおすすめします。\n\n1つのトレードにつき自動確認する最大額のRADC、そして必要承認の数をこの画面で設定できます。\n\nBisqのWikiから詳細（自分のエクスプローラノードを管理する方法も含めて）を参照できます： [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_ja.properties:account.menu.walletInfo.balance.info=非確認されたトランザクションも含めて、内部ウォレット残高を表示します。\nRADCの場合、下に表示される「内部ウォレット残高」はこのウィンドウの右上に表示される「利用可能」と「予約済」の和に等しいはずです。
core/src/main/resources/i18n/displayStrings_ja.properties:account.altcoin.popup.liquidbitcoin.msg=BisqでL-RADCをトレードするには、以下を理解する必要があります：\n\nBisqでのトレードにL-RADCを受け取る場合、モバイル用「Blockstream Green」ウォレットアプリそれとも取引場などの第三者によって保管されるウォレットの利用は不可能です。「Liquid Elements Core」ウォレット、あるいは機密L-RADCアドレスの「blindingキー」が入手可能のウォレットのみにL-RADCを受け取って下さい。\n\n調停が必要になる場合、あるいはトレード係争が開始される場合、調停者や調停人が「Elements Core」フルノードで機密トランザクションを検証できるように、受取アドレスのblindingキーを明かす必要があります。\n\n調停者や調停人に必要な情報を提供しなければ、係争で不利な裁定を下されます。全ての係争には、調停者や調停人に暗号証明を提供するのは100%受信者の責任です。\n\n以上の条件を理解しない場合、BisqでL-RADCのトレードをしないで下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:account.seed.info=ウォレットのシードワードと日付の両方を書き留めてください！あなたはシードワードと日付でいつでもウォレットを復元することができます。\nRADCおよびBSQウォレットには同じシードワードが使用されています。\n\nあなたは一枚の紙にシードワードを書き留めるべきです。コンピュータに保存しないでください。\n\nシードワードはバックアップの代わりにはならないことに気をつけて下さい。\nアプリケーションの状態とデータを復元するには「アカウント/バックアップ」画面からアプリケーションディレクトリ全体のバックアップを作成する必要があります。\nシードワードのインポートは緊急の場合にのみ推奨されます。データベースファイルとキーの適切なバックアップがなければ、アプリケーションは機能しません！
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.priceAlert.high.label=RADC価格が次を上回ったら通知
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.priceAlert.low.label=RADC価格が次を下回ったら通知
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.trade.message.msg.started=RADCの買い手がID {0}とのトレードの支払いを開始しました。
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.marketAlert.offerType.buy=購入のオファー（RADCを売りたい）
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.marketAlert.offerType.sell=売却のオファー（RADCを買いたい）
core/src/main/resources/i18n/displayStrings_ja.properties:account.notifications.marketAlert.trigger.info=価格乖離を設定すると、要件を満たす（または超える）オファーが公開されたときにのみアラートを受信します。例：RADCを売りたい時、現在の市場価格に対して2％のプレミアムでのみ販売。このフィールドを2％に設定すると、現在の市場価格よりも2％（またはそれ以上）高い価格のオファーのアラートのみを受け取るようになります。
core/src/main/resources/i18n/displayStrings_ja.properties:dao.availableNonBsqBalance=利用可能な非BSQ残高 (RADC)
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.DEFAULT_MAKER_FEE_RADC=RADCメイカー手数料
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.DEFAULT_TAKER_FEE_RADC=RADCテイカー手数料
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.MIN_MAKER_FEE_RADC=最小RADCメイカー手数料
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.MIN_TAKER_FEE_RADC=最小RADCテイカー手数料
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.RECIPIENT_RADC_ADDRESS=受信者RADCアドレス
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.ARBITRATOR_FEE=RADCでの調停手数料
core/src/main/resources/i18n/displayStrings_ja.properties:dao.param.MAX_TRADE_LIMIT=RADCでの最大トレード制限
core/src/main/resources/i18n/displayStrings_ja.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=ビットコインノード運営者
core/src/main/resources/i18n/displayStrings_ja.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=RADC寄付アドレスの所有者
core/src/main/resources/i18n/displayStrings_ja.properties:dao.wallet.send.sendBtcFunds=非BSQ残高の送金 (RADC)
core/src/main/resources/i18n/displayStrings_ja.properties:dao.wallet.send.btcAmount=RADCの額（非BSQ残高）
core/src/main/resources/i18n/displayStrings_ja.properties:dao.wallet.send.receiverBtcAddress=受信者のRADCアドレス
core/src/main/resources/i18n/displayStrings_ja.properties:dao.wallet.send.sendBtc=RADC残高の送信
core/src/main/resources/i18n/displayStrings_ja.properties:dao.tx.withdrawnFromWallet=ウォレットから出金されたRADC
core/src/main/resources/i18n/displayStrings_ja.properties:dao.proposal.create.missingMinerFeeFunds=提案トランザクションを作成するための十分なRADC残高がありません。すべてのBSQトランザクションには、RADCのマイナニング手数料が必要です。\n不足: {0}
core/src/main/resources/i18n/displayStrings_ja.properties:dao.proposal.create.missingIssuanceFunds=提案トランザクションを作成するための十分なRADC残高がありません。すべてのBSQトランザクションにはRADCのマイニング手数料が必要で、発行トランザクションにも要求されたBSQ金額（{0} Satoshis/BSQ）のRADCが必要です。\n不足: {1}
core/src/main/resources/i18n/displayStrings_ja.properties:dao.feeTx.issuanceProposal.confirm.details={0}手数料: {1}\nBSQ発行に必要なRADC: {2}({3} Satoshis/BSQ)\nマイニング手数料: {4} ({5} Satoshis/vbyte)\nトランザクションvサイズ {6} vKb\n\nリクエストが承認されると、あなたは2 BSQの提案料金を差し引いた金額を受け取ります。\n\n本当に{7}トランザクションを発行しますか？
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.dashboard.avgPrice90=90日間の平均BSQ/RADCのトレード価格
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.dashboard.avgPrice30=30日間の平均BSQ/RADCのトレード価格
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_ja.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_ja.properties:contractWindow.btcAddresses=ビットコインアドレス RADC買い手 / RADC売り手
core/src/main/resources/i18n/displayStrings_ja.properties:contractWindow.onions=ネットワークアドレス RADC買い手 / RADC売り手
core/src/main/resources/i18n/displayStrings_ja.properties:contractWindow.accountAge=アカウント年齢 RADC買い手 / RADC売り手
core/src/main/resources/i18n/displayStrings_ja.properties:contractWindow.numDisputes=調停人の数 RADCの買い手 / RADCの売り手
core/src/main/resources/i18n/displayStrings_ja.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0}はトレード金額の支払いを受け取ります
core/src/main/resources/i18n/displayStrings_ja.properties:disputeSummaryWindow.payout.getsAll=RADCへの最高額支払い {0}
core/src/main/resources/i18n/displayStrings_ja.properties:disputeSummaryWindow.close.msg=チケットは {0} に閉じられました\n{1} ノードアドレス: {2}\n\nまとめ\nトレードID: {3}\n通貨: {4}\nトレード金額: {5}\n買い手のRADC支払額: {6}\n売り手のRADC支払額 {7}\n\n係争の理由: {8}\n\n概要ノート:\n{9}\n
core/src/main/resources/i18n/displayStrings_ja.properties:emptyWalletWindow.bsq.btcBalance=非BSQ Satoshisの残高
core/src/main/resources/i18n/displayStrings_ja.properties:filterWindow.btcNode=フィルター済ビットコインノード（コンマ区切り アドレス＋ポート）
core/src/main/resources/i18n/displayStrings_ja.properties:filterWindow.preventPublicBtcNetwork=パブリックビットコインネットワークの使用を防止
core/src/main/resources/i18n/displayStrings_ja.properties:filterWindow.btcFeeReceiverAddresses=RADC手数料受信アドレス
core/src/main/resources/i18n/displayStrings_ja.properties:offerDetailsWindow.minBtcAmount=最小のRADC金額
core/src/main/resources/i18n/displayStrings_ja.properties:txDetailsWindow.btc.note=RADCを送金しました。
core/src/main/resources/i18n/displayStrings_ja.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_ja.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_ja.properties:feeOptionWindow.info=あなたは取引手数料の支払いにBSQまたはRADCを選択できます。 BSQを選択した場合は、割引された取引手数料に気付くでしょう。
core/src/main/resources/i18n/displayStrings_ja.properties:feeOptionWindow.useRADC=RADCを使用
core/src/main/resources/i18n/displayStrings_ja.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_ja.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.notSufficientConnectionsToBtcNetwork=少なくとも{0}のビットコインネットワークへの接続が確立されるまでお待ちください。
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.insufficientBtcFundsForBsqTx=あなたはそのトランザクションのマイニング手数料を支払うのに十分なRADC残高を持っていません。 RADCウォレットに資金を入金してください。 \n不足残高: {0}
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.btcChangeBelowDustException=このトランザクションは、ダスト制限（546 Satoshi）を下回るBSQおつりアウトプットを作成し、ビットコインネットワークによって拒否されます。\n\nダストアウトプットを生成しないように、あなたの送金額にダスト額を追加する必要があります。\n\nダストアウトプットは{0}。
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=このトランザクションにはBSQが足りません。ビットコインプロトコルのダスト制限によると、ウォレットから最後の5.46BSQはトレード手数料に使われることができません。\n\nもっとBSQを買うか、RADCでトレード手数料を支払うことができます。\n\n不足している資金: {0}
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.noBsqFundsForBtcFeePayment=BSQウォレットにBSQのトレード手数料を支払うのに十分な残高がありません。
core/src/main/resources/i18n/displayStrings_ja.properties:popup.warning.burnRADC={0}のマイニング手数料が{1}の送金額を超えるため、このトランザクションは利用不可です。マイニング手数料が再び低くなるか、送金するRADCがさらに蓄積されるまでお待ちください。
core/src/main/resources/i18n/displayStrings_ja.properties:notification.trade.accepted=あなたのオファーはRADC {0}によって承認されました。
core/src/main/resources/i18n/displayStrings_ja.properties:notification.trade.paymentStarted=RADCの買い手が支払いを開始しました。
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_MAINNET=ビットコイン メインネット
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_TESTNET=ビットコイン テストネット
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_REGTEST=ビットコイン（Regtest）
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_DAO_TESTNET=ビットコインDAOテストネット（非推奨）
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_DAO_BETANET=BisqDAOベータネット（ビットコイン メインネット）
core/src/main/resources/i18n/displayStrings_ja.properties:RADC_DAO_REGTEST=ビットコインDAO Regtest
core/src/main/resources/i18n/displayStrings_ja.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_ja.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_ja.properties:payment.moneyGram.info=MoneyGramを使用する場合、RADCの買い手は認証番号と領収書の写真をEメールでRADCの売り手に送信する必要があります。領収書には、売り手の氏名、市区町村、国、金額を明確に記載する必要があります。トレードプロセスにて、売り手のEメールは買い手に表示されます。
core/src/main/resources/i18n/displayStrings_ja.properties:payment.westernUnion.info=Western Unionを使用する場合、RADCの買い手はMTCN（追跡番号）と領収書の写真をEメールでRADCの売り手に送信する必要があります。領収書には、売り手の氏名、市区町村、国、金額を明確に記載する必要があります。トレードプロセスにて、売り手のEメールは買い手に表示されます。
core/src/main/resources/i18n/displayStrings_ja.properties:payment.halCash.info=HalCashを使用する場合、RADCの買い手は携帯電話からのテキストメッセージを介してRADCの売り手にHalCashコードを送信する必要があります。\n\n銀行がHalCashで送金できる最大額を超えないようにしてください。 1回の出金あたりの最小金額は10EURで、最大金額は600EURです。繰り返し出金する場合は、1日に受取人1人あたり3000EUR、1ヶ月に受取人１人あたり6000EURです。あなたの銀行でも、ここに記載されているのと同じ制限を使用しているか、これらの制限を銀行と照合して確認してください。\n\n出金額は10の倍数EURでなければ、ATMから出金できません。 オファーの作成画面およびオファー受け入れ画面のUIは、EUR金額が正しくなるようにRADC金額を調整します。価格の変化とともにEURの金額は変化するため、市場ベースの価格を使用することはできません。\n\n係争が発生した場合、RADCの買い手はEURを送ったという証明を提出する必要があります。
core/src/main/resources/i18n/displayStrings_ja.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ja.properties:payment.usPostalMoneyOrder.info=Bisqでアメリカ合衆国郵便為替（USPMO）をトレードするには、以下を理解する必要があります：\n\n-送る前に、RADC買い手は必ずRADC売り手の名前を支払人そして支払先フィールド両方に書いて、追跡証明も含めるUSPMOそして封筒の高解像度写真を取る必要があります。\n-RADC買い手は必ず配達確認を利用してRADC売り手にUSPMOを送る必要があります。\n\n調停が必要になる場合、あるいはトレード係争が開始される場合、調停者や調停人がアメリカ合衆国郵便のサイトで詳細を確認できるように、取った写真、USPMOシリアル番号、郵便局番号、そしてドル金額を送る必要があります。\n\n調停者や調停人に必要な情報を提供しなければ、係争で不利な裁定を下されます。\n\n全ての係争には、調停者や調停人に証明を提供するのは100%USPMO送付者の責任です。\n\n以上の条件を理解しない場合、BisqでUSPMOのトレードをしないで下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:payment.cashByMail.info=Bisqで、郵送で現金（CBM)を利用してトレードするには、以下を理解する必要があります：\n● RADC買い手は現金を開封明示機構のある袋に入れるべき。\n● 送り先住所とトラッキング番号が袋に貼ってある状態で、包装過程の動画あるいはHD写真を取るべき。\n● 配達確認と保険を掛けて、RADC買い手はRADC売り手に袋を送るべき。\n● RADC売り手は送り手にもらったトラッキング番号が見えるように、袋の開梱の動画を撮影するべき。\n● オファーのメイカーは支払いアカウントの「追加情報」フィールドに特別な契約条件を述べるべき。\n● テイカーはオファーを受けることによってその契約条件に同意することを示す。\n\nCBMでトレードする場合では、正直に行動する責任は完全にトレードピアのみに負わされます。\n\n● 他の法定通貨トレードと比べて、CBTトレードには検証可能な行動は少ない。つまり、係争は処理しにくい。\n● 係争が発生した場合、取引者チャットで解決する方が一番効果的です。\n● 調停者が問題を検討し提案できますが、問題を解決できること保障されるものではない。\n● 調停者は取り組まれる場合、何れのトレードピアが調停者の提案を拒否したら両方のピアの資金はBisqの寄付アドレス [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction] まで送られ、トレードは事実上に終了されることになります。\n● 1人の取引者が調停者の提案を拒否して仲裁を開始したら、両方のトレードピアのトレードとデポジット金額両方は失われる可能性があります。\n● 調停人は提供される証拠に基づいて決定を下すので、前もって係争の場合の準備として、以上のトレードプロセスを記録して下さい。郵送で現金トレードの場合、調停人の決定は最終的なものです。\n● 郵送で現金トレードから失われた金額はBisqのDAOから払い戻しできませんので、払い戻しリクエストは否定されます。\n\n以上の要件を十分に理解することを断言するため、Wikiを参照して下さい：[HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nこれらの要件を理解していない場合は、BisqでCBMを利用してトレードしないで下さい。
core/src/main/resources/i18n/displayStrings_ja.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_ja.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.fraction=この入力では1サトシ以下のビットコイン値が生成されます。
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.toLarge={0}より大きい入力は許可されていません。
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.toSmall={0}より小さい入力は許可されていません。
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.invalidAddress=アドレスが正しくありません。アドレス形式を確認してください。
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.exceedsMaxTradeLimit=あなたのトレード制限は{0}です。
core/src/main/resources/i18n/displayStrings_ja.properties:validation.btc.invalidFormat=ビットコインアドレスにとって無効な形式です。
core/src/main/resources/i18n/displayStrings_es.properties:shared.buyingRADCWith=Comprando RADC con {0}
core/src/main/resources/i18n/displayStrings_es.properties:shared.sellingRADCFor=Vendiendo RADC por {0}
core/src/main/resources/i18n/displayStrings_es.properties:shared.buyingCurrency=comprando {0} (Vendiendo RADC)
core/src/main/resources/i18n/displayStrings_es.properties:shared.sellingCurrency=Vendiendo {0} (comprando RADC)
core/src/main/resources/i18n/displayStrings_es.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_es.properties:shared.TheRADCBuyer=El comprador de RADC
core/src/main/resources/i18n/displayStrings_es.properties:shared.paymentDetails=Detalles de pago RADC {0}
core/src/main/resources/i18n/displayStrings_es.properties:shared.btcAmount=Cantidad RADC
core/src/main/resources/i18n/displayStrings_es.properties:mainView.menu.buyBtc=Comprar RADC
core/src/main/resources/i18n/displayStrings_es.properties:mainView.menu.sellBtc=Vender RADC
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcFeeRate=/Tasas actuales: {0} sat/vB
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo.initializing=Conectando a la red Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo.synchronizingWith=Sincronizando con {0} en el bloque: {1} / {2}
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo.synchronizedWith=Sincronizado con {0} en el bloque {1}
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo.connectingTo=Conectando a
core/src/main/resources/i18n/displayStrings_es.properties:mainView.footer.btcInfo.connectionFailed=Conexión fallida a
core/src/main/resources/i18n/displayStrings_es.properties:market.spread.numberOfBuyOffersColumn=Comprar RADC ({0})
core/src/main/resources/i18n/displayStrings_es.properties:market.spread.numberOfSellOffersColumn=Vender RADC ({0})
core/src/main/resources/i18n/displayStrings_es.properties:market.spread.totalAmountColumn=Total RADC ({0})
core/src/main/resources/i18n/displayStrings_es.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_es.properties:offerbook.deposit=Depósito en RADC (%)
core/src/main/resources/i18n/displayStrings_es.properties:createOffer.amount.prompt=Introducir cantidad en RADC
core/src/main/resources/i18n/displayStrings_es.properties:createOffer.amountPriceBox.amountDescription=Cantidad de RADC a {0}
core/src/main/resources/i18n/displayStrings_es.properties:createOffer.amountPriceBox.minAmountDescription=Cantidad mínima de RADC
core/src/main/resources/i18n/displayStrings_es.properties:createOffer.tradeFee.descriptionRADCOnly=Comisión de transacción
core/src/main/resources/i18n/displayStrings_es.properties:takeOffer.amount.prompt=Introducir la cantidad en RADC
core/src/main/resources/i18n/displayStrings_es.properties:takeOffer.amountPriceBox.buy.amountDescription=Cantidad de RADC a vender
core/src/main/resources/i18n/displayStrings_es.properties:takeOffer.amountPriceBox.sell.amountDescription=Cantidad de RADC a comprar
core/src/main/resources/i18n/displayStrings_es.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=La cantidad introducida excede el número de decimales permitidos.\nLa cantidad ha sido ajustada a 4 decimales.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.refTextWarn=Importante: al hacer un pago, deje el campo \"motivo de pago\" vacío. NO PONGA la ID de intercambio o algún otro texto como 'bitcoin', 'RADC', o 'Bisq'. Los comerciantes pueden convenir en el chat de intercambio un \"motivo de pago\" alternativo.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.altcoin=Por favor transfiera fondos desde su cartera externa {0}\n{1} al vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.cash=Por favor vaya al banco y pague {0} al vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.cash.extra=REQUERIMIENTO IMPORTANTE:\nDespués de haber hecho el pago escribe en el recibo de papel: NO REFUNDS\nLuego divídalo en 2 partes, haga una foto y envíela a la dirección de correo electrónico del vendedor de RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.moneyGram=Por favor pague {0} al vendedor de RADC utilizando MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.moneyGram.extra=REQUERIMIENTO IMPORTANTE:\nDespués que usted haya realizado el pago, envíe el número de autorización y una foto del recibo al vendedor de RADC por correo electrónico.\nEl recibo debe mostrar claramente el monto, asi como el nombre completo, país y demarcación (departamento,estado, etc.) del vendedor. El correo electrónico del vendedor es: {0}.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.westernUnion=Por favor pague {0} al vendedor de RADC usando Western Union.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.westernUnion.extra=REQUERIMIENTO IMPORTANTE:\nDespués de haber realizado el pago envíe el MTCN (número de seguimiento) y una foto de el recibo por email a el vendedor de RADC.\nEl recibo debe mostrar claramente el nombre completo del emisor, la ciudad, país y la cantidad. El email del vendedor es: {0}.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.postal=Por favor envíe {0} mediante \"US Postal Money Order\" a el vendedor de RADC.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.pay=Por favor pague {0} a través del método de pago especificado al vendedor RADC. Encontrará los detalles de la cuenta del vendedor en la siguiente pantalla.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.f2f=Por favor contacte al vendedor de RADC con el contacto proporcionado y acuerden un encuentro para pagar {0}.\n\n
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.paperReceipt.headline=¿Ha enviado el recibo a el vendedor de RADC?
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Recuerde:\nTiene que escribir en el recibo de papel: NO REFUNDS.\nLuego divídalo en 2 partes, haga una foto y envíela a la dirección de e-mail del vendedor de RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Debe enviar el número de autorización y una foto del recibo por correo electrónico al vendedor de RADC.\nEl recibo debe mostrar claramente el monto, así como el nombre completo, país y demarcación (departamento,estado, etc.) del vendedor. El correo electrónico del vendedor es: {0}.\n\n¿Envió usted el número de autorización y el contrato al vendedor?
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Necesita enviar el MTCN (número de seguimiento) y una foto de el recibo por email a el vendedor de RADC\nEl recibo debe mostrar claramente el nombre completo del emisor, la ciudad, el país y la cantidad. El email del vendedor es: {0}\n\n¿Envió el MTCN y el contrato al vendedor?
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=No ha introducido la transacción de ID y la clave de transacción.\n\nAl no proveer esta información el par no puede usar la autoconfirmación para liberar los RADC en cuanto los XMR se han recibido.\nAdemás de esto, Bisq requiere que el emisor de la transacción XMR sea capaz de entregar esta información al mediador o árbitro en caso de disputa.\nVea más detalles en la wiki de Bisq: [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_seller.waitPayment.msg=La transacción del depósito tiene al menos una confirmación en la cadena de bloques.\nTiene que esperar hasta que el comprador de RADC comience el pago de {0}.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_seller.warn=El comprador de RADC aún no ha realizado el pago de {0}.\nNecesita esperar hasta que el pago comience.\nSi el intercambio aún no se ha completado el {1} el árbitro procederá a investigar.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step2_seller.openForDispute=El comprador de RADC no ha comenzado su pago!\nEl periodo máximo permitido ha finalizado.\nPuede esperar más y dar más tiempo a la otra parte o contactar con el mediador para abrir una disputa.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_buyer.wait.headline=Espere a la confirmación de pago del vendedor de RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_buyer.wait.info=Esperando a la confirmación del recibo de pago de {0} por parte del vendedor de RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_buyer.warn.part2=El vendedor de RADC aún no ha confirmado su pago. Por favor, compruebe {0} si el envío del pago fue correcto.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_buyer.openForDispute=¡El vendedor de RADC aún no ha confirmado su pago! El periodo máximo para el intercambio ha concluido. Puede esperar y dar más tiempo a la otra parte o solicitar asistencia del mediador.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.postal={0}Por favor compruebe si ha recibido {1} con \"US Postal Money Order\" enviados por el comprador RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.cashByMail={0}Por favor compruebe si ha recibido {1} con \"Efectivo por Correo\" enviados por el comprador RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.bank=Su par de intercambio confirma que ha iniciado el pago de {0}.\n\nPor favor vaya a la página web de su banco y compruebe si ha recibido {1} del comprador de RADC.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.cash=Debido a que el pago se hecho vía depósito en efectivo el comprador de RADC tiene que escribir \"SIN REEMBOLSO\" en el recibo de papel, dividirlo en 2 partes y enviarte una foto por e-mail.\n\nPara impedir el riesgo de reembolso, solo confirme si ha recibido el e-mail y si está seguro de que el recibo es válido.\nSi no está seguro, {0}
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.moneyGram=El comprador tiene que enviarle el número de autorización y una foto del recibo por correo electrónico.\n\nEl recibo debe mostrar claramente el monto, asi como su nombre completo, país y demarcación (departamento,estado, etc.). Por favor revise su correo electrónico si recibió el número de autorización.\n\nDespués de cerrar esa ventana emergente (popup), verá el nombre y la dirección del comprador de RADC para retirar el dinero de MoneyGram.\n\n¡Solo confirme el recibo de transacción después de haber obtenido el dinero con éxito!
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.westernUnion=El comprador tiene que enviarle el MTCN (número de seguimiento) y una foto de el recibo por email.\nEl recibo debe mostrar claramente su nombre completo, ciudad, país y la cantidad. Por favor compruebe su email si ha recibido el MTCN.\n\nDespués de cerrar ese popup verá el nombre del comprador de RADC y la dirección para recoger el dinero de Western Union.\n\nSolo confirme el recibo después de haber recogido satisfactoriamente el dinero!
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.buyerStartedPayment=El comprador de RADC ha iniciado el pago de {0}.\n{1}
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Por favor tenga en cuenta, que tan pronto como haya confirmado el recibo, la cantidad de intercambio bloqueada será librerada al comprador de RADC y el depósito de seguridad será devuelto.
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.step5_buyer.withdrawRADC=Retirar bitcoins
core/src/main/resources/i18n/displayStrings_es.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_es.properties:funds.deposit.amount=Cantidad en RADC (opcional)
core/src/main/resources/i18n/displayStrings_es.properties:funds.tx.withdrawnFromBSQWallet=RADC retirados desde el monedero BSQ
core/src/main/resources/i18n/displayStrings_es.properties:funds.tx.dustAttackTx.popup=Esta transacción está enviando una cantidad de RADC muy pequeña a su monedero y puede ser un intento de compañías de análisis de cadenas para espiar su monedero.\n\nSi usa este output para gastar en una transacción, conocerán que probablemente usted sea el propietario de sus otras direcciones (fusión de monedas).\n\nPara proteger su privacidad el monedero Bisq ignora estos outputs para propósitos de gasto y en el balance mostrado. Puede establecer el umbral en el que un output es considerado dust en ajustes.
core/src/main/resources/i18n/displayStrings_es.properties:support.buyerAddress=Dirección del comprador de RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.sellerAddress=Dirección del vendedor de RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.buyerOfferer=comprador/creador RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.sellerOfferer=vendedor/creador RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.buyerTaker=comprador/Tomador RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.sellerTaker=vendedor/Tomador RADC
core/src/main/resources/i18n/displayStrings_es.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_es.properties:setting.preferences.autoConfirmMaxTradeSize=Cantidad máxima de intecambio (RADC)
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.btcHeader=Red Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.btcNodesLabel=Utilizar nodos Bitcoin Core personalizados
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.useTorForBtcJLabel=Usar Tor para la red Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.warn.invalidBtcConfig=La conexión a la red Bitcoin falló debido a que su configuración es inválida.\n\nSu configuración se ha reestablecido para usar los nodos Bitcoin proporcionados. Necesitará reiniciar la aplicación.
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.localhostBtcNodeInfo=Información complementaria: Bisq busca un nodo local Bitcoin al inicio. Si lo encuentra, Bisq se comunicará a la red Bitcoin exclusivamente a través de él.
core/src/main/resources/i18n/displayStrings_es.properties:settings.net.chainHeightLabel=Altura del último bloque RADC
core/src/main/resources/i18n/displayStrings_es.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Abrir herramienta de monedero de emergencia para el monedero RADC
core/src/main/resources/i18n/displayStrings_es.properties:setting.info.msg=Al vender XMR por XMR puede usar la función de autoconfirmación para verificar que la cantidad correcta de XMR se envió al monedero con lo que Bisq pueda marcar el intercambio como completo, haciendo los intercambios más rápidos para todos.\n\nLa autoconfirmación comprueba que la transacción de XMR en al menos 2 nodos exploradores XMR usando la clave de transacción entregada por el emisor XMR. Por defecto, Bisq usa nodos exploradores ejecutados por contribuyentes Bisq, pero recomendamos usar sus propios nodos exploradores para un máximo de privacidad y seguridad.\n\nTambién puede configurar la cantidad máxima de RADC por intercambio  para la autoconfirmación, así como el número de confirmaciones en Configuración.\n\nVea más detalles (incluído cómo configurar su propio nodo explorador) en la wiki Bisq: [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_es.properties:account.menu.walletInfo.balance.info=Esto muestrta el balance interno del monedero, incluyendo transacciones no confirmadas.\nPara RADC, el balance interno de monedero mostrado abajo debe cuadrar con la suma de balances 'Disponible' y 'Reservado' mostrado arriba a la derecha de esta ventana.
core/src/main/resources/i18n/displayStrings_es.properties:account.altcoin.popup.liquidbitcoin.msg=Comerciar L-RADC en Bisq requiere que entienda lo siguiente:\n\nAl recibir L-RADC de un intercambio en Bisq, no puede usar la app de monedero móvil Blockstream Green Wallet o un exchange/monedero que custodie sus fondos. Solo debe recibir L-RADC en el monedero Liquid Elements Core, u otro monedero L-RADC que le permita obtener la clave cegadora para su dirección L-RADC cegada.\n\nEn caso de ser necesaria mediación, o si se lleva a cabo una disputa, debe entregar la clave cegadora para su dirección receptora de L-RADC al mediador o agente de devolución de fondos Bisq para que verifique los detalles de su Transacción Confidencial en su nodo completo Elements Core.\n\nSi no entrega la información requerida al mediador o al agente de devolución de fondos se resolverá en una pérdida del caso en disputa. En todos los casos de disputa, el receptor de L-RADC es responsable del 100% de la carga de aportar la prueba criptográfica al mediador o agente de devolución de fondos.\n\nSi no entiende estos requerimientos, no intercambio L-RADC en Bisq.
core/src/main/resources/i18n/displayStrings_es.properties:account.seed.info=Por favor apunte en un papel tanto las palabras semilla del monedero como la fecha! Puede recuperar su monedero en cualquier momento con las palabras semilla y la fecha.\nLas mismas palabras semilla se usan para el monedero RADC como BSQ\n\nDebe apuntar las palabras semillas en una hoja de papel. No la guarde en su computadora.\n\nPor favor, tenga en cuenta que las palabras semilla no son un sustituto de la copia de seguridad.\nNecesita hacer la copia de seguridad de todo el directorio de aplicación en la pantalla \"Cuenta/Copia de Seguridad\" para recuperar un estado de aplicación válido y los datos.\nImportar las palabras semilla solo se recomienda para casos de emergencia. La aplicación no será funcional sin una buena copia de seguridad de los archivos de la base de datos y las claves!
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.priceAlert.high.label=Notificar si el precio de RADC está por encima
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.priceAlert.low.label=Notificar si el precio de RADC está por debajo
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.trade.message.msg.started=El comprador de RADC ha iniciado el pago para el intercambio con ID {0}
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.marketAlert.offerType.buy=Ofertas de compra (quiero vender RADC)
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.marketAlert.offerType.sell=Ofertas de venta (quiero comprar RADC)
core/src/main/resources/i18n/displayStrings_es.properties:account.notifications.marketAlert.trigger.info=Con distancia de precio establecida, solamente recibirá una alerta cuando se publique una oferta que satisfaga (o exceda) sus requerimientos. Por ejemplo: quiere vender RADC, pero solo venderá con un 2% de premium sobre el precio de mercado actual. Configurando este campo a 2% le asegurará que solo recibirá alertas de ofertas con precios que estén al 2% (o más) sobre el precio de mercado actual.
core/src/main/resources/i18n/displayStrings_es.properties:dao.availableNonBsqBalance=Saldo no-BSQ disponible (RADC)
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Comisión de creador RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Comisión de tomador RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.MIN_MAKER_FEE_RADC=Comisión de creador RADC mínima
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.MIN_TAKER_FEE_RADC=Comisión de tomador mínima RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.RECIPIENT_RADC_ADDRESS=Dirección RADC del receptor
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.ARBITRATOR_FEE=Comisión de arbitraje en RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.param.MAX_TRADE_LIMIT=Límite máximo de intercambio en RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Operador de nodo Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Propietario de dirección de donaciones RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.wallet.send.sendBtcFunds=Enviar fondos no-BSQ (RADC)
core/src/main/resources/i18n/displayStrings_es.properties:dao.wallet.send.btcAmount=Cantidad en RADC (fondos no-BSQ)
core/src/main/resources/i18n/displayStrings_es.properties:dao.wallet.send.receiverBtcAddress=Dirección RADC del receptor
core/src/main/resources/i18n/displayStrings_es.properties:dao.wallet.send.sendBtc=Enviar fondos RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.tx.withdrawnFromWallet=RADC retirados desde el monedero
core/src/main/resources/i18n/displayStrings_es.properties:dao.proposal.create.missingMinerFeeFunds=No tiene suficientes fondos RADC para crear la transacción propuesta. Todas las transacciones BSQ requieren una comisión de minado en RADC.\nNecesarios: {0}
core/src/main/resources/i18n/displayStrings_es.properties:dao.proposal.create.missingIssuanceFunds=No tiene suficientes fondos RADC para crear la transacción de propuesta. Todas las transacciones BSQ requieren una comisión de minado en RADC, y la emisión de transacciones también requieren RADC para la cantidad de BSQ solicitada ({0} Satoshis/BSQ).\nNecesarios: {1}
core/src/main/resources/i18n/displayStrings_es.properties:dao.feeTx.issuanceProposal.confirm.details={0} comisión: {1}\nRADC necesarios para emisión BSQ: {2} ({3} Satoshis/BSQ)\nTasa de minado: {4} ({5} Satoshis/vbyte)\nTamaño de transacción: {6} Kb\n\nSi la solicitud se aprueba, recibirá la cantidad neta que ha solicitado de las 2 BSQ de comisión de propuesta.\n¿Está seguro de que quiere publicar la transacción de {7}?
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.dashboard.avgPrice90=Medía de 90 días del precio de intercambio BSQ/RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.dashboard.avgPrice30=Medía de 30 días del precio de intercambio BSQ/RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.dashboard.volumeBtc=Volumen de intercambio total en RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Precio BSQ/RADC medio de intercambio desde en el periodo de tiempo seleccionado en el gráfico
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Volumen de intercambio en RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.supply.bsqBtcPrice=precio BSQ/RADC
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.supply.btcUsdPrice=Precio RADC/USD
core/src/main/resources/i18n/displayStrings_es.properties:dao.factsAndFigures.supply.btcTradeFee=Tasas de intercambio en RADC
core/src/main/resources/i18n/displayStrings_es.properties:contractWindow.btcAddresses=Dirección Bitcoin comprador RADC / vendedor RADC
core/src/main/resources/i18n/displayStrings_es.properties:contractWindow.onions=Dirección de red de comprador RADC / Vendedor RADC
core/src/main/resources/i18n/displayStrings_es.properties:contractWindow.accountAge=Edad de cuenta del comprador RADC / vendedor RADC
core/src/main/resources/i18n/displayStrings_es.properties:contractWindow.numDisputes=No. de disputas del comprador RADC / Vendedor RADC
core/src/main/resources/i18n/displayStrings_es.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} obtiene la cantidad de pago de intercambio
core/src/main/resources/i18n/displayStrings_es.properties:disputeSummaryWindow.payout.getsAll=Cantidad máxima de pago RADC {0}
core/src/main/resources/i18n/displayStrings_es.properties:disputeSummaryWindow.close.msg=Ticket cerrado el {0}\n{1} dirección de nodo: {2}\n\nResumen:\nID de intercambio: {3}\nMoneda: {4}\nCantidad del intercambio: {5}\nCantidad de pago para el comprador de RADC: {6}\nCantidad de pago para el vendedor de RADC: {7}\n\nMotivo de la disputa: {8}\n\nNotas resumidas:\n{9}\n
core/src/main/resources/i18n/displayStrings_es.properties:emptyWalletWindow.bsq.btcBalance=Balance de Satoshis no-BSQ
core/src/main/resources/i18n/displayStrings_es.properties:filterWindow.btcNode=Nodos Bitcoin filtrados (direcciones + puerto separadas por coma)
core/src/main/resources/i18n/displayStrings_es.properties:filterWindow.preventPublicBtcNetwork=Prevenir uso de la red Bitcoin pública
core/src/main/resources/i18n/displayStrings_es.properties:filterWindow.btcFeeReceiverAddresses=Direcciones de recepción de la tasa RADC
core/src/main/resources/i18n/displayStrings_es.properties:offerDetailsWindow.minBtcAmount=Cantidad mínima RADC
core/src/main/resources/i18n/displayStrings_es.properties:txDetailsWindow.btc.note=Ha enviado RADC
core/src/main/resources/i18n/displayStrings_es.properties:txDetailsWindow.bsq.note=Ha enviado fondos BSQ. BSQ son bitcoin coloreados, con lo que la transacción no se mostrará en el explorador BSQ hasta que sea confirmada en un bloque RADC.
core/src/main/resources/i18n/displayStrings_es.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Suma de todas las tasas de intercambio pagadas en RADC
core/src/main/resources/i18n/displayStrings_es.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} de la cantidad total intercambiada)
core/src/main/resources/i18n/displayStrings_es.properties:feeOptionWindow.info=Puede elegir pagar la tasa de intercambio en BSQ o RADC. Si elige BSQ apreciará la comisión de intercambio descontada.
core/src/main/resources/i18n/displayStrings_es.properties:feeOptionWindow.useRADC=Usar RADC
core/src/main/resources/i18n/displayStrings_es.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_es.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Necesita esperar hasta que tenga al menos {0} conexiones a la red Bitcoin.
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.insufficientBtcFundsForBsqTx=No tiene suficientes fondos RADC para pagar la comisión de minado para esta transacción.\nPor favor ingrese fondos en su monedero RADC.\nFondos faltantes: {0}
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.btcChangeBelowDustException=Esta transacción crea un output de cambio que está por debajo del límite de dust (546 Satoshi) y sería rechazada por la red Bitcoin.\n\nDebe agregar la cantidad de dust a su cantidad de envío para evitar generar un output de dust.\n\nEl output de dust es {0}.
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=Necesitará más BSQ para hacer esta transacción -los últimos 5.46BSQ en su monedero no pueden usarse para pagar tasas de intercambio debido a límites dust en el protocolo Bitcoin.\n\nPuede comprar más BSQ o pagar las tasas de intercambio con RADC.\n\nFondos necesarios: {0}
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.noBsqFundsForBtcFeePayment=Su monedero BSQ no tiene suficientes fondos para pagar la comisión de intercambio en BSQ.
core/src/main/resources/i18n/displayStrings_es.properties:popup.warning.burnRADC=Esta transacción no es posible, ya que las comisiones de minado de {0} excederían la cantidad a transferir de {1}. Por favor, espere a que las comisiones de minado bajen o hasta que haya acumulado más RADC para transferir.
core/src/main/resources/i18n/displayStrings_es.properties:notification.trade.accepted=Su oferta ha sido aceptada por un {0} RADC
core/src/main/resources/i18n/displayStrings_es.properties:notification.trade.paymentStarted=El comprador de RADC ha comenzado el pago.
core/src/main/resources/i18n/displayStrings_es.properties:RADC_MAINNET=Red principal de Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:RADC_TESTNET=Red de prueba de Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:RADC_REGTEST=Regtest Bitcoin
core/src/main/resources/i18n/displayStrings_es.properties:RADC_DAO_TESTNET=Testnet de Bitcoin DAO (depreciada)
core/src/main/resources/i18n/displayStrings_es.properties:RADC_DAO_BETANET=DAO Bisq Betanet (red principal Bitcoin)
core/src/main/resources/i18n/displayStrings_es.properties:RADC_DAO_REGTEST=Regtest de Bitcoin DAO
core/src/main/resources/i18n/displayStrings_es.properties:payment.makeOfferToUnsignedAccount.warning=Tras el reciente incremento del precio de RADC, tenga en cuenta que vender 0.01RADC o menos incurre en un mayor riesgo que antes.\n\nEs altamente recomendado que:\n- haga ofertas >0.01RADC de tal modo que solo intercambie con comerciantes  firmados/de confianza\n- mantenga las ofertas para vender <0.01RADC alrededor de ~100USD, ya que este valor históricamente no es atractivo para estafadores\n\nLos desarrolladores de Bisq están trabajando en mejores maneras de asegurar que el modelo de cuenta de pago para estos intercambios menores. Únase a la discusión en: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_es.properties:payment.takeOfferFromUnsignedAccount.warning=Con el reciente aumento del precio de RADC, tenga en cuenta que vender 0.01RADC o menos incurre en un mayor riesgo.\n\nSe recomienda:\n- tomar ofertas solo de compradores firmados\n- hacer intercambios con pares no firmados de alrededor de 100USD de valor, ya que históricamente ha evitado a los estafadores.\n\nLos desarrolladores de Bisq están trabajando en mejorar la seguridad de los métodos de pago en estos intercambios. Únase a la discusión aquí: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_es.properties:payment.moneyGram.info=Al utilizar MoneyGram, el comprador de RADC tiene que enviar el número de autorización y una foto del recibo al vendedor de RADC por correo electrónico. El recibo debe mostrar claramente el nobre completo del vendedor, país, estado y cantidad. El email del vendedor se mostrará al comprador durante el proceso de intercambio.
core/src/main/resources/i18n/displayStrings_es.properties:payment.westernUnion.info=Al utilizar Western Union, el comprador de RADC tiene que enviar el número de seguimiento (MTCN) y una foto del recibo al vendedor de RADC por correo electrónico. El recibo debe mostrar claramente el como el nombre completo del vendedor, país, ciudad y cantidad. Al comprador se le mostrará el correo electrónico del vendedor en el proceso de intercambio.
core/src/main/resources/i18n/displayStrings_es.properties:payment.halCash.info=Al usar HalCash el comprador de RADC necesita enviar al vendedor de RADC el código HalCash a través de un mensaje de texto desde el teléfono móvil.\n\nPor favor asegúrese de que no excede la cantidad máxima que su banco le permite enviar con HalCash. La cantidad mínima por retirada es de 10 EUR y el máximo son 600 EUR. Para retiros frecuentes es 3000 por receptor al día y 6000 por receptor al mes. Por favor compruebe estos límites con su banco y asegúrese que son los mismos aquí expuestos.\n\nLa cantidad de retiro debe ser un múltiplo de 10 EUR ya que no se puede retirar otras cantidades desde el cajero automático. La Interfaz de Usuario en la pantalla crear oferta y tomar oferta ajustará la cantidad de RADC para que la cantidad de EUR sea correcta. No puede usar precios basados en el mercado ya que la cantidad de EUR cambiaría con el cambio de precios.\n\nEn caso de disputa  el comprador de RADC necesita proveer la prueba de que ha enviado EUR.
core/src/main/resources/i18n/displayStrings_es.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_es.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_es.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_es.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_es.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_es.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_es.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_es.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_es.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_es.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_es.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_es.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_es.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_es.properties:payment.usPostalMoneyOrder.info=Los intercambios usando US Postal Money Orders (USPMO) en Bisq requiere que entienda lo siguiente:\n\n- Los compradores de RADC deben escribir la dirección del vendedor en los campos de "Payer" y "Payee" y tomar una foto en alta resolución de la USPMO y del sobre con la prueba de seguimiento antes de enviar.\n- Los compradores de RADC deben enviar la USPMO con confirmación de entrega.\n\nEn caso de que sea necesaria la mediación, se requerirá al comprador que entregue las fotos al mediador o agente de devolución de fondos, junto con el número de serie de la USPMO, número de oficina postal, y la cantidad de USD, para que puedan verificar los detalles en la web de US Post Office.\n\nNo entregar la información requerida al Mediador o Árbitro resultará en pérdida del caso de disputa. \n\nEn todos los casos de disputa, el emisor de la USPMO tiene el 100% de responsabilidad en aportar la evidencia al Mediador o Árbitro.\n\nSi no entiende estos requerimientos, no comercie usando USPMO en Bisq.
core/src/main/resources/i18n/displayStrings_es.properties:payment.cashByMail.info=Comerciar usando efectivo por correo (CBM) en Bisq requiere que entienda lo siguiente:\n\n● El comprador de RADC debe empaquetar el efectivo en una bolsa de efectivo a prueba de manipulación.\n● El comprador de RADC debe filmar o tomar fotos de alta resolución del empaquetado junto con la dirección y el número de seguimiento ya añadido al paquete.\n● El comprador de RADC debe enviar el paquete de efectivo al vendedor con la confirmación de entrega y un seguro apropiado.\n●  El vendedor de RADC debe filmar la apertura del paquete, asegurándose de que el número de seguimiento entregado por el emisor es visible en todo el video.\n● El creador de la oferta debe especificar cualquier términos o condiciones especiales en el campo 'Información adicional' de la cuenta de pago.\n● Al tomar la oferta, el tomador indica estar de acuredo con los términos y condiciones del tomador.\n\nLos intercambios CBM responsabilizan a ambos pares de actuar honestamente.\n\n● Los intercambios CBM tienen menos acciones verificables que otrosintrecambios de fiat. Esto hace más complicado manejar disputas.\n● Intente a resolver las disputas directamente con su par utilizando el chat de intercambio. Esta es la ruta más prometedora.\n● Los mediadores pueden considerar su caso y hacer una sugerencia, pero no está garantizado que vayan a ayudar.\n● Si se solicita mediación, y si algún par rechaza la sugerencia de mediación, los fondos de ambos pares se enviarán a la dirección de 'donación' de Bisq[HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], y el intercambio concluirá.\n● Si un comerciante rechaza la sugerencia de mediación y abre arbitraje, podría llevar a la pérdida de todos los fondos, de intercambio y depósitos de seguridad.\n● El árbitro tomará una decisión basada en la evidencia entregada. Por tanto, por favor siga y documente el proceso indicado arriba para tener evidencia en caso de disputa.\n● Las solicitudes de reembolso de fondos perdidos resultantes de CBM en la DAO no serán considerados.\n\nAsegúrese de que entiende los requerimientos de los intercambios CBM leyendo: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nSi no entiende estos requisitos, no intercambie usando CBM.
core/src/main/resources/i18n/displayStrings_es.properties:payment.f2f.info=Los intercambios 'Cara a Cara' tienen diferentes reglas y riesgos que las transacciones en línea.\n\nLas principales diferencias son:\n● Los pares de intercambio necesitan intercambiar información acerca del punto de reunión y la hora usando los detalles de contacto proporcionados.\n● Los pares de intercambio tienen que traer sus portátiles y hacer la confirmación de 'pago enviado' y 'pago recibido' en el lugar de reunión.\n● Si un creador tiene 'términos y condiciones' especiales necesita declararlos en el campo de texto 'información adicional' en la cuenta.\n● Tomando una oferta el tomador está de acuerdo con los 'términos y condiciones' declarados por el creador.\n● En caso de disputa el árbitro no puede ayudar mucho ya que normalmente es complicado obtener evidencias no manipulables de lo que ha pasado en una reunión. En estos casos los fondos RADC pueden bloquearse indefinidamente o hasta que los pares lleguen a un acuerdo.\n\nPara asegurarse de que comprende las diferencias con los intercambios 'Cara a Cara' por favor lea las instrucciones y recomendaciones en: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_es.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.fraction=El valor introducido resulta en un valor de bitcoin menor a 1 satoshi
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.toLarge=No se permiten valores mayores que {0}.
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.toSmall=Valores menores que {0} no se permiten.
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.invalidAddress=La dirección no es correcta. Por favor compruebe el formato de la dirección.
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.exceedsMaxTradeLimit=Su límite de intercambio es {0}.
core/src/main/resources/i18n/displayStrings_es.properties:validation.btc.invalidFormat=Formato inválido para una dirección Bitcoin.
core/src/main/resources/i18n/displayStrings_vi.properties:shared.buyingRADCWith=đang mua RADC với {0}
core/src/main/resources/i18n/displayStrings_vi.properties:shared.sellingRADCFor=đang bán RADC với {0}
core/src/main/resources/i18n/displayStrings_vi.properties:shared.buyingCurrency=đang mua {0} (đang bán RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:shared.sellingCurrency=đang bán {0} (đang mua RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:shared.RADCMinMax=RADC (min - max)
core/src/main/resources/i18n/displayStrings_vi.properties:shared.TheRADCBuyer=Người mua RADC
core/src/main/resources/i18n/displayStrings_vi.properties:shared.paymentDetails=Thông tin thanh toán RADC {0}
core/src/main/resources/i18n/displayStrings_vi.properties:shared.btcAmount=Số lượng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.menu.buyBtc=Mua RADC
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.menu.sellBtc=Bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo.initializing=Đang kết nối với mạng Bitcoin
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo.connectingTo=Đang kết nối với
core/src/main/resources/i18n/displayStrings_vi.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings_vi.properties:market.spread.numberOfBuyOffersColumn=Mua RADC ({0})
core/src/main/resources/i18n/displayStrings_vi.properties:market.spread.numberOfSellOffersColumn=Bán RADC ({0})
core/src/main/resources/i18n/displayStrings_vi.properties:market.spread.totalAmountColumn=Tổng số RADC ({0})
core/src/main/resources/i18n/displayStrings_vi.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_vi.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_vi.properties:createOffer.amount.prompt=Nhập số tiền bằng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:createOffer.amountPriceBox.amountDescription=Số tiền RADC đến {0}
core/src/main/resources/i18n/displayStrings_vi.properties:createOffer.amountPriceBox.minAmountDescription=Số tiền RADC nhỏ nhất
core/src/main/resources/i18n/displayStrings_vi.properties:createOffer.tradeFee.descriptionRADCOnly=Phí giao dịch
core/src/main/resources/i18n/displayStrings_vi.properties:takeOffer.amount.prompt=Nhập giá trị bằng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:takeOffer.amountPriceBox.buy.amountDescription=Số lượng RADC bán
core/src/main/resources/i18n/displayStrings_vi.properties:takeOffer.amountPriceBox.sell.amountDescription=Số lượng RADC mua
core/src/main/resources/i18n/displayStrings_vi.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Giá trị bạn vừa nhập vượt quá số ký tự thập phân cho phép.\nGiá trị phải được điều chỉnh về 4 số thập phân.
core/src/main/resources/i18n/displayStrings_vi.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Giá trị nhập này sẽ làm thay đổi đối với người bán RADC.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.altcoin=Hãy chuyển từ ví ngoài {0} của bạn\n{1} cho người bán RADC.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.cash=Hãy đến ngân hàng và thanh toán {0} cho người bán RADC.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.cash.extra=YÊU CẦU QUAN TRỌNG:\nSau khi bạn đã thanh toán xong hãy viết lên giấy biên nhận: KHÔNG HOÀN TRẢ.\nSau đó xé thành 2 phần, chụp ảnh và gửi tới email của người bán RADC.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.moneyGram=Vui lòng trả {0} cho người bán RADC qua MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.moneyGram.extra=Yêu cầu quan trọng:\nSau khi bạn hoàn thành chi trả hãy gửi Số xác thực và hình chụp hoá đơn qua email cho người bán RADC.\nHoá đơn phải chỉ rõ họ tên đầy đủ, quốc gia, tiểu bang và số tiền. Email người bán là: {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.westernUnion=Hãy thanh toán {0} cho người bán RADC bằng cách sử dụng Western Union.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.westernUnion.extra=YÊU CẦU QUAN TRỌNG:\nSau khi bạn đã thanh toán xong hãy gửi MTCN (số theo dõi) và ảnh giấy biên nhận bằng email cho người bán RADC.\nGiấy biên nhận phải ghi rõ họ tên của người bán, thành phố, quốc gia và số tiền. Địa chỉ email của người bán là: {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.postal=Hãy gửi {0} bằng \"Phiếu chuyển tiền US\" cho người bán RADC.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.f2f=Vui lòng liên hệ người bán RADC và cung cấp số liên hệ và sắp xếp cuộc hẹn để thanh toán {0}.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.paperReceipt.headline=Bạn đã gửi giấy biên nhận cho người bán RADC chưa?
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.paperReceipt.msg=Remember:\nBạn cần phải viết trên giấy biên nhận: KHÔNG HOÀN TRẢ.\nSau đó xé thành 2 phần, chụp ảnh và gửi đến email của người bán RADC.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Bạn cần gửi số xác thực và ảnh chụp của hoá đơn qua email đến người bán RADC.\nHoá đơn phải ghi rõ họ tên đầy đủ người bán, quốc gia, tiểu bang và số lượng. Email người bán là: {0}.\n\nBạn đã gửi số xác thực và hợp đồng cho người bán?
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Bạn cần phải gửi MTCN (số theo dõi) và ảnh chụp giấy biên nhận bằng email cho người bán RADC.\nGiấy biên nhận phải nêu rõ họ tên, thành phố, quốc gia của người bán và số tiền. Địa chỉ email của người bán là: {0}.\n\nBạn đã gửi MTCN và hợp đồng cho người bán chưa?
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Bạn cần nhắn tin mã HalCash và mã giao dịch ({0}) tới người bán RADC. \nSố điện thoại của người bán là {1}.\n\nBạn đã gửi mã tới người bán chưa?
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_seller.waitPayment.msg=Giao dịch đặt cọc có ít nhất một xác nhận blockchain.\nBạn cần phải đợi cho đến khi người mua RADC bắt đầu thanh toán {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_seller.warn=Người mua RADC vẫn chưa thanh toán {0}.\nBạn cần phải đợi cho đến khi người mua bắt đầu thanh toán.\nNếu giao dịch không được hoàn thành vào {1} trọng tài sẽ điều tra.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step2_seller.openForDispute=The RADC buyer has not started their payment!\nThe max. allowed period for the trade has elapsed.\nYou can wait longer and give the trading peer more time or contact the mediator for assistance.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_buyer.wait.headline=Đợi người bán RADC xác nhận thanh toán
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_buyer.wait.info=Đợi người bán RADC xác nhận đã nhận thanh toán {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_buyer.warn.part2=The RADC seller still has not confirmed your payment. Please check {0} if the payment sending was successful.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_buyer.openForDispute=The RADC seller has not confirmed your payment! The max. period for the trade has elapsed. You can wait longer and give the trading peer more time or request assistance from the mediator.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.cash=Vì thanh toán được thực hiện qua Tiền gửi tiền mặt nên người mua RADC phải viết rõ \"KHÔNG HOÀN LẠI\" trên giấy biên nhận, xé làm 2 phần và gửi ảnh cho bạn qua email.\n\nĐể tránh bị đòi tiền lại, chỉ xác nhận bạn đã nhận được email và bạn chắc chắn giấy biên nhận là có hiệu lực.\nNếu bạn không chắc chắn, {0}
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.moneyGram=Người mua phải gửi mã số xác nhận và ảnh chụp của hoá đơn qua email.\nHoá đơn cần ghi rõ họ tên đầy đủ, quốc gia, tiêu bang và số lượng. Vui lòng kiểm tra email nếu bạn nhận được số xác thực.\n\nSau khi popup đóng, bạn sẽ thấy tên người mua RADC và địa chỉ để nhận tiền từ MoneyGram.\n\nChỉ xác nhận hoá đơn sau khi bạn hoàn thành việc nhận tiền.
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.westernUnion=Người mua phải gửi cho bạn MTCN (số theo dõi) và ảnh giấy biên nhận qua email.\nGiấy biên nhận phải ghi rõ họ tên của bạn, thành phố, quốc gia và số tiền. Hãy kiểm tra email xem bạn đã nhận được MTCN chưa.\n\nSau khi đóng cửa sổ này, bạn sẽ thấy tên và địa chỉ của người mua RADC để nhận tiền từ Western Union.\n\nChỉ xác nhận giấy biên nhận sau khi bạn đã nhận tiền thành công!
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.buyerStartedPayment=Người mua RADC đã bắt đầu thanh toán {0}.\n{1}
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Please note, that as soon you have confirmed the receipt, the locked trade amount will be released to the RADC buyer and the security deposit will be refunded.\n\n
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.step5_buyer.withdrawRADC=Rút bitcoin của bạn
core/src/main/resources/i18n/displayStrings_vi.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_vi.properties:funds.deposit.amount=Số tiền bằng RADC (tùy chọn)
core/src/main/resources/i18n/displayStrings_vi.properties:funds.tx.withdrawnFromBSQWallet=RADC được rút từ ví BSQ
core/src/main/resources/i18n/displayStrings_vi.properties:funds.tx.dustAttackTx.popup=Giao dịch này đang gửi một lượng RADC rất nhỏ vào ví của bạn và có thể đây là cách các công ty phân tích chuỗi đang tìm cách theo dõi ví của bạn.\nNếu bạn sử dụng đầu ra giao dịch đó cho một giao dịch chi tiêu, họ sẽ phát hiện ra rằng rất có thể bạn cũng là người sở hửu cái ví kia (nhập coin). \n\nĐể bảo vệ quyền riêng tư của bạn, ví Bisq sẽ bỏ qua các đầu ra có số dư nhỏ dành cho mục đích chi tiêu cũng như hiển thị số dư. Bạn có thể thiết lập ngưỡng khi một đầu ra được cho là có số dư nhỏ trong phần cài đặt. 
core/src/main/resources/i18n/displayStrings_vi.properties:support.buyerAddress=Địa chỉ người mua RADC
core/src/main/resources/i18n/displayStrings_vi.properties:support.sellerAddress=Địa chỉ người bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:support.buyerOfferer=Người mua RADC/Người tạo
core/src/main/resources/i18n/displayStrings_vi.properties:support.sellerOfferer=Người bán RADC/Người tạo
core/src/main/resources/i18n/displayStrings_vi.properties:support.buyerTaker=Người mua RADC/Người nhận
core/src/main/resources/i18n/displayStrings_vi.properties:support.sellerTaker=Người bán RADC/Người nhận
core/src/main/resources/i18n/displayStrings_vi.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_vi.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.btcHeader=Mạng Bitcoin
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.btcNodesLabel=Sử dụng nút Bitcoin Core thông dụng
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.useTorForBtcJLabel=Sử dụng Tor cho mạng Bitcoin
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.warn.invalidBtcConfig=Connection to the Bitcoin network failed because your configuration is invalid.\n\nYour configuration has been reset to use the provided Bitcoin nodes instead. You will need to restart the application.
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.localhostBtcNodeInfo=Background information: Bisq looks for a local Bitcoin node when starting. If it is found, Bisq will communicate with the Bitcoin network exclusively through it.
core/src/main/resources/i18n/displayStrings_vi.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_vi.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Open emergency wallet tool for RADC wallet
core/src/main/resources/i18n/displayStrings_vi.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_vi.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_vi.properties:account.altcoin.popup.liquidbitcoin.msg=Trading L-RADC on Bisq requires that you understand the following:\n\nWhen receiving L-RADC for a trade on Bisq, you cannot use the mobile Blockstream Green Wallet app or a custodial/exchange wallet. You must only receive L-RADC into the Liquid Elements Core wallet, or another L-RADC wallet which allows you to obtain the blinding key for your blinded L-RADC address.\n\nIn the event mediation is necessary, or if a trade dispute arises, you must disclose the blinding key for your receiving L-RADC address to the Bisq mediator or refund agent so they can verify the details of your Confidential Transaction on their own Elements Core full node.\n\nFailure to provide the required information to the mediator or refund agent will result in losing the dispute case. In all cases of dispute, the L-RADC receiver bears 100% of the burden of responsibility in providing cryptographic proof to the mediator or refund agent.\n\nIf you do not understand these requirements, do not trade L-RADC on Bisq.
core/src/main/resources/i18n/displayStrings_vi.properties:account.seed.info=Hãy viết ra từ khởi tạo ví của bạn và ngày! Bạn có thể khôi phục ví của bạn bất cứ lúc nào với các từ khởi tạo và ngày này.\nTừ khởi tạo được sử dụng chung cho cả ví RADC và BSQ.\n\nBạn nên viết các từ khởi tạo ra tờ giấy. Không được lưu trên máy tính.\n\nLưu ý rằng từ khởi tạo KHÔNG PHẢI là phương án thay thế cho sao lưu dự phòng.\nBạn cần sao lưu dự phòng toàn bộ thư mục của ứng dụng tại màn hình \"Tài khoản/Sao lưu dự phòng\" để khôi phục trạng thái và dữ liệu ứng dụng.\nNhập từ khởi tạo chỉ được thực hiện trong tình huống khẩn cấp. Ứng dụng sẽ không hoạt động mà không có dự phòng các file dữ liệu và khóa phù hợp!
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.priceAlert.high.label=Thông báo nếu giá RADC cao hơn
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.priceAlert.low.label=Thông báo nếu giá RADC thấp hơn
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.trade.message.msg.started=Người mua RADC đã tiến hành thanh toán cho giao dịch có mã là {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.marketAlert.offerType.buy=Chào mua (Tôi muốn bán RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.marketAlert.offerType.sell=Chào bán (Tôi muốn mua RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:account.notifications.marketAlert.trigger.info=Khi đặt khoảng cách giá, bạn chỉ nhận được thông báo khi có một chào giá bằng (hoặc cao hơn) giá bạn yêu cầu được đăng lên. Ví dụ: Bạn muốn bán RADC, nhưng chỉ bán với giá cao hơn thị trường hiện tại 2%. Đặt trường này ở mức 2% sẽ đảm bảo là bạn chỉ nhận được thông báo từ những chào giá cao hơn 2%(hoặc hơn)  so với giá thị trường hiện tại.
core/src/main/resources/i18n/displayStrings_vi.properties:dao.availableNonBsqBalance=Số dư không phải BSQ có sẵn (tính bằng RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Phí maker RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Phí taker RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.MIN_MAKER_FEE_RADC=Phí maker RADC tối thiểu
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.MIN_TAKER_FEE_RADC=Phí taker RADC tối thiểu
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.RECIPIENT_RADC_ADDRESS=Địa chỉ RADC của người nhận
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.ARBITRATOR_FEE=Phí trọng tài tính bằng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.param.MAX_TRADE_LIMIT=Giới giạn giao dịch tối đa tính bằng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin node operator
core/src/main/resources/i18n/displayStrings_vi.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Chủ địa chỉ ví RADC hiến tặng
core/src/main/resources/i18n/displayStrings_vi.properties:dao.wallet.send.sendBtcFunds=Gửi các loại tiền không phải BSQ (RADC)
core/src/main/resources/i18n/displayStrings_vi.properties:dao.wallet.send.btcAmount=Số tiền tính bằng RADC (các loại tiền không phải BSQ)
core/src/main/resources/i18n/displayStrings_vi.properties:dao.wallet.send.receiverBtcAddress=Địa chỉ RADC của người nhận
core/src/main/resources/i18n/displayStrings_vi.properties:dao.wallet.send.sendBtc=Gửi vốn RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.tx.withdrawnFromWallet=RADC rút từ ví
core/src/main/resources/i18n/displayStrings_vi.properties:dao.proposal.create.missingMinerFeeFunds=Bạn không đủ RADC để tạo giao dịch đề xuất này. Tất cả các giao dịch BSQ đều yêu cầu phí đào bằng RADC.\nCòn thiếu: {0}
core/src/main/resources/i18n/displayStrings_vi.properties:dao.proposal.create.missingIssuanceFunds=Bạn không có đủ RADC để tạo giao dịch đề xuất này. Tất cả các giao dịch BSQ đều yêu cầu phí đào bằng RADC, và các giao dịch phát hành cũng yêu cầu RADC cho lượng BSQ yêu cầu ({0} Satoshis/BSQ).\nCòn thiếu: {1}
core/src/main/resources/i18n/displayStrings_vi.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.dashboard.avgPrice90=90 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.dashboard.avgPrice30=30 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_vi.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_vi.properties:contractWindow.btcAddresses=Địa chỉ Bitcoin người mua RADC / người bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:contractWindow.onions=Địa chỉ mạng người mua RADC / người bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:contractWindow.accountAge=Tuổi tài khoản người mua RADC/người bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:contractWindow.numDisputes=Số khiếu nại người mua RADC / người bán RADC
core/src/main/resources/i18n/displayStrings_vi.properties:disputeSummaryWindow.payout.getsTradeAmount=RADC {0} nhận được khoản tiền giao dịch hoàn lại
core/src/main/resources/i18n/displayStrings_vi.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_vi.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_vi.properties:emptyWalletWindow.bsq.btcBalance=Số dư tính bằng Satoshi của tài sản không phải là BSQ
core/src/main/resources/i18n/displayStrings_vi.properties:filterWindow.btcNode=nút Bitcoin đã lọc (địa chỉ cách nhau bằng dấu phẩy + cửa)
core/src/main/resources/i18n/displayStrings_vi.properties:filterWindow.preventPublicBtcNetwork=Ngăn sử dụng mạng Bitcoin công cộng
core/src/main/resources/i18n/displayStrings_vi.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_vi.properties:offerDetailsWindow.minBtcAmount=Giá trị RADC tối thiểu
core/src/main/resources/i18n/displayStrings_vi.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_vi.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_vi.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_vi.properties:feeOptionWindow.info=Bạn có thể chọn thanh toán phí giao dịch bằng BSQ hoặc RADC. Nếu bạn chọn BSQ, bạn sẽ được khấu trừ phí giao dịch.
core/src/main/resources/i18n/displayStrings_vi.properties:feeOptionWindow.useRADC=Sử dụng RADC
core/src/main/resources/i18n/displayStrings_vi.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_vi.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Bạn cần phải đợi cho đến khi bạn có ít nhất {0} kết nối với mạng Bitcoin.
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.insufficientBtcFundsForBsqTx=Bạn không có đủ vốn RADC để thanh toán phí đào cho giao dịch BSQ này.\nVui lòng nộp tiền vào ví RADC của bạn để có thể chuyển giao BSQ.\nSố tiền còn thiếu: {0}
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.btcChangeBelowDustException=This transaction creates a change output which is below dust limit (546 Satoshi) and would be rejected by the Bitcoin network.\n\nYou need to add the dust amount to your sending amount to avoid to generate a dust output.\n\nThe dust output is {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.noBsqFundsForBtcFeePayment=Ví BSQ của bạn không đủ tiền để trả phí giao dịch bằng BSQ.
core/src/main/resources/i18n/displayStrings_vi.properties:popup.warning.burnRADC=Không thể thực hiện giao dịch, vì phí đào {0} vượt quá số lượng  {1} cần chuyển. Vui lòng chờ tới khi phí đào thấp xuống hoặc khi bạn tích lũy đủ RADC để chuyển. 
core/src/main/resources/i18n/displayStrings_vi.properties:notification.trade.accepted=Chào giá của bạn đã được chấp thuận bởi RADC {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:notification.trade.paymentStarted=Người mua RADC đã bắt đầu thanh toán.
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_MAINNET=Bitcoin Mainnet
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_TESTNET=Bitcoin Testnet
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_REGTEST=Bitcoin Regtest
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_DAO_TESTNET=Bitcoin DAO Testnet (không tán thành)
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_vi.properties:RADC_DAO_REGTEST=Bitcoin DAO Regtest
core/src/main/resources/i18n/displayStrings_vi.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_vi.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_vi.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.halCash.info=Khi sử dụng HalCash người mua RADC cần phải gửi cho người bán RADC mã HalCash bằng tin nhắn điện thoại.\n\nVui lòng đảm bảo là lượng tiền này không vượt quá số lượng tối đa mà ngân hàng của bạn cho phép gửi khi dùng HalCash. Số lượng rút tối thiểu là 10 EUR và tối đa là 600 EUR. Nếu rút nhiều lần thì giới hạn sẽ là 3000 EUR/ người nhận/ ngày và 6000 EUR/người nhận/tháng. Vui lòng kiểm tra chéo những giới hạn này với ngân hàng của bạn để chắc chắn là họ cũng dùng những giới hạn như ghi ở đây.\n\nSố tiền rút phải là bội số của 10 EUR vì bạn không thể rút các mệnh giá khác từ ATM. Giao diện người dùng ở phần 'tạo chào giá' và 'chấp nhận chào giá' sẽ điều chỉnh lượng btc sao cho lượng EUR tương ứng sẽ chính xác. Bạn không thể dùng giá thị trường vì lượng EUR có thể sẽ thay đổi khi giá thay đổi.\n\nTrường hợp tranh chấp, người mua RADC cần phải cung cấp bằng chứng chứng minh mình đã gửi EUR.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_vi.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_vi.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.toLarge=Không cho phép giá trị nhập lớn hơn {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.toSmall=Không cho phép giá trị nhập nhỏ hơn {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.invalidAddress=Địa chỉ không đúng. Vui lỏng kiểm tra lại định dạng địa chỉ.
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.exceedsMaxTradeLimit=Giới hạn giao dịch của bạn là {0}.
core/src/main/resources/i18n/displayStrings_vi.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/i18n/displayStrings_ru.properties:shared.buyingRADCWith=покупка ВТС за {0}
core/src/main/resources/i18n/displayStrings_ru.properties:shared.sellingRADCFor=продажа ВТС за {0}
core/src/main/resources/i18n/displayStrings_ru.properties:shared.RADCMinMax=ВТС (мин. — макс.)
core/src/main/resources/i18n/displayStrings_ru.properties:shared.TheRADCBuyer=Покупатель ВТС
core/src/main/resources/i18n/displayStrings_ru.properties:shared.btcAmount=Сумма ВТС
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.menu.buyBtc=Купить RADC
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.menu.sellBtc=Продать RADC
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo={0} {1}
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcFeeRate=/ Fee rate: {0} sat/vB
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo.initializing=Подключение к сети Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo.synchronizingWith=Synchronizing with {0} at block: {1} / {2}
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo.synchronizedWith=Synced with {0} at block {1}
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo.connectingTo=Подключение к
core/src/main/resources/i18n/displayStrings_ru.properties:mainView.footer.btcInfo.connectionFailed=Connection failed to
core/src/main/resources/i18n/displayStrings_ru.properties:market.spread.numberOfBuyOffersColumn=Купить RADC ({0})
core/src/main/resources/i18n/displayStrings_ru.properties:market.spread.numberOfSellOffersColumn=Продать RADC ({0})
core/src/main/resources/i18n/displayStrings_ru.properties:market.spread.totalAmountColumn=Итого RADC ({0})
core/src/main/resources/i18n/displayStrings_ru.properties:offerbook.timeSinceSigning.tooltip.checkmark.buyBtc=buy RADC from a signed account
core/src/main/resources/i18n/displayStrings_ru.properties:offerbook.deposit=Deposit RADC (%)
core/src/main/resources/i18n/displayStrings_ru.properties:createOffer.amountPriceBox.amountDescription=Количество RADC для {0}
core/src/main/resources/i18n/displayStrings_ru.properties:createOffer.tradeFee.descriptionRADCOnly=Комиссия за сделку
core/src/main/resources/i18n/displayStrings_ru.properties:takeOffer.amountPriceBox.buy.amountDescription=Сумма RADC для продажи
core/src/main/resources/i18n/displayStrings_ru.properties:takeOffer.amountPriceBox.sell.amountDescription=Сумма RADC для покупки
core/src/main/resources/i18n/displayStrings_ru.properties:takeOffer.amountPriceBox.warning.invalidBtcDecimalPlaces=Слишком много знаков после запятой.\nКоличество знаков скорректировано до 4.
core/src/main/resources/i18n/displayStrings_ru.properties:takeOffer.validation.amountLargerThanOfferAmountMinusFee=Указанная сумма придет к появлению «пыли» у продавца RADC.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.refTextWarn=Important: when making the payment, leave the \"reason for payment\" field empty. DO NOT put the trade ID or any other text like 'bitcoin', 'RADC', or 'Bisq'. You are free to discuss via trader chat if an alternate \"reason for payment\" would be suitable to you both.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.moneyGram=Заплатите {0} продавцу RADC через MoneyGram.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.moneyGram.extra=ВАЖНОЕ ТРЕБОВАНИЕ:\nПосле оплаты отправьте продавцу RADC по электронной почте код подтверждения и фото квитанции.\nВ квитанции должно быть четко указано полное имя продавца, страна (штат) и сумма. Электронный адрес продавца: {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.westernUnion=Заплатите {0} продавцу RADC через Western Union.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.westernUnion.extra=ВАЖНОЕ ТРЕБОВАНИЕ: \nПосле оплаты отправьте по электронной почте продавцу RADC контрольный номер MTCN и фото квитанции.\nВ квитанции должно быть четко указано полное имя продавца, город, страна и сумма. Электронный адрес продавца: {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.postal=Отправьте {0} \«Почтовым денежным переводом США\» продавцу RADC.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.cashByMail=Please send {0} using \"Cash by Mail\" to the RADC seller. Specific instructions are in the trade contract, or if unclear you may ask questions via trader chat. See more details about Cash by Mail on the Bisq wiki [HYPERLINK:https://bisq.wiki/Cash_by_Mail].\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.pay=Please pay {0} via the specified payment method to the RADC seller. You''ll find the seller's account details on the next screen.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.f2f=Свяжитесь с продавцом RADC с помощью указанных контактных данных и договоритесь о встрече для оплаты {0}.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.moneyGramMTCNInfo.msg=Вам необходимо отправить по электронной почте продавцу RADC код подтверждения и фото квитанции.\nВ квитанции должно быть четко указано полное имя продавца, страна (штат) и сумма. Электронный адрес продавца: {0}.\n\nВы отправили продавцу код подтверждения и квитанцию?
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.westernUnionMTCNInfo.msg=Вам необходимо отправить по электронной почте продавцу RADC контрольный номер MTCN и фотографию квитанции.\nВ квитанции должно быть четко указано полное имя продавца, город, страна и сумма. Адрес электронной почты продавца: {0}. \n\nВы отправили MTCN и контракт продавцу?
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.halCashInfo.msg=Вам необходимо отправить сообщение с кодом HalCash и идентификатором сделки ({0}) продавцу RADC.\nНомер моб. тел. продавца: {1}\n\nВы отправили код продавцу?
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_buyer.confirmStart.proof.noneProvided=You have not entered the transaction ID and the transaction key.\n\nBy not providing this data the peer cannot use the auto-confirm feature to release the RADC as soon the XMR has been received.\nBeside that, Bisq requires that the sender of the XMR transaction is able to provide this information to the mediator or arbitrator in case of a dispute.\nSee more details on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades].
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_seller.waitPayment.msg=Депозитная транзакция подтверждена в блокчейне не менее одного раза.\nДождитесь начала платежа в {0} покупателем RADC.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_seller.warn=Покупатель RADC все еще не завершил платеж в {0}.\nДождитесь начала оплаты.\nЕсли сделка не завершится {1}, арбитр начнет разбирательство.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step2_seller.openForDispute=The RADC buyer has not started their payment!\nThe max. allowed period for the trade has elapsed.\nYou can wait longer and give the trading peer more time or contact the mediator for assistance.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_buyer.warn.part2=The RADC seller still has not confirmed your payment. Please check {0} if the payment sending was successful.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_buyer.openForDispute=The RADC seller has not confirmed your payment! The max. period for the trade has elapsed. You can wait longer and give the trading peer more time or request assistance from the mediator.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.postal={0}Please check if you have received {1} with \"US Postal Money Order\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.cashByMail={0}Please check if you have received {1} with \"Cash by Mail\" from the RADC buyer.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.bank=Your trading partner has confirmed that they have initiated the {0} payment.\n\nPlease go to your online banking web page and check if you have received {1} from the RADC buyer.
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.cash=Так как оплата осуществляется наличными на счёт, покупатель RADC должен написать \«НЕ ПОДЛЕЖИТ ВОЗВРАТУ\» на квитанции, разорвать её на 2 части и отправить вам её фото по электронной почте.\n\nЧтобы избежать возврата платёжа, подтверждайте его получение только после получения этого фото, если вы не сомневаетесь в подлинности квитанции.\nЕсли вы не уверены, {0}
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.moneyGram=Покупатель обязан отправить вам по электронной почте код подтверждения и фото квитанции.\nВ квитанции должно быть четко указано ваше полное имя, страна (штат) и сумма. Убедитесь, что вы получили код подтверждения по электронной почте.\n\nПосле закрытия этого окна вы увидите имя и адрес покупателя RADC, которые необходимо указать для получения денег от MoneyGram.\n\nПодтвердите получение только после того, как вы успешно заберете деньги!
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.westernUnion=Покупатель обязан отправить вам по электронной почте контрольный номер MTCN и фото квитанции.\nВ квитанции должно быть четко указано ваше полное имя, город, страна и сумма. Убедитесь, что вы получили номер MTCN по электронной почте.\n\nПосле закрытия этого окна вы увидите имя и адрес покупателя RADC, которые необходимо указать для получения денег от Western Union. \n\nПодтвердите получение только после того, как вы успешно заберете деньги!
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step3_seller.onPaymentReceived.note=Please note, that as soon you have confirmed the receipt, the locked trade amount will be released to the RADC buyer and the security deposit will be refunded.\n\n
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.step5_buyer.withdrawRADC=Вывести биткойны
core/src/main/resources/i18n/displayStrings_ru.properties:portfolio.pending.failedTrade.buyer.existingDepositTxButMissingDelayedPayoutTx=The delayed payout transaction is missing, but funds have been locked in the deposit transaction.\n\nPlease do NOT send the fiat or altcoin payment to the RADC seller, because without the delayed payout tx, arbitration cannot be opened. Instead, open a mediation ticket with Cmd/Ctrl+o. The mediator should suggest that both peers each get back the full amount of their security deposits (with seller receiving full trade amount back as well). This way, there is no security risk, and only trade fees are lost. \n\nYou can request a reimbursement for lost trade fees here: [HYPERLINK:https://github.com/bisq-network/support/issues]
core/src/main/resources/i18n/displayStrings_ru.properties:funds.tx.withdrawnFromBSQWallet=RADC выведен из кошелька BSQ
core/src/main/resources/i18n/displayStrings_ru.properties:funds.tx.dustAttackTx.popup=Вы получили очень маленькую сумму RADC, что может являться попыткой компаний, занимающихся анализом блокчейна, проследить за вашим кошельком.\n\nЕсли вы воспользуетесь этими средствами для совершения исходящей транзакции, они смогут узнать, что вы также являетесь вероятным владельцем другого адреса (т. н. «объединение монет»).\n\nДля защиты вашей конфиденциальности кошелёк Bisq игнорирует такую «пыль» при совершении исходящих транзакций и отображении баланса. Вы можете самостоятельно установить сумму, которая будет рассматриваться в качестве «пыли» в настройках.
core/src/main/resources/i18n/displayStrings_ru.properties:support.sellerTaker=Продавец RADC/тейкер
core/src/main/resources/i18n/displayStrings_ru.properties:support.initialInfo=Please enter a description of your problem in the text field below. Add as much information as possible to speed up dispute resolution time.\n\nHere is a check list for information you should provide:\n\t● If you are the RADC buyer: Did you make the Fiat or Altcoin transfer? If so, did you click the 'payment started' button in the application?\n\t● If you are the RADC seller: Did you receive the Fiat or Altcoin payment? If so, did you click the 'payment received' button in the application?\n\t● Which version of Bisq are you using?\n\t● Which operating system are you using?\n\t● If you encountered an issue with failed transactions please consider switching to a new data directory.\n\t  Sometimes the data directory gets corrupted and leads to strange bugs. \n\t  See: https://bisq.wiki/Switching_to_a_new_data_directory\n\nPlease make yourself familiar with the basic rules for the dispute process:\n\t● You need to respond to the {0}''s requests within 2 days.\n\t● {1}\n\t● The maximum period for a dispute is 14 days.\n\t● You need to cooperate with the {2} and provide the information they request to make your case.\n\t● You accepted the rules outlined in the dispute document in the user agreement when you first started the application.\n\nYou can read more about the dispute process at: {3}
core/src/main/resources/i18n/displayStrings_ru.properties:setting.preferences.autoConfirmMaxTradeSize=Max. trade amount (RADC)
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.btcHeader=Сеть Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.btcNodesLabel=Использовать особые узлы Bitcoin Core
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.useTorForBtcJLabel=Использовать Tor для сети Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.warn.invalidBtcConfig=Connection to the Bitcoin network failed because your configuration is invalid.\n\nYour configuration has been reset to use the provided Bitcoin nodes instead. You will need to restart the application.
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.localhostBtcNodeInfo=Background information: Bisq looks for a local Bitcoin node when starting. If it is found, Bisq will communicate with the Bitcoin network exclusively through it.
core/src/main/resources/i18n/displayStrings_ru.properties:settings.net.chainHeightLabel=Latest RADC block height
core/src/main/resources/i18n/displayStrings_ru.properties:setting.about.shortcuts.openEmergencyBtcWalletTool=Open emergency wallet tool for RADC wallet
core/src/main/resources/i18n/displayStrings_ru.properties:setting.info.msg=When selling RADC for XMR you can use the auto-confirm feature to verify that the correct amount of XMR was sent to your wallet so that Bisq can automatically mark the trade as complete, making trades quicker for everyone.\n\nAuto-confirm checks the XMR transaction on at least 2 XMR explorer nodes using the private transaction key provided by the XMR sender. By default, Bisq uses explorer nodes run by Bisq contributors, but we recommend running your own XMR explorer node for maximum privacy and security.\n\nYou can also set the maximum amount of RADC per trade to auto-confirm as well as the number of required confirmations here in Settings.\n\nSee more details (including how to set up your own explorer node) on the Bisq wiki [HYPERLINK:https://bisq.wiki/Trading_Monero#Auto-confirming_trades]
core/src/main/resources/i18n/displayStrings_ru.properties:account.menu.walletInfo.balance.info=This shows the internal wallet balance including unconfirmed transactions.\nFor RADC, the internal wallet balance shown below should match the sum of the 'Available' and 'Reserved' balances shown in the top right of this window.
core/src/main/resources/i18n/displayStrings_ru.properties:account.altcoin.popup.liquidbitcoin.msg=Trading L-RADC on Bisq requires that you understand the following:\n\nWhen receiving L-RADC for a trade on Bisq, you cannot use the mobile Blockstream Green Wallet app or a custodial/exchange wallet. You must only receive L-RADC into the Liquid Elements Core wallet, or another L-RADC wallet which allows you to obtain the blinding key for your blinded L-RADC address.\n\nIn the event mediation is necessary, or if a trade dispute arises, you must disclose the blinding key for your receiving L-RADC address to the Bisq mediator or refund agent so they can verify the details of your Confidential Transaction on their own Elements Core full node.\n\nFailure to provide the required information to the mediator or refund agent will result in losing the dispute case. In all cases of dispute, the L-RADC receiver bears 100% of the burden of responsibility in providing cryptographic proof to the mediator or refund agent.\n\nIf you do not understand these requirements, do not trade L-RADC on Bisq.
core/src/main/resources/i18n/displayStrings_ru.properties:account.seed.info=Запишите мнемоническую фразу для кошелька и дату создания его! Используя эти данные, вы сможете восстановить ваш кошелёк когда угодно.\nДля обоих кошельков, RADC и BSQ, используется одна и та же мнемоническая фраза.\n\nВам следует записать её на бумаге и не хранить на компьютере.\n\nМнемоническая фраза НЕ заменяет резервную копию.\nВам следует сделать резервную копию всего каталога приложения в разделе \«Счёт/Резервное копирование\» для восстановления состояния приложения и данных.\nИмпорт мнемонической фразы рекомендуется только в экстренных случаях. Приложение не будет функционировать должным образом без наличия резервной копии файлов базы данных и ключей!
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.priceAlert.high.label=Уведомить, если курс RADC выше
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.priceAlert.low.label=Уведомить, если курс RADC ниже
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.trade.message.msg.started=Покупатель RADC начал платеж по сделке с идентификатором {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.marketAlert.offerType.buy=Предложения купить (хочу продать RADC)
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.marketAlert.offerType.sell=Предложения продать (хочу купить RADC)
core/src/main/resources/i18n/displayStrings_ru.properties:account.notifications.marketAlert.trigger.info=Если задано отклонение от курса, вы получите оповещение только при публикации предложения, соответствующего вашим требованиям (или превышающего их). Например: вы хотите продать RADC, но только с надбавкой 2% к текущему рыночному курсу. Указав 2% в этом поле, вы получите оповещение только о предложениях с курсом, превышающим текущий рыночный курс на 2% (или более).
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.DEFAULT_MAKER_FEE_RADC=Комиссия мейкера в BТС
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.DEFAULT_TAKER_FEE_RADC=Комиссия тейкера в BТС
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.MIN_MAKER_FEE_RADC=Мин. комиссия мейкера в BТС
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.MIN_TAKER_FEE_RADC=Мин. комиссия тейкера в BТС
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.RECIPIENT_RADC_ADDRESS=RADC-адрес получателя
core/src/main/resources/i18n/displayStrings_ru.properties:dao.param.MAX_TRADE_LIMIT=Макс. торговый лимит в RADC
core/src/main/resources/i18n/displayStrings_ru.properties:dao.bond.bondedRoleType.RADC_NODE_OPERATOR=Bitcoin node operator
core/src/main/resources/i18n/displayStrings_ru.properties:dao.bond.bondedRoleType.RADC_DONATION_ADDRESS_OWNER=Владелец адреса RADC для пожертвований
core/src/main/resources/i18n/displayStrings_ru.properties:dao.wallet.send.sendBtcFunds=Отправить средства (RADC), исключая BSQ
core/src/main/resources/i18n/displayStrings_ru.properties:dao.wallet.send.btcAmount=Сумма в ВТС (исключая BSQ)
core/src/main/resources/i18n/displayStrings_ru.properties:dao.wallet.send.receiverBtcAddress=RADC-адрес получателя
core/src/main/resources/i18n/displayStrings_ru.properties:dao.wallet.send.sendBtc=Отправить RADC
core/src/main/resources/i18n/displayStrings_ru.properties:dao.tx.withdrawnFromWallet=RADC выведен из кошелька
core/src/main/resources/i18n/displayStrings_ru.properties:dao.proposal.create.missingMinerFeeFunds=У вас недостаточно RADC для создания предложения. Любая транзакция в BSQ требует оплаты комиссии майнера в ВТС.\nНе хватает {0}
core/src/main/resources/i18n/displayStrings_ru.properties:dao.proposal.create.missingIssuanceFunds=У вас недостаточно RADC для создания предложения. Любая транзакция в BSQ требует оплаты комиссии в ВТС. Все транзакции, в том числе связанные с эмиссией BSQ, для выплаты запрошенной суммы BSQ требуют оплаты комиссии в ВТС ({0} сатоши/BSQ).\nНе хватает: {1}
core/src/main/resources/i18n/displayStrings_ru.properties:dao.feeTx.issuanceProposal.confirm.details={0} fee: {1}\nRADC needed for BSQ issuance: {2} ({3} Satoshis/BSQ)\nMining fee: {4} ({5} Satoshis/vbyte)\nTransaction vsize: {6} vKb\n\nIf your request is approved, you will receive the amount you requested net of the 2 BSQ proposal fee.\n\nAre you sure you want to publish the {7} transaction?
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.dashboard.avgPrice90=90 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.dashboard.avgPrice30=30 days average BSQ/RADC trade price
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.dashboard.volumeBtc=Total trade volume in RADC
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.dashboard.averageBsqBtcPriceFromSelection=Average BSQ/RADC trade price from selected time period in chart
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.supply.tradeVolumeInBtc=Trade volume in RADC
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.supply.bsqBtcPrice=BSQ/RADC price
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.supply.btcUsdPrice=RADC/USD price
core/src/main/resources/i18n/displayStrings_ru.properties:dao.factsAndFigures.supply.btcTradeFee=RADC Trade fees
core/src/main/resources/i18n/displayStrings_ru.properties:contractWindow.btcAddresses=Биткойн-адрес покупателя RADC / продавца RADC
core/src/main/resources/i18n/displayStrings_ru.properties:contractWindow.onions=Сетевой адрес покупателя RADC / продавца RADC
core/src/main/resources/i18n/displayStrings_ru.properties:contractWindow.accountAge=Возраст счёта (покупатель/продавец RADC)
core/src/main/resources/i18n/displayStrings_ru.properties:contractWindow.numDisputes=Кол-во споров покупателя RADC / продавца RADC
core/src/main/resources/i18n/displayStrings_ru.properties:disputeSummaryWindow.payout.getsTradeAmount={0} RADC получит выплату суммы сделки
core/src/main/resources/i18n/displayStrings_ru.properties:disputeSummaryWindow.payout.getsAll=Max. payout to RADC {0}
core/src/main/resources/i18n/displayStrings_ru.properties:disputeSummaryWindow.close.msg=Ticket closed on {0}\n{1} node address: {2}\n\nSummary:\nTrade ID: {3}\nCurrency: {4}\nTrade amount: {5}\nPayout amount for RADC buyer: {6}\nPayout amount for RADC seller: {7}\n\nReason for dispute: {8}\n\nSummary notes:\n{9}\n
core/src/main/resources/i18n/displayStrings_ru.properties:emptyWalletWindow.bsq.btcBalance=Баланс в сатоши (без учёта BSQ)
core/src/main/resources/i18n/displayStrings_ru.properties:filterWindow.btcNode=Отфильтрованные узлы Биткойн (адреса + порты через запят.)
core/src/main/resources/i18n/displayStrings_ru.properties:filterWindow.preventPublicBtcNetwork=Не использовать общедоступную сеть Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:filterWindow.btcFeeReceiverAddresses=RADC fee receiver addresses
core/src/main/resources/i18n/displayStrings_ru.properties:offerDetailsWindow.minBtcAmount=Мин. количество RADC
core/src/main/resources/i18n/displayStrings_ru.properties:txDetailsWindow.btc.note=You have sent RADC.
core/src/main/resources/i18n/displayStrings_ru.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.title=Sum of all trade fees paid in RADC
core/src/main/resources/i18n/displayStrings_ru.properties:closedTradesSummaryWindow.totalTradeFeeInBtc.value={0} ({1} of total trade amount)
core/src/main/resources/i18n/displayStrings_ru.properties:feeOptionWindow.info=Вы можете оплатить комиссию за сделку в BSQ или RADC. Если вы выберите BSQ, то сумма комиссии будет ниже.
core/src/main/resources/i18n/displayStrings_ru.properties:feeOptionWindow.useRADC=Использовать ВТС
core/src/main/resources/i18n/displayStrings_ru.properties:feeOptionWindow.btcFeeWithFiatAndPercentage={0} (≈ {1} / {2})
core/src/main/resources/i18n/displayStrings_ru.properties:feeOptionWindow.btcFeeWithPercentage={0} ({1})
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.notSufficientConnectionsToBtcNetwork=Необходимо дождаться не менее {0} соединений с сетью Биткойн.
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.insufficientBtcFundsForBsqTx=У вас недостаточно RADC для оплаты комиссии майнера за эту транзакцию.\nПополните свой кошелек RADC.\nНе хватает: {0}
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.btcChangeBelowDustException=This transaction creates a change output which is below dust limit (546 Satoshi) and would be rejected by the Bitcoin network.\n\nYou need to add the dust amount to your sending amount to avoid to generate a dust output.\n\nThe dust output is {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.insufficientBsqFundsForBtcFeePayment=You''ll need more BSQ to do this transaction—the last 5.46 BSQ in your wallet cannot be used to pay trade fees because of dust limits in the Bitcoin protocol.\n\nYou can either buy more BSQ or pay trade fees with RADC.\n\nMissing funds: {0}
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.noBsqFundsForBtcFeePayment=В вашем кошельке BSQ недостаточно средств для оплаты комиссии за сделку в BSQ.
core/src/main/resources/i18n/displayStrings_ru.properties:popup.warning.burnRADC=Данную транзакцию невозможно завершить, так как плата за нее ({0}) превышает сумму перевода ({1}). Подождите, пока плата за транзакцию не снизится или пока у вас не появится больше RADC для завершения перевода.
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_MAINNET=Осн. сеть Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_TESTNET=Тестовая сеть Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_REGTEST=Режим регрессионного тестирования в сети Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_DAO_TESTNET=Тестовая сеть ДАО Биткойн (устаревшая)
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_DAO_BETANET=Bisq DAO Betanet (Bitcoin Mainnet)
core/src/main/resources/i18n/displayStrings_ru.properties:RADC_DAO_REGTEST=Режим регрессионного тестирования ДАО Биткойн
core/src/main/resources/i18n/displayStrings_ru.properties:payment.makeOfferToUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- make offers >0.01 RADC, so you only deal with signed/trusted buyers\n- keep any offers to sell <0.01 RADC to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_ru.properties:payment.takeOfferFromUnsignedAccount.warning=With the recent rise in RADC price, beware that selling 0.01 RADC or less incurs higher risk than before.\n\nIt is highly recommended to either:\n- take offers from signed buyers only\n- keep trades with unsigned/untrusted buyers to around ~100 USD in value, as this value has (historically) discouraged scammers\n\nBisq developers are working on better ways to secure the payment account model for such smaller trades. Join the discussion here: [HYPERLINK:https://github.com/bisq-network/bisq/discussions/5339].
core/src/main/resources/i18n/displayStrings_ru.properties:payment.moneyGram.info=When using MoneyGram the RADC buyer has to send the Authorisation number and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, country, state and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.westernUnion.info=When using Western Union the RADC buyer has to send the MTCN (tracking number) and a photo of the receipt by email to the RADC seller. The receipt must clearly show the seller's full name, city, country and the amount. The seller's email will be displayed to the buyer during the trade process.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.halCash.info=Используя HalCash, покупатель RADC обязуется отправить продавцу RADC код HalCash через СМС с мобильного телефона.\n\nУбедитесь, что не вы не превысили максимальную сумму, которую ваш банк позволяет отправить с HalCash. Минимальная сумма на вывод средств составляет 10 EUR, а и максимальная — 600 EUR. При повторном выводе средств лимит составляет 3000 EUR на получателя в день и 6000 EUR на получателя в месяц. Просьба сверить эти лимиты с вашим банком и убедиться, что лимиты банка соответствуют лимитам, указанным здесь.\n\nВыводимая сумма должна быть кратна 10 EUR, так как другие суммы снять из банкомата невозможно. Приложение само отрегулирует сумму RADC, чтобы она соответствовала сумме в EUR, во время создания или принятия предложения. Вы не сможете использовать текущий рыночный курс, так как сумма в EUR будет меняться с изменением курса.\n\nВ случае спора покупателю RADC необходимо предоставить доказательство отправки EUR.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.celpay.info.account=Please make sure to include the email your Celsius account is registered to. This will ensure that when you send funds they show from the correct account and when you receive funds they will be credited to your account.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.celpay.info.buyer=Please send payment only to the email address provided by the RADC Seller by sending a payment link.\n\nCelPay is limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Buyers can send any matching currency stablecoin to the RADC Seller.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.celpay.info.seller=RADC Sellers should expect to receive payment via a secure payment link. Please make sure the email payment link contains the email address provided by the RADC Buyer.\n\nCelPay users are limited to sending $2,500 (or other currency/crypto equivalent) in 24 hours.\n\nTrades above CelPay account limits will likely have to take place over more than one day, or, be cancelled.\n\nCelPay supports multiple stablecoins:\n\n● USD Stablecoins; DAI, TrueUSD, USDC, ZUSD, BUSD, GUSD, PAX, USDT (ERC20)\n● CAD Stablecoins; TrueCAD\n● GBP Stablecoins; TrueGBP\n● HKD Stablecoins; TrueHKD\n● AUD Stablecoins; TrueAUD\n\nRADC Sellers should expect to receive any matching currency stablecoin from the RADC Buyer. It is possible for the RADC Buyer to send any matching currency stablecoin.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.nequi.info.buyer=Please send payment only to the phone number provided in the RADC Seller's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.nequi.info.seller=Please check that the payment received matches the phone number provided in the RADC Buyer's Bisq account.\n\nWhen users set up a Nequi account, payment limits are set to a maximum of ~ 7,000,000 COP that can be sent per month.\n\nIf you intend to trade amount of over 7,000,000 COP per trade you will need to complete KYC with Bancolombia and pay a fee of around 15,000 COP. After this all transactions will incur a 0.4% of tax. Please ensure you are aware of the latest taxes.\n\nUsers should also be aware of account limits. Trades above Nequi account limits will likely have to be cancelled.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.bizum.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can send using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.bizum.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number as provided in Bisq.\n\nThe maximum trade size is €1,000 per payment. The maximum amount of transactions you can receive using Bizum is €2,000 Euros per day.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.pix.info.account=Please make sure to include your chosen Pix Key. There are four types of keys: CPF (Natural Persons Register) or CNPJ (National Registry of Legal Entities), e-mail address, telephone number or a random key generated by the system called a universally unique identifier (UUID). A different key must be used for each Pix account you have. Individuals can create up to five keys for each account they own.\n\nWhen trading on Bisq, RADC Buyers should use their Pix Keys as the payment description so that it is easy for the RADC Sellers to identify the payment as coming from themselves.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.pix.info.buyer=Please send payment only the Pix Key provided in the RADC Seller's Bisq account.\n\nPlease use your Pix Key as the payment reference so that it is easy for the RADC Seller to identify the payment as coming from yourself.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.pix.info.seller=Please check that the payment received description matches the Pix Key provided in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.monese.info.buyer=Please send payment only to the phone number provided by the RADC Seller in their Bisq account. Please leave the payment description blank.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.monese.info.seller=RADC Sellers should expect to receive payment from the phone number / name shown in the RADC Buyer's Bisq account.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.satispay.info.buyer=Please send payment only to the RADC Seller's mobile phone number as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.satispay.info.seller=Please make sure your payment is received from the RADC Buyer's mobile phone number / name as provided in Bisq.\n\nSatispay account limits are individually set. If you want to trade increased amounts you will need to contact Satispay support to increase your limits. Traders on Bisq should be aware of their limits. If you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.verse.info.buyer=Please send payment only to the username provided by the RADC Seller in their Bisq account. Please leave the payment description blank.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.verse.info.seller=RADC Sellers should expect to receive payment from the username shown in the RADC Buyer's Bisq account.\n\nVerse users are limited to sending or receiving €10,000 per year (or equivalent foreign currency amount) for accumulated payments made from or received into their payment account. This can be increased by Verse on request.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.strike.info.buyer=Please send payment only to the RADC Seller's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.strike.info.seller=Please make sure your payment is received from the RADC Buyer's Strike username as provided in Bisq.\n\nThe maximum trade size is $1,000 per payment.\n\nIf you trade over the above limits your trade might be cancelled and there could be a penalty.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.usPostalMoneyOrder.info=Trading using US Postal Money Orders (USPMO) on Bisq requires that you understand the following:\n\n- RADC buyers must write the RADC Seller’s name in both the Payer and the Payee’s fields & take a high-resolution photo of the USPMO and envelope with proof of tracking before sending.\n- RADC buyers must send the USPMO to the RADC seller with Delivery Confirmation.\n\nIn the event mediation is necessary, or if there is a trade dispute, you will be required to send the photos to the Bisq mediator or refund agent, together with the USPMO Serial Number, Post Office Number, and dollar amount, so they can verify the details on the US Post Office website.\n\nFailure to provide the required information to the Mediator or Arbitrator will result in losing the dispute case.\n\nIn all dispute cases, the USPMO sender bears 100% of the burden of responsibility in providing evidence/proof to the Mediator or Arbitrator.\n\nIf you do not understand these requirements, do not trade using USPMO on Bisq.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.cashByMail.info=Trading using cash-by-mail (CBM) on Bisq requires that you understand the following:\n\n● RADC buyer should package cash in a tamper-evident cash bag.\n● RADC buyer should film or take high-resolution photos of the cash packaging process with the address & tracking number already affixed to packaging.\n● RADC buyer should send the cash package to the RADC seller with Delivery Confirmation and appropriate Insurance.\n● RADC seller should film the opening of the package, making sure that the tracking number provided by the sender is visible in the video.\n● Offer maker must state any special terms or conditions in the 'Additional Information' field of the payment account.\n● Offer taker agrees to the offer maker's terms and conditions by taking the offer.\n\nCBM trades put the onus to act honestly squarely on both peers.\n\n● CBM trades have less verifiable actions than other fiat trades. This makes handling dispute much harder.\n● Try to resolve disputes directly with your peer using trader chat. This is your most promising route to solving any CBM dispute.\n● Mediators can consider your case and make a suggestion, but they are NOT guaranteed to help.\n● If a mediator is engaged, and if either peer rejects the mediator's suggestion, both peers' funds will be sent to a Bisq 'donation' address [HYPERLINK:https://bisq.wiki/Arbitration#Time-Locked_Payout_Transaction], and the trade will effectively be completed.\n● If a trader rejects a mediation suggestion and opens arbitration, it could lead to a loss of both the trading and the deposit funds.\n● Arbitrators will make a decision based on the evidence provided to them. Therefore, please follow and document the above processes to have evidence in case of dispute. For Cash by Mail trades the Arbitrators decision is final.\n● Reimbursement requests any lost funds resulting from Cash By Mail trades to the Bisq DAO will NOT be considered.\n\nTo be sure you fully understand the requirements of cash-by-mail trades, please see: [HYPERLINK:https://bisq.wiki/Cash_by_Mail]\n\nIf you do not understand these requirements, do not trade using CBM on Bisq.
core/src/main/resources/i18n/displayStrings_ru.properties:payment.f2f.info='Face to Face' trades have different rules and come with different risks than online transactions.\n\nThe main differences are:\n● The trading peers need to exchange information about the meeting location and time by using their provided contact details.\n● The trading peers need to bring their laptops and do the confirmation of 'payment sent' and 'payment received' at the meeting place.\n● If a maker has special 'terms and conditions' they must state those in the 'Additional information' text field in the account.\n● By taking an offer the taker agrees to the maker's stated 'terms and conditions'.\n● In case of a dispute the mediator or arbitrator cannot be of much assistance as it is usually difficult to get tamper-proof evidence of what happened at the meeting. In such cases the RADC funds might get locked indefinitely or until the trading peers come to an agreement.\n\nTo be sure you fully understand the differences with 'Face to Face' trades please read the instructions and recommendations at: [HYPERLINK:https://bisq.wiki/Face-to-face_(payment_method)]
core/src/main/resources/i18n/displayStrings_ru.properties:payment.amazonGiftCard.info=To pay with Amazon eGift Card, you will need to send an Amazon eGift Card to the RADC seller via your Amazon account. \n\nPlease see the wiki [HYPERLINK:https://bisq.wiki/Amazon_eGift_card] for further details and best practices. \n\nThree important notes:\n- try to send gift cards with amounts of 100 USD or smaller, as Amazon is known to flag larger gift cards as fraudulent\n- try to use creative, believable text for the gift card''s message (e.g., "Happy birthday Susan!") and use trader chat to tell your trading peer the reference text you picked so they can verify your payment\n- Amazon eGift Cards can only be redeemed on the Amazon website they were purchased on (e.g., a gift card purchased on amazon.it can only be redeemed on amazon.it)
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.fraction=Input will result in a bitcoin value of less than 1 satoshi
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.toLarge=Значение не может превышать {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.toSmall=Значение не может быть меньше {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.invalidAddress=Неправильный адрес. Проверьте формат адреса.
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.exceedsMaxTradeLimit=Ваш торговый лимит составляет {0}.
core/src/main/resources/i18n/displayStrings_ru.properties:validation.btc.invalidFormat=Invalid format for a Bitcoin address.
core/src/main/resources/help/gettransaction-help.txt:Returns a very brief summary of a RADC transaction created by the Bisq server.
core/src/main/resources/help/gettransaction-help.txt:		The ID of the RADC transaction.
core/src/main/resources/help/verifybsqsenttoaddress-help.txt:before a BSQ seller sends a confirmpaymentreceived message for a BSQ/RADC trade.
core/src/main/resources/help/getfundingaddresses-help.txt:getfundingaddresses - list RADC receiving address
core/src/main/resources/help/getfundingaddresses-help.txt:Returns a list of receiving RADC addresses.
core/src/main/resources/help/confirmpaymentreceived-help.txt:After the seller receives payment from the RADC buyer, confirmpaymentreceived notifies
core/src/main/resources/help/confirmpaymentreceived-help.txt:the buyer the payment has arrived.  The seller can release locked RADC only after the
core/src/main/resources/help/confirmpaymentreceived-help.txt:A RADC seller has taken an offer with ID 83e8b2e2-51b6-4f39-a748-3ebd29c22aea, and has recently
core/src/main/resources/help/gettrade-help.txt:gettrade - get a buy or sell RADC trade
core/src/main/resources/help/getaddressbalance-help.txt:getaddressbalance - get btc address balance
core/src/main/resources/help/getaddressbalance-help.txt:		--address=<btc-address>
core/src/main/resources/help/getaddressbalance-help.txt:Returns the balance of a RADC address in the Bisq server's wallet.
core/src/main/resources/help/getaddressbalance-help.txt:--address=<btc-address>
core/src/main/resources/help/getaddressbalance-help.txt:		The RADC address.
core/src/main/resources/help/closetrade-help.txt:The alternative way to close a trade is to send the received RADC to an external
core/src/main/resources/help/closetrade-help.txt:RADC wallet, using the withdrawfunds command.
core/src/main/resources/help/closetrade-help.txt:The RADC buyer or seller closes out trade 83e8b2e2-51b6-4f39-a748-3ebd29c22aea:
core/src/main/resources/help/getmyoffers-help.txt:getmyoffers - get your own buy or sell RADC offers for a fiat currency
core/src/main/resources/help/getmyoffers-help.txt:		The three letter code for the fiat used to buy or sell RADC, e.g., EUR, USD, BRL, ...
core/src/main/resources/help/getoffer-help.txt:getoffer - get an offer to buy or sell RADC
core/src/main/resources/help/getmyoffer-help.txt:getmyoffer - get your offer to buy or sell RADC
core/src/main/resources/help/createcryptopaymentacct-help.txt:		The altcoin address to be used receive cryptocurrency payment when selling RADC.
core/src/main/resources/help/sendbtc-help.txt:sendbtc
core/src/main/resources/help/sendbtc-help.txt:sendbtc - send RADC to an external wallet
core/src/main/resources/help/sendbtc-help.txt:sendbtc
core/src/main/resources/help/sendbtc-help.txt:		--address=<btc-address>
core/src/main/resources/help/sendbtc-help.txt:		--amount=<btc-amount>
core/src/main/resources/help/sendbtc-help.txt:Send RADC from your Bisq wallet to an external RADC address.
core/src/main/resources/help/sendbtc-help.txt:        The destination RADC address for the send transaction.
core/src/main/resources/help/sendbtc-help.txt:		The amount of RADC to send.
core/src/main/resources/help/sendbtc-help.txt:		An optional memo to be saved with the send btc transaction.
core/src/main/resources/help/sendbtc-help.txt:Send 0.10 RADC to address bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 with a default
core/src/main/resources/help/sendbtc-help.txt:$ ./bisq-cli --password=xyz --port=9998 sendbtc --address=bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 --amount=0.10
core/src/main/resources/help/sendbtc-help.txt:Send 0.05 RADC to address bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 with a transaction
core/src/main/resources/help/sendbtc-help.txt:$ ./bisq-cli --password=xyz --port=9998 sendbtc --address=bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 --amount=0.05 \
core/src/main/resources/help/sendbtc-help.txt:Send 0.005 RADC to address bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 with a transaction
core/src/main/resources/help/sendbtc-help.txt:$ ./bisq-cli --password=xyz --port=9998 sendbtc --address=bcrt1qygvsqmyt8jyhtp7l3zwqm7s7v3nar6vkc2luz3 --amount=0.005 \
core/src/main/resources/help/takeoffer-help.txt:takeoffer - take an offer to buy or sell RADC
core/src/main/resources/help/takeoffer-help.txt:		[--fee-currency=<btc|bsq>]
core/src/main/resources/help/takeoffer-help.txt:        The takeoffer command only requires an offer-id parameter, and sufficient BSQ and RADC
core/src/main/resources/help/takeoffer-help.txt:		The wallet currency used to pay the Bisq trade taker fee (BSQ|RADC).  Default is RADC
core/src/main/resources/help/confirmpaymentstarted-help.txt:After the buyer initiates payment to the RADC seller, confirmpaymentstarted notifies
core/src/main/resources/help/confirmpaymentstarted-help.txt:A RADC buyer has taken an offer with ID 83e8b2e2-51b6-4f39-a748-3ebd29c22aea, and has recently
core/src/main/resources/help/editoffer-help.txt:editoffer - edit an existing offer to buy or sell RADC
core/src/main/resources/help/editoffer-help.txt:		[--trigger-price=<btc-price>]
core/src/main/resources/help/editoffer-help.txt:		[--fixed-price=<btc-price>]
core/src/main/resources/help/editoffer-help.txt:        Changes the % above or below market RADC price, e.g., 1.00 (1%).
core/src/main/resources/help/editoffer-help.txt:        Changes the fixed RADC price in fiat used to buy or sell RADC, e.g., 34000 (USD).
core/src/main/resources/help/editoffer-help.txt:        A buy RADC offer is de-activated when the market price rises above the trigger-price.
core/src/main/resources/help/editoffer-help.txt:        A sell RADC offer is de-activated when the market price falls below the trigger-price.
core/src/main/resources/help/getbtcprice-help.txt:getbtcprice
core/src/main/resources/help/getbtcprice-help.txt:getbtcprice - get current btc market price
core/src/main/resources/help/getbtcprice-help.txt:getbtcprice
core/src/main/resources/help/getbtcprice-help.txt:Returns the current market RADC price for the given currency-code.
core/src/main/resources/help/getbtcprice-help.txt:Get the current RADC market price in Euros:
core/src/main/resources/help/getbtcprice-help.txt:$ ./bisq-cli --password=xyz --port=9998 getbtcprice --currency-code=eur
core/src/main/resources/help/getbtcprice-help.txt:Get the current RADC market price in Brazilian Reais:
core/src/main/resources/help/getbtcprice-help.txt:$ ./bisq-cli --password=xyz --port=9998 getbtcprice --currency-code=brl
core/src/main/resources/help/canceloffer-help.txt:canceloffer - cancel an existing offer to buy or sell RADC
core/src/main/resources/help/getoffers-help.txt:getoffers - get available buy or sell RADC offers for a fiat currency
core/src/main/resources/help/getoffers-help.txt:		The three letter code for the fiat used to buy or sell RADC, e.g., EUR, USD, BRL, ...
core/src/main/resources/help/getoffers-help.txt:To view available offers to BUY RADC with BRL, created by other users with the same
core/src/main/resources/help/getoffers-help.txt:To view available offers to SELL RADC with EUR, created by other users having at
core/src/main/resources/help/withdrawfunds-help.txt:withdrawfunds - send RADC received during a trade to an external RADC wallet and close trade
core/src/main/resources/help/withdrawfunds-help.txt:		--address=<btc-address>
core/src/main/resources/help/withdrawfunds-help.txt:A RADC buyer completes the final step in the trade protocol by sending received RADC to
core/src/main/resources/help/withdrawfunds-help.txt:an external RADC wallet.
core/src/main/resources/help/withdrawfunds-help.txt:The alternative way to close out the trade is to keep the received RADC in the Bisq wallet
core/src/main/resources/help/withdrawfunds-help.txt:		The destination btc address for the btc transaction.
core/src/main/resources/help/withdrawfunds-help.txt:		An optional memo to be saved with the btc transaction.
core/src/main/resources/help/withdrawfunds-help.txt:A RADC seller has informed the buyer that fiat payment has been received for trade with ID
core/src/main/resources/help/withdrawfunds-help.txt:83e8b2e2-51b6-4f39-a748-3ebd29c22aea, and locked RADC has been released to the buyer.
core/src/main/resources/help/withdrawfunds-help.txt:The RADC buyer closes out the trade by sending the received RADC to an external RADC wallet:
core/src/main/resources/help/withdrawfunds-help.txt:A seller sends a trade's RADC proceeds to an external wallet, and includes an optional memo:
core/src/main/resources/help/createoffer-help.txt:createoffer - create offer to buy or sell RADC
core/src/main/resources/help/createoffer-help.txt:		--amount=<btc-amount>
core/src/main/resources/help/createoffer-help.txt:		--min-amount=<btc-amount>
core/src/main/resources/help/createoffer-help.txt:		--fixed-price=<btc-price> | --market-price-margin=<percent>
core/src/main/resources/help/createoffer-help.txt:		[--fee-currency=<bsq|btc>]
core/src/main/resources/help/createoffer-help.txt:Create and place an offer to buy or sell RADC.  There are two types of offers.
core/src/main/resources/help/createoffer-help.txt:        RADC and/or BSQ to cover the trade amount and maker fee.
core/src/main/resources/help/createoffer-help.txt:		The amount of RADC to buy or sell, e.g., 0.125.
core/src/main/resources/help/createoffer-help.txt:		The minimum amount of RADC to buy or sell, e.g., 0.006.
core/src/main/resources/help/createoffer-help.txt:		The three-letter code for the currency used to buy or sell RADC, e.g., BSQ, EUR, USD, BRL, ...
core/src/main/resources/help/createoffer-help.txt:		The wallet currency used to pay the Bisq trade maker fee (BSQ|RADC).  Default is RADC
core/src/main/resources/help/createoffer-help.txt:		The fixed RADC price in fiat used to buy or sell RADC, e.g., 34000 (USD).
core/src/main/resources/help/createoffer-help.txt:		The % above or below market RADC price, e.g., 1.00 (1%).
core/src/main/resources/help/createoffer-help.txt:		The percentage of the RADC amount being traded for the security deposit, e.g., 60.0 (60%).
core/src/main/resources/help/createoffer-help.txt:To create a BUY 0.25 RADC with BSQ swap offer at a fixed BSQ price of 0.00005 BSQ per 1 RADC:
core/src/main/resources/help/createoffer-help.txt:To create a BUY 0.125 RADC with EUR offer
core/src/main/resources/help/createoffer-help.txt:To create a SELL 0.006 RADC for USD offer
core/src/main/resources/help/createoffer-help.txt:	and paying the Bisq maker trading fee in RADC:
core/src/main/resources/help/createoffer-help.txt:    --fee-currency=btc
core/src/main/resources/help/getbalance-help.txt:		[--currency-code=<bsq|btc>]
core/src/main/resources/help/getbalance-help.txt:Returns full balance information for Bisq BSQ and/or RADC wallets.
core/src/main/resources/help/getbalance-help.txt:--currency-code=<bsq|btc>
core/src/main/resources/help/getbalance-help.txt:Show full BSQ and RADC wallet balance information:
core/src/main/resources/help/getbalance-help.txt:Show full RADC wallet balance information:
core/src/main/resources/help/getbalance-help.txt:$ ./bisq-cli --password=xyz --port=9998 getbalance --currency-code=btc
core/src/main/resources/bisq.policy:  permission "java.util.PropertyPermission" "socks5ProxyBtcAddress", "read";
core/src/main/resources/bisq.policy:  permission "java.util.PropertyPermission" "useTorForBtc", "read";
core/src/main/resources/bisq.policy:  permission "java.util.PropertyPermission" "btcNodes", "read";
core/src/main/resources/bisq.policy:  permission "java.lang.RuntimePermission" "getenv.socks5ProxyBtcAddress";
core/src/main/resources/bisq.policy:  permission "java.lang.RuntimePermission" "getenv.useTorForBtc";
core/src/main/resources/bisq.policy:  permission "java.lang.RuntimePermission" "getenv.btcNodes";
